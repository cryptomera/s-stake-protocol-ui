{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_foundation",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bnb_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stake_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidity_minted",
          "type": "uint256"
        }
      ],
      "name": "FoundationFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorAddressAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorAddressRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TreasuryFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "VaultFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "WhitelistedAddressAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "WhitelistedAddressRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bnb_amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "token_amount",
          "type": "uint256"
        }
      ],
      "name": "onAddLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "token_amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bnb_amount",
          "type": "uint256"
        }
      ],
      "name": "onBnbPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "onContractBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "onLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "onPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bnb_amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "token_amount",
          "type": "uint256"
        }
      ],
      "name": "onRemoveLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "onSummary",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bnb_amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "token_amount",
          "type": "uint256"
        }
      ],
      "name": "onTokenPurchase",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_providers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_txs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addAddressToWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "addAddressesToWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "min_liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "max_tokens",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bnbBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "min_tokens",
          "type": "uint256"
        }
      ],
      "name": "bnbToTokenSwapInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokens_bought",
          "type": "uint256"
        }
      ],
      "name": "bnbToTokenSwapOutput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "foundation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bnb_sold",
          "type": "uint256"
        }
      ],
      "name": "getBnbToLiquidityInputPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bnb_sold",
          "type": "uint256"
        }
      ],
      "name": "getBnbToTokenInputPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokens_bought",
          "type": "uint256"
        }
      ],
      "name": "getBnbToTokenOutputPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "input_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "input_reserve",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "output_reserve",
          "type": "uint256"
        }
      ],
      "name": "getInputPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getLiquidityToReserveInputPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "output_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "input_reserve",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "output_reserve",
          "type": "uint256"
        }
      ],
      "name": "getOutputPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokens_sold",
          "type": "uint256"
        }
      ],
      "name": "getTokenToBnbInputPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bnb_bought",
          "type": "uint256"
        }
      ],
      "name": "getTokenToBnbOutputPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastBalance_",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "providers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "removeAddressFromWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "removeAddressesFromWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min_bnb",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min_tokens",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lock",
          "type": "address"
        }
      ],
      "name": "setLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract StakeToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokens_sold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min_bnb",
          "type": "uint256"
        }
      ],
      "name": "tokenToBnbSwapInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bnb_bought",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "max_tokens",
          "type": "uint256"
        }
      ],
      "name": "tokenToBnbSwapOutput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token_lock",
      "outputs": [
        {
          "internalType": "contract TokenLocker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTxs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trackingInterval_",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "txs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/PC/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "C:/Users/PC/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "10": "contracts/TokenLock.sol",
    "11": "interfaces/IPancakeSwapPair.sol",
    "13": "interfaces/IToken.sol",
    "15": "interfaces/IVault.sol",
    "2": "C:/Users/PC/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "3": "C:/Users/PC/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "4": "C:/Users/PC/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "5": "C:/Users/PC/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "6": "C:/Users/PC/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "7": "C:/Users/PC/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
    "8": "contracts/StakeFountain.sol",
    "9": "contracts/StakeToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/StakeFountain.sol",
    "exportedSymbols": {
      "Address": [
        4506
      ],
      "Context": [
        4108
      ],
      "ERC20": [
        2632
      ],
      "IERC20": [
        4186
      ],
      "IERC20Metadata": [
        4211
      ],
      "IPancakeSwapPair": [
        4748
      ],
      "IPinkAntiBot": [
        4765
      ],
      "IToken": [
        4860
      ],
      "ITokenLocker": [
        4866
      ],
      "IVault": [
        4792
      ],
      "Ownable": [
        2044
      ],
      "SafeERC20": [
        2856
      ],
      "SafeMath": [
        3168
      ],
      "StakeFountain": [
        1939
      ],
      "StakeToken": [
        3918
      ],
      "TokenLocker": [
        4086
      ]
    },
    "id": 1940,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "absolutePath": "C:/Users/PC/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1940,
        "sourceUnit": 2045,
        "src": "73:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/PC/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1940,
        "sourceUnit": 2633,
        "src": "126:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/PC/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1940,
        "sourceUnit": 2857,
        "src": "182:65:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/PC/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1940,
        "sourceUnit": 3169,
        "src": "248:57:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/StakeToken.sol",
        "file": "./StakeToken.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1940,
        "sourceUnit": 3919,
        "src": "325:26:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/TokenLock.sol",
        "file": "./TokenLock.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1940,
        "sourceUnit": 4087,
        "src": "352:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2632,
              "src": "978:5:8"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "978:5:8"
          },
          {
            "baseName": {
              "id": 11,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2044,
              "src": "985:7:8"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "985:7:8"
          }
        ],
        "canonicalName": "StakeFountain",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8,
          "nodeType": "StructuredDocumentation",
          "src": "640:311:8",
          "text": "When user swaps from STAKE to BNB, 18% of the STAKE is taxed.\n 8% of the total value to swap is converted to BNB and sent to treasury.\n 5% of the STAKE to swap is sent to vault in STAKE.\n 5% of the STAKE to swap is converted to LP token by converting half of it to BNB and then sent to foundation."
        },
        "fullyImplemented": true,
        "id": 1939,
        "linearizedBaseContracts": [
          1939,
          2044,
          2632,
          4211,
          4186,
          4108
        ],
        "name": "StakeFountain",
        "nameLocation": "961:13:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 15,
            "libraryName": {
              "id": 13,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3168,
              "src": "1005:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "999:27:8",
            "typeName": {
              "id": 14,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1018:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 19,
            "libraryName": {
              "id": 16,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2856,
              "src": "1037:9:8"
            },
            "nodeType": "UsingForDirective",
            "src": "1031:26:8",
            "typeName": {
              "id": 18,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 17,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2632,
                "src": "1051:5:8"
              },
              "referencedDeclaration": 2632,
              "src": "1051:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2632",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 22,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1093:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 1939,
            "src": "1075:23:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakeToken_$3918",
              "typeString": "contract StakeToken"
            },
            "typeName": {
              "id": 21,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20,
                "name": "StakeToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3918,
                "src": "1075:10:8"
              },
              "referencedDeclaration": 3918,
              "src": "1075:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakeToken_$3918",
                "typeString": "contract StakeToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8f798a5d",
            "id": 25,
            "mutability": "mutable",
            "name": "token_lock",
            "nameLocation": "1162:10:8",
            "nodeType": "VariableDeclaration",
            "scope": 1939,
            "src": "1143:29:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenLocker_$4086",
              "typeString": "contract TokenLocker"
            },
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "TokenLocker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4086,
                "src": "1143:11:8"
              },
              "referencedDeclaration": 4086,
              "src": "1143:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenLocker_$4086",
                "typeString": "contract TokenLocker"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61d027b3",
            "id": 27,
            "mutability": "mutable",
            "name": "treasury",
            "nameLocation": "1193:8:8",
            "nodeType": "VariableDeclaration",
            "scope": 1939,
            "src": "1178:23:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1178:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fbfa77cf",
            "id": 29,
            "mutability": "mutable",
            "name": "vault",
            "nameLocation": "1222:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 1939,
            "src": "1207:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1207:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "41fbb050",
            "id": 31,
            "mutability": "mutable",
            "name": "foundation",
            "nameLocation": "1248:10:8",
            "nodeType": "VariableDeclaration",
            "scope": 1939,
            "src": "1233:25:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1233:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "537a39bb",
            "id": 33,
            "mutability": "mutable",
            "name": "totalTxs",
            "nameLocation": "1280:8:8",
            "nodeType": "VariableDeclaration",
            "scope": 1939,
            "src": "1265:23:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1265:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7044f7a7",
            "id": 35,
            "mutability": "mutable",
            "name": "lastBalance_",
            "nameLocation": "1309:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 1939,
            "src": "1294:27:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1294:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc518205",
            "id": 38,
            "mutability": "mutable",
            "name": "trackingInterval_",
            "nameLocation": "1342:17:8",
            "nodeType": "VariableDeclaration",
            "scope": 1939,
            "src": "1327:44:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1327:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1362:9:8",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_60_by_1",
                "typeString": "int_const 60"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f8401fe6",
            "id": 40,
            "mutability": "mutable",
            "name": "providers",
            "nameLocation": "1392:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 1939,
            "src": "1377:24:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1377:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9b19251a",
            "id": 44,
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "1440:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 1939,
            "src": "1408:41:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 41,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1416:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1408:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 42,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1427:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "769d7235",
            "id": 48,
            "mutability": "mutable",
            "name": "_providers",
            "nameLocation": "1487:10:8",
            "nodeType": "VariableDeclaration",
            "scope": 1939,
            "src": "1455:42:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1463:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1455:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 46,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1474:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d596f9b4",
            "id": 52,
            "mutability": "mutable",
            "name": "_txs",
            "nameLocation": "1538:4:8",
            "nodeType": "VariableDeclaration",
            "scope": 1939,
            "src": "1503:39:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 51,
              "keyType": {
                "id": 49,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1511:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1503:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 50,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1522:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b187bd26",
            "id": 55,
            "mutability": "mutable",
            "name": "isPaused",
            "nameLocation": "1561:8:8",
            "nodeType": "VariableDeclaration",
            "scope": 1939,
            "src": "1549:27:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 53,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1549:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 54,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1572:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 63,
            "name": "onTokenPurchase",
            "nameLocation": "1603:15:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "1644:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1628:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bnb_amount",
                  "nameLocation": "1675:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1659:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token_amount",
                  "nameLocation": "1711:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1695:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1618:111:8"
            },
            "src": "1597:133:8"
          },
          {
            "anonymous": false,
            "id": 71,
            "name": "onBnbPurchase",
            "nameLocation": "1741:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "1780:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1764:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1764:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token_amount",
                  "nameLocation": "1811:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1795:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bnb_amount",
                  "nameLocation": "1849:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1833:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1833:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1754:111:8"
            },
            "src": "1735:131:8"
          },
          {
            "anonymous": false,
            "id": 79,
            "name": "onAddLiquidity",
            "nameLocation": "1877:14:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "1917:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1901:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1901:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bnb_amount",
                  "nameLocation": "1951:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1935:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1935:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token_amount",
                  "nameLocation": "1987:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1971:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1891:114:8"
            },
            "src": "1871:135:8"
          },
          {
            "anonymous": false,
            "id": 87,
            "name": "onRemoveLiquidity",
            "nameLocation": "2017:17:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "2060:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "2044:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2044:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bnb_amount",
                  "nameLocation": "2094:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "2078:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2078:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token_amount",
                  "nameLocation": "2130:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "2114:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2114:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2034:114:8"
            },
            "src": "2011:138:8"
          },
          {
            "anonymous": false,
            "id": 93,
            "name": "onLiquidity",
            "nameLocation": "2160:11:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "2188:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "2172:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2172:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2214:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "2198:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2198:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2171:50:8"
            },
            "src": "2154:68:8"
          },
          {
            "anonymous": false,
            "id": 97,
            "name": "onContractBalance",
            "nameLocation": "2233:17:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "2259:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "2251:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2251:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2250:17:8"
            },
            "src": "2227:41:8"
          },
          {
            "anonymous": false,
            "id": 101,
            "name": "onPrice",
            "nameLocation": "2279:7:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2295:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2287:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2287:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2286:15:8"
            },
            "src": "2273:29:8"
          },
          {
            "anonymous": false,
            "id": 107,
            "name": "onSummary",
            "nameLocation": "2313:9:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "2331:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "2323:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2323:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2350:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "2342:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2342:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2322:34:8"
            },
            "src": "2307:50:8"
          },
          {
            "anonymous": false,
            "id": 111,
            "name": "OperatorAddressAdded",
            "nameLocation": "2368:20:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "2397:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "2389:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2389:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2388:18:8"
            },
            "src": "2362:45:8"
          },
          {
            "anonymous": false,
            "id": 115,
            "name": "OperatorAddressRemoved",
            "nameLocation": "2418:22:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "2449:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "2441:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2441:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2440:18:8"
            },
            "src": "2412:47:8"
          },
          {
            "anonymous": false,
            "id": 119,
            "name": "TreasuryFee",
            "nameLocation": "2470:11:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2490:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "2482:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2482:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2481:16:8"
            },
            "src": "2464:34:8"
          },
          {
            "anonymous": false,
            "id": 123,
            "name": "VaultFee",
            "nameLocation": "2509:8:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2526:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2518:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2518:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2517:16:8"
            },
            "src": "2503:31:8"
          },
          {
            "anonymous": false,
            "id": 131,
            "name": "FoundationFee",
            "nameLocation": "2545:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bnb_amount",
                  "nameLocation": "2576:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2568:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2568:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stake_amount",
                  "nameLocation": "2604:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2596:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2596:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "liquidity_minted",
                  "nameLocation": "2634:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2626:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2626:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2558:98:8"
            },
            "src": "2539:118:8"
          },
          {
            "anonymous": false,
            "id": 135,
            "name": "WhitelistedAddressAdded",
            "nameLocation": "2668:23:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "2700:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2692:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2692:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2691:14:8"
            },
            "src": "2662:44:8"
          },
          {
            "anonymous": false,
            "id": 139,
            "name": "WhitelistedAddressRemoved",
            "nameLocation": "2717:25:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "2751:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "2743:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2743:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2742:14:8"
            },
            "src": "2711:46:8"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "2986:171:8",
              "statements": [
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 154,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2996:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakeToken_$3918",
                        "typeString": "contract StakeToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 156,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "3015:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 155,
                        "name": "StakeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3918,
                        "src": "3004:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakeToken_$3918_$",
                          "typeString": "type(contract StakeToken)"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3004:18:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakeToken_$3918",
                        "typeString": "contract StakeToken"
                      }
                    },
                    "src": "2996:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakeToken_$3918",
                      "typeString": "contract StakeToken"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2996:26:8"
                },
                {
                  "expression": {
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 160,
                      "name": "lastBalance_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3032:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 161,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3047:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3047:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3032:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "3032:30:8"
                },
                {
                  "expression": {
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 165,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3072:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 166,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "3083:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3072:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3072:20:8"
                },
                {
                  "expression": {
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 169,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3102:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 170,
                      "name": "_vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "3110:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3102:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "3102:14:8"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 173,
                      "name": "foundation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "3126:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 174,
                      "name": "_foundation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "3139:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3126:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "3126:24:8"
                }
              ]
            },
            "id": 178,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5374616b65204c5020746f6b656e",
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2959:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_aa12c7415cb3629a30525124a89201f15c421845a79310736853f746c91698c0",
                      "typeString": "literal_string \"Stake LP token\""
                    },
                    "value": "Stake LP token"
                  },
                  {
                    "hexValue": "53544f4b45",
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2977:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d1ee81884ba0af15138036bc22f5f57fd2e0e0dae064eb05105145c4eb72689a",
                      "typeString": "literal_string \"STOKE\""
                    },
                    "value": "STOKE"
                  }
                ],
                "id": 152,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 149,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2632,
                  "src": "2953:5:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2953:32:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2860:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "2852:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2852:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "_treasury",
                  "nameLocation": "2884:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "2876:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2876:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "2911:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "2903:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "_foundation",
                  "nameLocation": "2935:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "2927:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2842:110:8"
            },
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2986:0:8"
            },
            "scope": 1939,
            "src": "2831:326:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "3356:48:8",
              "statements": [
                {
                  "expression": {
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 186,
                      "name": "token_lock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "3366:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenLocker_$4086",
                        "typeString": "contract TokenLocker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 188,
                          "name": "_lock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "3391:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 187,
                        "name": "TokenLocker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4086,
                        "src": "3379:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenLocker_$4086_$",
                          "typeString": "type(contract TokenLocker)"
                        }
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3379:18:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenLocker_$4086",
                        "typeString": "contract TokenLocker"
                      }
                    },
                    "src": "3366:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenLocker_$4086",
                      "typeString": "contract TokenLocker"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "3366:31:8"
                }
              ]
            },
            "documentation": {
              "id": 179,
              "nodeType": "StructuredDocumentation",
              "src": "3186:116:8",
              "text": "@dev Sets lock address. Make sure to set a lock address after deploying.\n @param _lock token lock address"
            },
            "functionSelector": "a32088d4",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 184,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 183,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1986,
                  "src": "3346:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3346:9:8"
              }
            ],
            "name": "setLock",
            "nameLocation": "3316:7:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "_lock",
                  "nameLocation": "3332:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "3324:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3324:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3323:15:8"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3356:0:8"
            },
            "scope": 1939,
            "src": "3307:97:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "3791:161:8",
              "statements": [
                {
                  "condition": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3805:16:8",
                    "subExpression": {
                      "baseExpression": {
                        "id": 203,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "3806:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 205,
                      "indexExpression": {
                        "id": 204,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "3816:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3806:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 222,
                  "nodeType": "IfStatement",
                  "src": "3801:145:8",
                  "trueBody": {
                    "id": 221,
                    "nodeType": "Block",
                    "src": "3823:123:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 207,
                              "name": "whitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "3837:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 209,
                            "indexExpression": {
                              "id": 208,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "3847:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3837:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3855:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3837:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 212,
                        "nodeType": "ExpressionStatement",
                        "src": "3837:22:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 214,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "3902:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 213,
                            "name": "WhitelistedAddressAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3878:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3878:29:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 216,
                        "nodeType": "EmitStatement",
                        "src": "3873:34:8"
                      },
                      {
                        "expression": {
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 217,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 201,
                            "src": "3921:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3931:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3921:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 220,
                        "nodeType": "ExpressionStatement",
                        "src": "3921:14:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 194,
              "nodeType": "StructuredDocumentation",
              "src": "3591:82:8",
              "text": " @dev add an address to the whitelist\n @param addr address"
            },
            "functionSelector": "7b9417c8",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 199,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 198,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1986,
                  "src": "3746:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3746:9:8"
              }
            ],
            "name": "addAddressToWhitelist",
            "nameLocation": "3687:21:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "3717:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3709:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3708:14:8"
            },
            "returnParameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "3778:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3773:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3773:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3772:14:8"
            },
            "scope": 1939,
            "src": "3678:274:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "4172:191:8",
              "statements": [
                {
                  "body": {
                    "id": 257,
                    "nodeType": "Block",
                    "src": "4225:108:8",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 247,
                                "name": "addrs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 228,
                                "src": "4265:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 249,
                              "indexExpression": {
                                "id": 248,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 236,
                                "src": "4271:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4265:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 246,
                            "name": "addAddressToWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4243:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4243:31:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 256,
                        "nodeType": "IfStatement",
                        "src": "4239:84:8",
                        "trueBody": {
                          "id": 255,
                          "nodeType": "Block",
                          "src": "4276:47:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 251,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 233,
                                  "src": "4294:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 252,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4304:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "4294:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 254,
                              "nodeType": "ExpressionStatement",
                              "src": "4294:14:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 239,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 236,
                      "src": "4202:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 240,
                        "name": "addrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "4206:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4206:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4202:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 258,
                  "initializationExpression": {
                    "assignments": [
                      236
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4195:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "4187:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4187:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 238,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4199:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4187:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4220:3:8",
                      "subExpression": {
                        "id": 243,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "4220:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 245,
                    "nodeType": "ExpressionStatement",
                    "src": "4220:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "4182:151:8"
                },
                {
                  "expression": {
                    "id": 259,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 233,
                    "src": "4349:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 234,
                  "id": 260,
                  "nodeType": "Return",
                  "src": "4342:14:8"
                }
              ]
            },
            "documentation": {
              "id": 225,
              "nodeType": "StructuredDocumentation",
              "src": "3958:84:8",
              "text": " @dev add addresses to the whitelist\n @param addrs addresses"
            },
            "functionSelector": "e2ec6ec3",
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 231,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 230,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1986,
                  "src": "4127:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4127:9:8"
              }
            ],
            "name": "addAddressesToWhitelist",
            "nameLocation": "4056:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "addrs",
                  "nameLocation": "4097:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4080:22:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 226,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4080:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 227,
                    "nodeType": "ArrayTypeName",
                    "src": "4080:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4079:24:8"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "4159:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4154:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4154:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4153:14:8"
            },
            "scope": 1939,
            "src": "4047:316:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 293,
              "nodeType": "Block",
              "src": "4579:187:8",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 272,
                      "name": "whitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "4593:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 274,
                    "indexExpression": {
                      "id": 273,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "4603:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4593:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 290,
                  "nodeType": "IfStatement",
                  "src": "4589:147:8",
                  "trueBody": {
                    "id": 289,
                    "nodeType": "Block",
                    "src": "4610:126:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 275,
                              "name": "whitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "4624:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 277,
                            "indexExpression": {
                              "id": 276,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "4634:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4624:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4642:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4624:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 280,
                        "nodeType": "ExpressionStatement",
                        "src": "4624:23:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 282,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "4692:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 281,
                            "name": "WhitelistedAddressRemoved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "4666:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4666:31:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 284,
                        "nodeType": "EmitStatement",
                        "src": "4661:36:8"
                      },
                      {
                        "expression": {
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 285,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 270,
                            "src": "4711:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4721:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4711:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 288,
                        "nodeType": "ExpressionStatement",
                        "src": "4711:14:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 291,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 270,
                    "src": "4752:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 271,
                  "id": 292,
                  "nodeType": "Return",
                  "src": "4745:14:8"
                }
              ]
            },
            "documentation": {
              "id": 263,
              "nodeType": "StructuredDocumentation",
              "src": "4369:87:8",
              "text": " @dev remove an address from the whitelist\n @param addr address"
            },
            "functionSelector": "286dd3f5",
            "id": 294,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 268,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 267,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1986,
                  "src": "4534:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4534:9:8"
              }
            ],
            "name": "removeAddressFromWhitelist",
            "nameLocation": "4470:26:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "4505:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "4497:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4497:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4496:14:8"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "4566:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "4561:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4561:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4560:14:8"
            },
            "scope": 1939,
            "src": "4461:305:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 331,
              "nodeType": "Block",
              "src": "4996:196:8",
              "statements": [
                {
                  "body": {
                    "id": 327,
                    "nodeType": "Block",
                    "src": "5049:113:8",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 317,
                                "name": "addrs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 298,
                                "src": "5094:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 319,
                              "indexExpression": {
                                "id": 318,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 306,
                                "src": "5100:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5094:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 316,
                            "name": "removeAddressFromWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "5067:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5067:36:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 326,
                        "nodeType": "IfStatement",
                        "src": "5063:89:8",
                        "trueBody": {
                          "id": 325,
                          "nodeType": "Block",
                          "src": "5105:47:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 321,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "5123:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5133:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5123:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 324,
                              "nodeType": "ExpressionStatement",
                              "src": "5123:14:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 309,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "5026:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 310,
                        "name": "addrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "5030:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5030:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5026:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 328,
                  "initializationExpression": {
                    "assignments": [
                      306
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 306,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5019:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "5011:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 305,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5011:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 308,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5023:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5011:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5044:3:8",
                      "subExpression": {
                        "id": 313,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "5044:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 315,
                    "nodeType": "ExpressionStatement",
                    "src": "5044:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "5006:156:8"
                },
                {
                  "expression": {
                    "id": 329,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 303,
                    "src": "5178:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 304,
                  "id": 330,
                  "nodeType": "Return",
                  "src": "5171:14:8"
                }
              ]
            },
            "documentation": {
              "id": 295,
              "nodeType": "StructuredDocumentation",
              "src": "4772:89:8",
              "text": " @dev remove addresses from the whitelist\n @param addrs addresses"
            },
            "functionSelector": "24953eaa",
            "id": 332,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 301,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 300,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1986,
                  "src": "4951:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4951:9:8"
              }
            ],
            "name": "removeAddressesFromWhitelist",
            "nameLocation": "4875:28:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "addrs",
                  "nameLocation": "4921:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "4904:22:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 296,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4904:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 297,
                    "nodeType": "ArrayTypeName",
                    "src": "4904:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4903:24:8"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "4983:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "4978:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4978:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4977:14:8"
            },
            "scope": 1939,
            "src": "4866:326:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 346,
              "nodeType": "Block",
              "src": "5458:70:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5484:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "5484:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5495:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "expression": {
                          "id": 340,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5498:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5498:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 342,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5510:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5510:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 336,
                      "name": "bnbToTokenInput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "5468:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,address,address) returns (uint256)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5468:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "5468:53:8"
                }
              ]
            },
            "documentation": {
              "id": 333,
              "nodeType": "StructuredDocumentation",
              "src": "5325:101:8",
              "text": " @notice Convert BNB to Tokens.\n @dev User specifies exact input (msg.value)."
            },
            "id": 347,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5438:2:8"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5458:0:8"
            },
            "scope": 1939,
            "src": "5431:97:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "6067:241:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 360,
                            "name": "input_reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 352,
                            "src": "6085:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6101:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6085:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 363,
                            "name": "output_reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 354,
                            "src": "6106:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6123:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6106:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6085:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e56414c49445f56414c5545",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6126:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f38185948b9759248e56ec02128912506b4a23870d442e59ae3f857bcd81896c",
                          "typeString": "literal_string \"INVALID_VALUE\""
                        },
                        "value": "INVALID_VALUE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f38185948b9759248e56ec02128912506b4a23870d442e59ae3f857bcd81896c",
                          "typeString": "literal_string \"INVALID_VALUE\""
                        }
                      ],
                      "id": 359,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6077:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6077:65:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "6077:65:8"
                },
                {
                  "assignments": [
                    371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 371,
                      "mutability": "mutable",
                      "name": "numerator",
                      "nameLocation": "6160:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "6152:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 370,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6152:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 375,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 372,
                      "name": "input_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "6172:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 373,
                      "name": "output_reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "6187:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6172:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6152:49:8"
                },
                {
                  "assignments": [
                    377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 377,
                      "mutability": "mutable",
                      "name": "denominator",
                      "nameLocation": "6219:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "6211:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 376,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6211:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 381,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 378,
                      "name": "input_reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "6233:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 379,
                      "name": "input_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "6249:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6233:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6211:50:8"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 382,
                      "name": "numerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "6278:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 383,
                      "name": "denominator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "6290:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6278:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 358,
                  "id": 385,
                  "nodeType": "Return",
                  "src": "6271:30:8"
                }
              ]
            },
            "documentation": {
              "id": 348,
              "nodeType": "StructuredDocumentation",
              "src": "5534:376:8",
              "text": " @dev Pricing function for converting between BNB && Tokens without fee.\n @param input_amount Amount of BNB or Tokens being sold.\n @param input_reserve Amount of BNB or Tokens (input type) in exchange reserves.\n @param output_reserve Amount of BNB or Tokens (output type) in exchange reserves.\n @return Amount of BNB or Tokens bought."
            },
            "functionSelector": "89f2a871",
            "id": 387,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInputPrice",
            "nameLocation": "5924:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "input_amount",
                  "nameLocation": "5955:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "5947:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5947:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "input_reserve",
                  "nameLocation": "5985:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "5977:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5977:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 354,
                  "mutability": "mutable",
                  "name": "output_reserve",
                  "nameLocation": "6016:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "6008:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6008:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5937:99:8"
            },
            "returnParameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "6058:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6058:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6057:9:8"
            },
            "scope": 1939,
            "src": "5915:393:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "6850:234:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 400,
                            "name": "input_reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 392,
                            "src": "6868:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6884:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6868:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 403,
                            "name": "output_reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "6889:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6906:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6889:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6868:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 399,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6860:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6860:48:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "6860:48:8"
                },
                {
                  "assignments": [
                    410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 410,
                      "mutability": "mutable",
                      "name": "numerator",
                      "nameLocation": "6926:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 429,
                      "src": "6918:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 409,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6918:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 414,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 411,
                      "name": "input_reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "6938:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 412,
                      "name": "output_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "6954:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6938:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6918:49:8"
                },
                {
                  "assignments": [
                    416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 416,
                      "mutability": "mutable",
                      "name": "denominator",
                      "nameLocation": "6985:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 429,
                      "src": "6977:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 415,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6977:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 421,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 417,
                          "name": "output_reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "7000:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 418,
                          "name": "output_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 390,
                          "src": "7017:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7000:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 420,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6999:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6977:54:8"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 422,
                            "name": "numerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "7049:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 423,
                            "name": "denominator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "7061:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7049:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 425,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7048:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7076:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7048:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 398,
                  "id": 428,
                  "nodeType": "Return",
                  "src": "7041:36:8"
                }
              ]
            },
            "documentation": {
              "id": 388,
              "nodeType": "StructuredDocumentation",
              "src": "6314:377:8",
              "text": " @dev Pricing function for converting between BNB && Tokens without fee.\n @param output_amount Amount of BNB or Tokens being bought.\n @param input_reserve Amount of BNB or Tokens (input type) in exchange reserves.\n @param output_reserve Amount of BNB or Tokens (output type) in exchange reserves.\n @return Amount of BNB or Tokens sold."
            },
            "functionSelector": "fd11c223",
            "id": 430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOutputPrice",
            "nameLocation": "6705:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "output_amount",
                  "nameLocation": "6737:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "6729:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6729:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "input_reserve",
                  "nameLocation": "6768:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "6760:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6760:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "output_reserve",
                  "nameLocation": "6799:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "6791:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6791:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6719:100:8"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "6841:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6841:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6840:9:8"
            },
            "scope": 1939,
            "src": "6696:388:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "7643:1066:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 445,
                            "name": "_bnb_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "7661:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7673:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7661:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 448,
                            "name": "_min_tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "7678:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7692:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7678:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7661:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736f6c6420616e64206d696e2030",
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7695:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_116ac810c4e7de8a7314e26a2b620237bad37061b1244294045a0981e2ecf645",
                          "typeString": "literal_string \"sold and min 0\""
                        },
                        "value": "sold and min 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_116ac810c4e7de8a7314e26a2b620237bad37061b1244294045a0981e2ecf645",
                          "typeString": "literal_string \"sold and min 0\""
                        }
                      ],
                      "id": 444,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7653:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7653:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "7653:59:8"
                },
                {
                  "assignments": [
                    456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 456,
                      "mutability": "mutable",
                      "name": "bnb_sold",
                      "nameLocation": "7730:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 558,
                      "src": "7722:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 455,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7722:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 457,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7722:16:8"
                },
                {
                  "assignments": [
                    459
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 459,
                      "mutability": "mutable",
                      "name": "treasury_fee",
                      "nameLocation": "7756:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 558,
                      "src": "7748:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 458,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7748:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 460,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7748:20:8"
                },
                {
                  "assignments": [
                    462
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 462,
                      "mutability": "mutable",
                      "name": "token_reserve",
                      "nameLocation": "7786:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 558,
                      "src": "7778:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 461,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7778:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 470,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 467,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7826:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          ],
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7818:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 465,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7818:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7818:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 463,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "7802:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "7802:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7802:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7778:54:8"
                },
                {
                  "assignments": [
                    472
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 472,
                      "mutability": "mutable",
                      "name": "bnb_reserve",
                      "nameLocation": "7850:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 558,
                      "src": "7842:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 471,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7842:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 478,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 475,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "7872:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakeFountain_$1939",
                            "typeString": "contract StakeFountain"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakeFountain_$1939",
                            "typeString": "contract StakeFountain"
                          }
                        ],
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7864:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 473,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7864:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7864:13:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "7864:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7842:43:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 479,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "7900:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 481,
                      "indexExpression": {
                        "id": 480,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "7910:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7900:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 482,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "7921:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 484,
                      "indexExpression": {
                        "id": 483,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "7931:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7921:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7900:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 506,
                    "nodeType": "Block",
                    "src": "7995:109:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 491,
                            "name": "treasury_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "8009:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 494,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "33",
                                    "id": 492,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8025:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 493,
                                    "name": "bnb_sold",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 456,
                                    "src": "8029:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8025:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 495,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8024:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8041:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "8024:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8009:35:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 499,
                        "nodeType": "ExpressionStatement",
                        "src": "8009:35:8"
                      },
                      {
                        "expression": {
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 500,
                            "name": "bnb_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 456,
                            "src": "8058:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 501,
                              "name": "_bnb_sold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 433,
                              "src": "8069:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 502,
                              "name": "treasury_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 459,
                              "src": "8081:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8069:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8058:35:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 505,
                        "nodeType": "ExpressionStatement",
                        "src": "8058:35:8"
                      }
                    ]
                  },
                  "id": 507,
                  "nodeType": "IfStatement",
                  "src": "7896:208:8",
                  "trueBody": {
                    "id": 490,
                    "nodeType": "Block",
                    "src": "7944:45:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 486,
                            "name": "bnb_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 456,
                            "src": "7958:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 487,
                            "name": "_bnb_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "7969:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7958:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 489,
                        "nodeType": "ExpressionStatement",
                        "src": "7958:20:8"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    509
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 509,
                      "mutability": "mutable",
                      "name": "tokens_bought",
                      "nameLocation": "8121:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 558,
                      "src": "8113:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 508,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8113:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 517,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 511,
                        "name": "bnb_sold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "8164:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 512,
                          "name": "bnb_reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "8186:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 513,
                          "name": "bnb_sold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 456,
                          "src": "8200:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8186:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 515,
                        "name": "token_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 462,
                        "src": "8222:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 510,
                      "name": "getInputPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 387,
                      "src": "8137:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8137:108:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8113:132:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 519,
                          "name": "tokens_bought",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 509,
                          "src": "8264:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 520,
                          "name": "_min_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "8281:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8264:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e735f626f75676874203e3d206d696e5f746f6b656e73",
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8294:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0ab2b73cec027184cfe9df5a8904d8f665aa2e93954581fd4dbd2c37607e4ba",
                          "typeString": "literal_string \"tokens_bought >= min_tokens\""
                        },
                        "value": "tokens_bought >= min_tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0ab2b73cec027184cfe9df5a8904d8f665aa2e93954581fd4dbd2c37607e4ba",
                          "typeString": "literal_string \"tokens_bought >= min_tokens\""
                        }
                      ],
                      "id": 518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8256:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8256:68:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "8256:68:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 528,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "8423:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 529,
                            "name": "tokens_bought",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 509,
                            "src": "8435:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 526,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "8408:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeToken_$3918",
                              "typeString": "contract StakeToken"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2168,
                          "src": "8408:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8408:41:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e7366657220657272",
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8451:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02063d9f48e218de75e99aeade6cd2ccb35e2786e20157b4fc0e27b1ddfd66df",
                          "typeString": "literal_string \"transfer err\""
                        },
                        "value": "transfer err"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02063d9f48e218de75e99aeade6cd2ccb35e2786e20157b4fc0e27b1ddfd66df",
                          "typeString": "literal_string \"transfer err\""
                        }
                      ],
                      "id": 525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8400:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8400:66:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "8400:66:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 534,
                      "name": "treasury_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "8480:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8495:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8480:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 541,
                  "nodeType": "IfStatement",
                  "src": "8476:55:8",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 538,
                          "name": "treasury_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 459,
                          "src": "8518:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 537,
                        "name": "transferTreasuryFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "8498:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8498:33:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 540,
                    "nodeType": "ExpressionStatement",
                    "src": "8498:33:8"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 543,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "8563:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 544,
                        "name": "_bnb_sold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "8571:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 545,
                        "name": "tokens_bought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "8582:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 542,
                      "name": "onTokenPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "8547:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8547:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "EmitStatement",
                  "src": "8542:54:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 549,
                          "name": "bnbBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1419,
                          "src": "8629:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8629:12:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 548,
                      "name": "onContractBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "8611:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8611:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 552,
                  "nodeType": "EmitStatement",
                  "src": "8606:36:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 553,
                      "name": "trackGlobalStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "8653:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8653:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "8653:18:8"
                },
                {
                  "expression": {
                    "id": 556,
                    "name": "tokens_bought",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 509,
                    "src": "8689:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 443,
                  "id": 557,
                  "nodeType": "Return",
                  "src": "8682:20:8"
                }
              ]
            },
            "documentation": {
              "id": 431,
              "nodeType": "StructuredDocumentation",
              "src": "7090:383:8",
              "text": " @dev Function to convert BNB into STAKE. Set an amount of BNB to obtain an amount of tokens. Fees included.\n @param _bnb_sold Amount of BNB that user has paid to buy tokens.\n @param _min_tokens Amount of minimum tokens after slippage.\n @param _buyer address that paid for the tokens.\n @param _recipient address that will receive the tokens."
            },
            "id": 559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bnbToTokenInput",
            "nameLocation": "7487:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 433,
                  "mutability": "mutable",
                  "name": "_bnb_sold",
                  "nameLocation": "7520:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "7512:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7512:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "_min_tokens",
                  "nameLocation": "7547:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "7539:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7539:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "7576:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "7568:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7568:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "7600:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "7592:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7592:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7502:114:8"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "7634:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7634:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7633:9:8"
            },
            "scope": 1939,
            "src": "7478:1231:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 577,
              "nodeType": "Block",
              "src": "9057:86:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 568,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9090:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "9090:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 570,
                        "name": "min_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 562,
                        "src": "9101:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 571,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9113:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9113:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 573,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9125:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9125:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 567,
                      "name": "bnbToTokenInput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "9074:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,address,address) returns (uint256)"
                      }
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9074:62:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 566,
                  "id": 576,
                  "nodeType": "Return",
                  "src": "9067:69:8"
                }
              ]
            },
            "documentation": {
              "id": 560,
              "nodeType": "StructuredDocumentation",
              "src": "8715:227:8",
              "text": " @notice Convert BNB to Tokens.\n @dev User specifies exact input (msg.value) && minimum output.\n @param min_tokens Minimum Tokens bought. Considers slippage.\n @return Amount of Tokens bought."
            },
            "functionSelector": "b5695026",
            "id": 578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bnbToTokenSwapInput",
            "nameLocation": "8956:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 562,
                  "mutability": "mutable",
                  "name": "min_tokens",
                  "nameLocation": "8984:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "8976:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8976:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8975:20:8"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "9044:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9044:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9043:9:8"
            },
            "scope": 1939,
            "src": "8947:196:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 718,
              "nodeType": "Block",
              "src": "9685:1090:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 593,
                            "name": "tokens_bought",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "9703:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9719:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9703:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 596,
                            "name": "max_bnb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "9724:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9734:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9724:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9703:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9695:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9695:41:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 601,
                  "nodeType": "ExpressionStatement",
                  "src": "9695:41:8"
                },
                {
                  "assignments": [
                    603
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 603,
                      "mutability": "mutable",
                      "name": "total_bnb_sold",
                      "nameLocation": "9754:14:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "9746:22:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 602,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9746:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 604,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9746:22:8"
                },
                {
                  "assignments": [
                    606
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 606,
                      "mutability": "mutable",
                      "name": "treasury_fee",
                      "nameLocation": "9786:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "9778:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 605,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9778:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 607,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9778:20:8"
                },
                {
                  "assignments": [
                    609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 609,
                      "mutability": "mutable",
                      "name": "token_reserve",
                      "nameLocation": "9816:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "9808:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 608,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9808:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 617,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 614,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9856:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          ],
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9848:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 612,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9848:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9848:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 610,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "9832:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "9832:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9832:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9808:54:8"
                },
                {
                  "assignments": [
                    619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 619,
                      "mutability": "mutable",
                      "name": "bnb_reserve",
                      "nameLocation": "9880:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "9872:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 618,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9872:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 625,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 622,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "9902:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakeFountain_$1939",
                            "typeString": "contract StakeFountain"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakeFountain_$1939",
                            "typeString": "contract StakeFountain"
                          }
                        ],
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9894:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9894:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9894:13:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "9894:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9872:43:8"
                },
                {
                  "assignments": [
                    627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 627,
                      "mutability": "mutable",
                      "name": "bnb_sold",
                      "nameLocation": "9933:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "9925:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 626,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9925:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 635,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 629,
                        "name": "tokens_bought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "9972:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 630,
                          "name": "bnb_reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 619,
                          "src": "9999:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 631,
                          "name": "max_bnb",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 583,
                          "src": "10013:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9999:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 633,
                        "name": "token_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "10034:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 628,
                      "name": "getOutputPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 430,
                      "src": "9944:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9944:113:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9925:132:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 636,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "10071:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 638,
                      "indexExpression": {
                        "id": 637,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "10081:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10071:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 639,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "10091:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 641,
                      "indexExpression": {
                        "id": 640,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "10101:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10091:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10071:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 666,
                    "nodeType": "Block",
                    "src": "10169:118:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 648,
                            "name": "total_bnb_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 603,
                            "src": "10183:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 651,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "313030",
                                    "id": 649,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10201:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 650,
                                    "name": "bnb_sold",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 627,
                                    "src": "10207:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10201:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 652,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10200:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "3937",
                              "id": 653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10219:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_97_by_1",
                                "typeString": "int_const 97"
                              },
                              "value": "97"
                            },
                            "src": "10200:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10183:38:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 656,
                        "nodeType": "ExpressionStatement",
                        "src": "10183:38:8"
                      },
                      {
                        "expression": {
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 657,
                            "name": "treasury_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "10235:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 660,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "33",
                                    "id": 658,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10251:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 659,
                                    "name": "total_bnb_sold",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 603,
                                    "src": "10255:14:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10251:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 661,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10250:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10273:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "10250:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10235:41:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 665,
                        "nodeType": "ExpressionStatement",
                        "src": "10235:41:8"
                      }
                    ]
                  },
                  "id": 667,
                  "nodeType": "IfStatement",
                  "src": "10067:220:8",
                  "trueBody": {
                    "id": 647,
                    "nodeType": "Block",
                    "src": "10113:50:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 643,
                            "name": "total_bnb_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 603,
                            "src": "10127:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 644,
                            "name": "bnb_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 627,
                            "src": "10144:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10127:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 646,
                        "nodeType": "ExpressionStatement",
                        "src": "10127:25:8"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 669,
                      "mutability": "mutable",
                      "name": "bnb_refund",
                      "nameLocation": "10351:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "10343:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 668,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10343:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 673,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 670,
                      "name": "max_bnb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 583,
                      "src": "10364:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 671,
                      "name": "total_bnb_sold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "10374:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10364:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10343:45:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 674,
                      "name": "bnb_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "10402:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10415:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10402:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 686,
                  "nodeType": "IfStatement",
                  "src": "10398:80:8",
                  "trueBody": {
                    "id": 685,
                    "nodeType": "Block",
                    "src": "10418:60:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 682,
                              "name": "bnb_refund",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "10456:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 679,
                                  "name": "buyer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 585,
                                  "src": "10440:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10432:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 677,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10432:8:8",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10432:14:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "10432:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10432:35:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 684,
                        "nodeType": "ExpressionStatement",
                        "src": "10432:35:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 690,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 587,
                            "src": "10510:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 691,
                            "name": "tokens_bought",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "10521:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 688,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "10495:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeToken_$3918",
                              "typeString": "contract StakeToken"
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2168,
                          "src": "10495:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10495:40:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10487:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10487:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "10487:49:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 695,
                      "name": "treasury_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 606,
                      "src": "10550:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10565:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10550:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 702,
                  "nodeType": "IfStatement",
                  "src": "10546:55:8",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 699,
                          "name": "treasury_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 606,
                          "src": "10588:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 698,
                        "name": "transferTreasuryFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "10568:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10568:33:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 701,
                    "nodeType": "ExpressionStatement",
                    "src": "10568:33:8"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 704,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "10632:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 705,
                        "name": "total_bnb_sold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "10639:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 706,
                        "name": "tokens_bought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "10655:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 703,
                      "name": "onTokenPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "10616:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10616:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "EmitStatement",
                  "src": "10611:58:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 710,
                        "name": "treasury_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "10696:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 709,
                      "name": "TreasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "10684:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10684:25:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 712,
                  "nodeType": "EmitStatement",
                  "src": "10679:30:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 713,
                      "name": "trackGlobalStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "10719:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10719:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 715,
                  "nodeType": "ExpressionStatement",
                  "src": "10719:18:8"
                },
                {
                  "expression": {
                    "id": 716,
                    "name": "total_bnb_sold",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 603,
                    "src": "10754:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 591,
                  "id": 717,
                  "nodeType": "Return",
                  "src": "10747:21:8"
                }
              ]
            },
            "documentation": {
              "id": 579,
              "nodeType": "StructuredDocumentation",
              "src": "9149:367:8",
              "text": " @dev Function to convert BNB into STAKE. Set an amount of STAKE get it at a price in BNB .\n @param tokens_bought Set amount of tokens\n @param max_bnb Maximum amount of BNB that can be charged for the set amount of stake.\n @param buyer address that paid for the tokens.\n @param recipient address that will receive the tokens."
            },
            "id": 719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bnbToTokenOutput",
            "nameLocation": "9530:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "tokens_bought",
                  "nameLocation": "9564:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "9556:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9556:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 583,
                  "mutability": "mutable",
                  "name": "max_bnb",
                  "nameLocation": "9595:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "9587:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9587:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "9620:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "9612:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9612:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "9643:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "9635:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9635:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9546:112:8"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "9676:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9676:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9675:9:8"
            },
            "scope": 1939,
            "src": "9521:1254:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 737,
              "nodeType": "Block",
              "src": "11107:102:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 728,
                        "name": "tokens_bought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "11153:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 729,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11168:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "11168:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 731,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11179:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11179:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 733,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11191:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11191:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 727,
                      "name": "bnbToTokenOutput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 719,
                      "src": "11136:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,address,address) returns (uint256)"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11136:66:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 726,
                  "id": 736,
                  "nodeType": "Return",
                  "src": "11117:85:8"
                }
              ]
            },
            "documentation": {
              "id": 720,
              "nodeType": "StructuredDocumentation",
              "src": "10781:207:8",
              "text": " @notice Convert BNB to Tokens.\n @dev User specifies maximum input (msg.value) && exact output.\n @param tokens_bought Amount of tokens bought.\n @return Amount of BNB sold."
            },
            "functionSelector": "1db7976f",
            "id": 738,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bnbToTokenSwapOutput",
            "nameLocation": "11002:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 722,
                  "mutability": "mutable",
                  "name": "tokens_bought",
                  "nameLocation": "11031:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 738,
                  "src": "11023:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11023:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11022:23:8"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 738,
                  "src": "11094:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11094:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11093:9:8"
            },
            "scope": 1939,
            "src": "10993:216:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 857,
              "nodeType": "Block",
              "src": "12065:880:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 753,
                            "name": "tokens_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 741,
                            "src": "12083:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12097:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12083:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 756,
                            "name": "min_bnb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 743,
                            "src": "12102:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12112:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12102:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12083:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12075:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12075:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "12075:39:8"
                },
                {
                  "assignments": [
                    763
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 763,
                      "mutability": "mutable",
                      "name": "token_reserve",
                      "nameLocation": "12132:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 857,
                      "src": "12124:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 762,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12124:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 771,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 768,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12172:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          ],
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12164:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 766,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12164:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12164:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 764,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "12148:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "12148:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12148:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12124:54:8"
                },
                {
                  "assignments": [
                    773
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 773,
                      "mutability": "mutable",
                      "name": "bnb_reserve",
                      "nameLocation": "12196:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 857,
                      "src": "12188:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 772,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12188:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 779,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 776,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "12218:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakeFountain_$1939",
                            "typeString": "contract StakeFountain"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakeFountain_$1939",
                            "typeString": "contract StakeFountain"
                          }
                        ],
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12210:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 774,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12210:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12210:13:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "12210:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12188:43:8"
                },
                {
                  "assignments": [
                    781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 781,
                      "mutability": "mutable",
                      "name": "total_bnb_bought",
                      "nameLocation": "12249:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 857,
                      "src": "12241:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 780,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12241:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 782,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12241:24:8"
                },
                {
                  "assignments": [
                    784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 784,
                      "mutability": "mutable",
                      "name": "bnb_bought",
                      "nameLocation": "12283:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 857,
                      "src": "12275:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 783,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12275:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 790,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 786,
                        "name": "tokens_sold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "12323:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 787,
                        "name": "token_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "12348:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 788,
                        "name": "bnb_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "12375:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 785,
                      "name": "getInputPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 387,
                      "src": "12296:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12296:100:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12275:121:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 792,
                          "name": "bnb_bought",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "12414:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 793,
                          "name": "min_bnb",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 743,
                          "src": "12428:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12414:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 791,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12406:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12406:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "12406:30:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 797,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "12450:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 799,
                      "indexExpression": {
                        "id": 798,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "12460:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12450:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 800,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "12470:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 802,
                      "indexExpression": {
                        "id": 801,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "12480:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12470:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12450:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 824,
                    "nodeType": "Block",
                    "src": "12552:133:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 809,
                            "name": "total_bnb_bought",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 781,
                            "src": "12566:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 812,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3832",
                                    "id": 810,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12586:2:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_82_by_1",
                                      "typeString": "int_const 82"
                                    },
                                    "value": "82"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 811,
                                    "name": "bnb_bought",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 784,
                                    "src": "12591:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12586:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 813,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "12585:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12605:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "12585:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12566:42:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 817,
                        "nodeType": "ExpressionStatement",
                        "src": "12566:42:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 819,
                              "name": "bnb_bought",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 784,
                              "src": "12637:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 820,
                              "name": "tokens_sold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 741,
                              "src": "12649:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 821,
                              "name": "bnb_reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 773,
                              "src": "12662:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 818,
                            "name": "tokenToBnbFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1246,
                            "src": "12622:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12622:52:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 823,
                        "nodeType": "ExpressionStatement",
                        "src": "12622:52:8"
                      }
                    ]
                  },
                  "id": 825,
                  "nodeType": "IfStatement",
                  "src": "12446:239:8",
                  "trueBody": {
                    "id": 808,
                    "nodeType": "Block",
                    "src": "12492:54:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 804,
                            "name": "total_bnb_bought",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 781,
                            "src": "12506:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 805,
                            "name": "bnb_bought",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 784,
                            "src": "12525:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12506:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 807,
                        "nodeType": "ExpressionStatement",
                        "src": "12506:29:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 831,
                        "name": "total_bnb_bought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "12722:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 828,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 747,
                            "src": "12702:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12694:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 826,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12694:8:8",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12694:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "12694:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12694:45:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 833,
                  "nodeType": "ExpressionStatement",
                  "src": "12694:45:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 837,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "12776:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 840,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "12791:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                  "typeString": "contract StakeFountain"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                  "typeString": "contract StakeFountain"
                                }
                              ],
                              "id": 839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12783:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 838,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12783:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12783:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 842,
                            "name": "tokens_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 741,
                            "src": "12798:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 835,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "12757:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeToken_$3918",
                              "typeString": "contract StakeToken"
                            }
                          },
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2244,
                          "src": "12757:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12757:53:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 834,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12749:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12749:62:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 845,
                  "nodeType": "ExpressionStatement",
                  "src": "12749:62:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 847,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "12840:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 848,
                        "name": "tokens_sold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "12847:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 849,
                        "name": "total_bnb_bought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "12860:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 846,
                      "name": "onBnbPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "12826:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12826:51:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 851,
                  "nodeType": "EmitStatement",
                  "src": "12821:56:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 852,
                      "name": "trackGlobalStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "12887:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12887:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "12887:18:8"
                },
                {
                  "expression": {
                    "id": 855,
                    "name": "total_bnb_bought",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 781,
                    "src": "12922:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 751,
                  "id": 856,
                  "nodeType": "Return",
                  "src": "12915:23:8"
                }
              ]
            },
            "documentation": {
              "id": 739,
              "nodeType": "StructuredDocumentation",
              "src": "11215:684:8",
              "text": " @dev Function to convert STAKE into BNB. Taxes before calculating and transferring the tokens.\nWhen user swaps from STAKE to BNB, 18% of the STAKE is taxed.\n 8% of the total value to swap is converted to BNB and sent to treasury.\n 5% of the STAKE to swap is sent to vault in STAKE.\n 5% of the STAKE to swap is converted to LP token by converting half of it to BNB and then sent to foundation.\n @param tokens_sold Amount of STAKE that user has paid to buy BNB.\n @param min_bnb Amount of minimum BNB after slippage.\n @param buyer address that transferred the tokens.\n @param recipient address that will receive the BNB."
            },
            "id": 858,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenToBnbInput",
            "nameLocation": "11913:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "tokens_sold",
                  "nameLocation": "11946:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 858,
                  "src": "11938:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11938:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "mutability": "mutable",
                  "name": "min_bnb",
                  "nameLocation": "11975:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 858,
                  "src": "11967:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11967:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "12000:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 858,
                  "src": "11992:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11992:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "12023:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 858,
                  "src": "12015:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12015:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11928:110:8"
            },
            "returnParameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 858,
                  "src": "12056:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12056:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12055:9:8"
            },
            "scope": 1939,
            "src": "11904:1041:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 877,
              "nodeType": "Block",
              "src": "13306:85:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 869,
                        "name": "tokens_sold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 861,
                        "src": "13339:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 870,
                        "name": "min_bnb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 863,
                        "src": "13352:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 871,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13361:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13361:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 873,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13373:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13373:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 868,
                      "name": "tokenToBnbInput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 858,
                      "src": "13323:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,address,address) returns (uint256)"
                      }
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13323:61:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 867,
                  "id": 876,
                  "nodeType": "Return",
                  "src": "13316:68:8"
                }
              ]
            },
            "documentation": {
              "id": 859,
              "nodeType": "StructuredDocumentation",
              "src": "12951:238:8",
              "text": " @notice Convert Tokens to BNB.\n @dev User specifies exact input && minimum output.\n @param tokens_sold Amount of Tokens sold.\n @param min_bnb Minimum BNB purchased.\n @return Amount of BNB bought."
            },
            "functionSelector": "fb48d48a",
            "id": 878,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenToBnbSwapInput",
            "nameLocation": "13203:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 861,
                  "mutability": "mutable",
                  "name": "tokens_sold",
                  "nameLocation": "13231:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "13223:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13223:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 863,
                  "mutability": "mutable",
                  "name": "min_bnb",
                  "nameLocation": "13252:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "13244:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13244:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13222:38:8"
            },
            "returnParameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "13293:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13293:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13292:9:8"
            },
            "scope": 1939,
            "src": "13194:197:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 993,
              "nodeType": "Block",
              "src": "13561:985:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 892,
                          "name": "bnb_bought",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 880,
                          "src": "13579:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13592:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13579:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13571:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13571:23:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "13571:23:8"
                },
                {
                  "assignments": [
                    898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 898,
                      "mutability": "mutable",
                      "name": "token_reserve",
                      "nameLocation": "13612:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 993,
                      "src": "13604:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 897,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13604:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 906,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 903,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13652:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          ],
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13644:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 901,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13644:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13644:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 899,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "13628:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      },
                      "id": 900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "13628:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13628:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13604:54:8"
                },
                {
                  "assignments": [
                    908
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 908,
                      "mutability": "mutable",
                      "name": "bnb_reserve",
                      "nameLocation": "13676:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 993,
                      "src": "13668:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 907,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13668:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 914,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 911,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "13698:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakeFountain_$1939",
                            "typeString": "contract StakeFountain"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakeFountain_$1939",
                            "typeString": "contract StakeFountain"
                          }
                        ],
                        "id": 910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13690:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13690:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13690:13:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "13690:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13668:43:8"
                },
                {
                  "assignments": [
                    916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 916,
                      "mutability": "mutable",
                      "name": "tokens_sold",
                      "nameLocation": "13729:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 993,
                      "src": "13721:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 915,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13721:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 922,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 918,
                        "name": "bnb_bought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 880,
                        "src": "13771:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 919,
                        "name": "token_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "13795:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 920,
                        "name": "bnb_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "13822:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 917,
                      "name": "getOutputPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 430,
                      "src": "13743:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13743:100:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13721:122:8"
                },
                {
                  "assignments": [
                    924
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 924,
                      "mutability": "mutable",
                      "name": "total_tokens_sold",
                      "nameLocation": "13861:17:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 993,
                      "src": "13853:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 923,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13853:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 925,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13853:25:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 927,
                          "name": "max_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 882,
                          "src": "13938:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 928,
                          "name": "tokens_sold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 916,
                          "src": "13952:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13938:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d617820746f6b656e73206578636565646564",
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13965:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6e4ce30fb77727283f060257b89fddefdc83216f53551378bd6ae05bb7024e8",
                          "typeString": "literal_string \"max tokens exceeded\""
                        },
                        "value": "max tokens exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6e4ce30fb77727283f060257b89fddefdc83216f53551378bd6ae05bb7024e8",
                          "typeString": "literal_string \"max tokens exceeded\""
                        }
                      ],
                      "id": 926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13930:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13930:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 932,
                  "nodeType": "ExpressionStatement",
                  "src": "13930:57:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 933,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "14001:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 935,
                      "indexExpression": {
                        "id": 934,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "14011:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14001:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 936,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "14021:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 938,
                      "indexExpression": {
                        "id": 937,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "14031:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14021:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14001:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 960,
                    "nodeType": "Block",
                    "src": "14105:141:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 945,
                            "name": "total_tokens_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 924,
                            "src": "14119:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 948,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "313030",
                                    "id": 946,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14140:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 947,
                                    "name": "tokens_sold",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 916,
                                    "src": "14146:11:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14140:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 949,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14139:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "3832",
                              "id": 950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14161:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_82_by_1",
                                "typeString": "int_const 82"
                              },
                              "value": "82"
                            },
                            "src": "14139:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14119:44:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 953,
                        "nodeType": "ExpressionStatement",
                        "src": "14119:44:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 955,
                              "name": "bnb_bought",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 880,
                              "src": "14192:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 956,
                              "name": "total_tokens_sold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 924,
                              "src": "14204:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 957,
                              "name": "bnb_reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "14223:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 954,
                            "name": "tokenToBnbFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1246,
                            "src": "14177:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14177:58:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 959,
                        "nodeType": "ExpressionStatement",
                        "src": "14177:58:8"
                      }
                    ]
                  },
                  "id": 961,
                  "nodeType": "IfStatement",
                  "src": "13997:249:8",
                  "trueBody": {
                    "id": 944,
                    "nodeType": "Block",
                    "src": "14043:56:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 940,
                            "name": "total_tokens_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 924,
                            "src": "14057:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 941,
                            "name": "tokens_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 916,
                            "src": "14077:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14057:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 943,
                        "nodeType": "ExpressionStatement",
                        "src": "14057:31:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 967,
                        "name": "bnb_bought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 880,
                        "src": "14321:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 964,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 886,
                            "src": "14301:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14293:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 962,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14293:8:8",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14293:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "14293:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14293:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 969,
                  "nodeType": "ExpressionStatement",
                  "src": "14293:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 973,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 884,
                            "src": "14369:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 976,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "14384:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                  "typeString": "contract StakeFountain"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                  "typeString": "contract StakeFountain"
                                }
                              ],
                              "id": 975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14376:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 974,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14376:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14376:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 978,
                            "name": "total_tokens_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 924,
                            "src": "14391:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 971,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "14350:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeToken_$3918",
                              "typeString": "contract StakeToken"
                            }
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2244,
                          "src": "14350:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14350:59:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14342:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14342:68:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 981,
                  "nodeType": "ExpressionStatement",
                  "src": "14342:68:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 983,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "14439:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 984,
                        "name": "total_tokens_sold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 924,
                        "src": "14446:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 985,
                        "name": "bnb_bought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 880,
                        "src": "14465:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 982,
                      "name": "onBnbPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "14425:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14425:51:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 987,
                  "nodeType": "EmitStatement",
                  "src": "14420:56:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 988,
                      "name": "trackGlobalStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "14486:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14486:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 990,
                  "nodeType": "ExpressionStatement",
                  "src": "14486:18:8"
                },
                {
                  "expression": {
                    "id": 991,
                    "name": "total_tokens_sold",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 924,
                    "src": "14522:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 890,
                  "id": 992,
                  "nodeType": "Return",
                  "src": "14515:24:8"
                }
              ]
            },
            "id": 994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenToBnbOutput",
            "nameLocation": "13406:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "mutability": "mutable",
                  "name": "bnb_bought",
                  "nameLocation": "13440:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "13432:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13432:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "max_tokens",
                  "nameLocation": "13468:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "13460:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13460:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "13496:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "13488:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13488:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 886,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "13519:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "13511:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13511:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13422:112:8"
            },
            "returnParameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 889,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "13552:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 888,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13552:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13551:9:8"
            },
            "scope": 1939,
            "src": "13397:1149:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1013,
              "nodeType": "Block",
              "src": "14913:88:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1005,
                        "name": "bnb_bought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "14947:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1006,
                        "name": "max_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "14959:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1007,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14971:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14971:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1009,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14983:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14983:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1004,
                      "name": "tokenToBnbOutput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 994,
                      "src": "14930:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,address,address) returns (uint256)"
                      }
                    },
                    "id": 1011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14930:64:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1003,
                  "id": 1012,
                  "nodeType": "Return",
                  "src": "14923:71:8"
                }
              ]
            },
            "documentation": {
              "id": 995,
              "nodeType": "StructuredDocumentation",
              "src": "14552:241:8",
              "text": " @notice Convert Tokens to BNB.\n @dev User specifies maximum input && exact output.\n @param bnb_bought Amount of BNB purchased.\n @param max_tokens Maximum Tokens sold.\n @return Amount of Tokens sold."
            },
            "functionSelector": "1a12be0d",
            "id": 1014,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenToBnbSwapOutput",
            "nameLocation": "14807:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 997,
                  "mutability": "mutable",
                  "name": "bnb_bought",
                  "nameLocation": "14836:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1014,
                  "src": "14828:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14828:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 999,
                  "mutability": "mutable",
                  "name": "max_tokens",
                  "nameLocation": "14856:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1014,
                  "src": "14848:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14848:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14827:40:8"
            },
            "returnParameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1002,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1014,
                  "src": "14900:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14900:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14899:9:8"
            },
            "scope": 1939,
            "src": "14798:203:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1067,
              "nodeType": "Block",
              "src": "15043:398:8",
              "statements": [
                {
                  "assignments": [
                    1018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1018,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "15061:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1067,
                      "src": "15053:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1017,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15053:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1022,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15094:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 1019,
                      "name": "getBnbToTokenOutputPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1320,
                      "src": "15069:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15069:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15053:46:8"
                },
                {
                  "assignments": [
                    1024
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1024,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "15117:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1067,
                      "src": "15109:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1023,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15109:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1027,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1025,
                      "name": "bnbBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1419,
                      "src": "15127:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15127:12:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15109:30:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1028,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "15154:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "15154:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1030,
                        "name": "lastBalance_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "15172:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15154:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1032,
                      "name": "trackingInterval_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "15187:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15154:50:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1047,
                  "nodeType": "IfStatement",
                  "src": "15150:159:8",
                  "trueBody": {
                    "id": 1046,
                    "nodeType": "Block",
                    "src": "15206:103:8",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1035,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1024,
                                "src": "15235:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 1036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15245:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "15235:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1038,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1018,
                              "src": "15248:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1034,
                            "name": "onSummary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "15225:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15225:29:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1040,
                        "nodeType": "EmitStatement",
                        "src": "15220:34:8"
                      },
                      {
                        "expression": {
                          "id": 1044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1041,
                            "name": "lastBalance_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "15268:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1042,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "15283:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "15283:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15268:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1045,
                        "nodeType": "ExpressionStatement",
                        "src": "15268:30:8"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1049,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1024,
                        "src": "15342:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1048,
                      "name": "onContractBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "15324:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15324:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1051,
                  "nodeType": "EmitStatement",
                  "src": "15319:31:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1053,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1018,
                        "src": "15373:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1052,
                      "name": "onPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "15365:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15365:14:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1055,
                  "nodeType": "EmitStatement",
                  "src": "15360:19:8"
                },
                {
                  "expression": {
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1056,
                      "name": "totalTxs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "15390:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15402:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "15390:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1059,
                  "nodeType": "ExpressionStatement",
                  "src": "15390:13:8"
                },
                {
                  "expression": {
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1060,
                        "name": "_txs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "15413:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1063,
                      "indexExpression": {
                        "expression": {
                          "id": 1061,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15418:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15418:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15413:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15433:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "15413:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1066,
                  "nodeType": "ExpressionStatement",
                  "src": "15413:21:8"
                }
              ]
            },
            "id": 1068,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "trackGlobalStats",
            "nameLocation": "15016:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15032:2:8"
            },
            "returnParameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15043:0:8"
            },
            "scope": 1939,
            "src": "15007:434:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1100,
              "nodeType": "Block",
              "src": "15656:217:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1075,
                          "name": "_treasury_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1071,
                          "src": "15714:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15730:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15714:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1074,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15706:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15706:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "15706:26:8"
                },
                {
                  "assignments": [
                    1081,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1081,
                      "mutability": "mutable",
                      "name": "os",
                      "nameLocation": "15748:2:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1100,
                      "src": "15743:7:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1080,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "15743:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1091,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15801:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1084,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "15764:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15756:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1082,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15756:8:8",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15756:17:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "15756:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1087,
                          "name": "_treasury_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1071,
                          "src": "15786:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "15756:44:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15756:48:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15742:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1093,
                        "name": "os",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "15822:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15814:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15814:11:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1095,
                  "nodeType": "ExpressionStatement",
                  "src": "15814:11:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1097,
                        "name": "_treasury_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "15852:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1096,
                      "name": "TreasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "15840:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15840:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1099,
                  "nodeType": "EmitStatement",
                  "src": "15835:31:8"
                }
              ]
            },
            "documentation": {
              "id": 1069,
              "nodeType": "StructuredDocumentation",
              "src": "15469:121:8",
              "text": "Function that charges the respective fee to treasury\n @param _treasury_fee is the amount of BNB charged as fee"
            },
            "id": 1101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferTreasuryFee",
            "nameLocation": "15604:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1071,
                  "mutability": "mutable",
                  "name": "_treasury_fee",
                  "nameLocation": "15632:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1101,
                  "src": "15624:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1070,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15624:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15623:23:8"
            },
            "returnParameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15656:0:8"
            },
            "scope": 1939,
            "src": "15595:278:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1245,
              "nodeType": "Block",
              "src": "16291:1519:8",
              "statements": [
                {
                  "assignments": [
                    1112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1112,
                      "mutability": "mutable",
                      "name": "treasury_fee",
                      "nameLocation": "16392:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1245,
                      "src": "16384:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1111,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16384:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1119,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "38",
                            "id": 1113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16408:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1114,
                            "name": "_bnb_bought",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1104,
                            "src": "16412:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16408:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1116,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16407:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16427:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "16407:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16384:46:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1121,
                        "name": "treasury_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "16460:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1120,
                      "name": "transferTreasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1101,
                      "src": "16440:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16440:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1123,
                  "nodeType": "ExpressionStatement",
                  "src": "16440:33:8"
                },
                {
                  "assignments": [
                    1125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1125,
                      "mutability": "mutable",
                      "name": "vault_fee",
                      "nameLocation": "16554:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1245,
                      "src": "16546:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1124,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16546:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1132,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "35",
                            "id": 1126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16567:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1127,
                            "name": "_tokens_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1106,
                            "src": "16571:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16567:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1129,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16566:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16587:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "16566:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16546:44:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1136,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "16615:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1137,
                        "name": "vault_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "16622:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1133,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "16600:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2168,
                      "src": "16600:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16600:32:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "16600:32:8"
                },
                {
                  "assignments": [
                    1141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1141,
                      "mutability": "mutable",
                      "name": "foundation_and_lock_fee_bnb",
                      "nameLocation": "16804:27:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1245,
                      "src": "16796:35:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1140,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16796:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1148,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3235",
                            "id": 1142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16835:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_25_by_1",
                              "typeString": "int_const 25"
                            },
                            "value": "25"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1143,
                            "name": "_bnb_bought",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1104,
                            "src": "16840:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16835:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1145,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16834:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 1146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16855:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "16834:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16796:63:8"
                },
                {
                  "assignments": [
                    1150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1150,
                      "mutability": "mutable",
                      "name": "total_liquidity",
                      "nameLocation": "16877:15:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1245,
                      "src": "16869:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1149,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16869:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1153,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1151,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2129,
                      "src": "16895:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16895:13:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16869:39:8"
                },
                {
                  "assignments": [
                    1155
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1155,
                      "mutability": "mutable",
                      "name": "liquidity_minted",
                      "nameLocation": "16926:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1245,
                      "src": "16918:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1154,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16918:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1162,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1156,
                            "name": "foundation_and_lock_fee_bnb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "16946:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1157,
                            "name": "total_liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1150,
                            "src": "16988:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16946:57:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1159,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16945:59:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1160,
                      "name": "_bnb_reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "17007:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16945:74:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16918:101:8"
                },
                {
                  "assignments": [
                    1164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1164,
                      "mutability": "mutable",
                      "name": "foundation_liquidity_minted",
                      "nameLocation": "17038:27:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1245,
                      "src": "17030:35:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1163,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17030:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1171,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 1165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17069:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1166,
                            "name": "liquidity_minted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1155,
                            "src": "17074:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17069:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1168,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "17068:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17094:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "17068:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17030:67:8"
                },
                {
                  "assignments": [
                    1173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1173,
                      "mutability": "mutable",
                      "name": "token_lock_liquidity_minted",
                      "nameLocation": "17115:27:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1245,
                      "src": "17107:35:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1172,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17107:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1177,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1174,
                      "name": "liquidity_minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1155,
                      "src": "17145:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1175,
                      "name": "foundation_liquidity_minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1164,
                      "src": "17176:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17145:58:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17107:96:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1179,
                        "name": "foundation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "17219:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1180,
                        "name": "foundation_liquidity_minted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "17231:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1178,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2449,
                      "src": "17213:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17213:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "17213:46:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1186,
                            "name": "token_lock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "17283:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLocker_$4086",
                              "typeString": "contract TokenLocker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLocker_$4086",
                              "typeString": "contract TokenLocker"
                            }
                          ],
                          "id": 1185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17275:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1184,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17275:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17275:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1188,
                        "name": "token_lock_liquidity_minted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "17296:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1183,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2449,
                      "src": "17269:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17269:55:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1190,
                  "nodeType": "ExpressionStatement",
                  "src": "17269:55:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1191,
                        "name": "token_lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "17334:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenLocker_$4086",
                          "typeString": "contract TokenLocker"
                        }
                      },
                      "id": 1193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateLock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3998,
                      "src": "17334:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17334:23:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1195,
                  "nodeType": "ExpressionStatement",
                  "src": "17334:23:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1197,
                        "name": "treasury_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "17407:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1196,
                      "name": "TreasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "17395:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17395:25:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1199,
                  "nodeType": "EmitStatement",
                  "src": "17390:30:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1201,
                        "name": "vault_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "17444:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1200,
                      "name": "VaultFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "17435:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17435:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1203,
                  "nodeType": "EmitStatement",
                  "src": "17430:24:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1205,
                        "name": "foundation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "17482:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1207,
                            "name": "foundation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "17504:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1206,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2143,
                          "src": "17494:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17494:21:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1204,
                      "name": "onLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "17470:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17470:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1210,
                  "nodeType": "EmitStatement",
                  "src": "17465:51:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17548:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17540:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1212,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17540:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17540:10:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1216,
                        "name": "foundation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "17552:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1217,
                        "name": "foundation_liquidity_minted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "17564:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1211,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4176,
                      "src": "17531:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17531:61:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1219,
                  "nodeType": "EmitStatement",
                  "src": "17526:66:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1223,
                            "name": "token_lock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "17628:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLocker_$4086",
                              "typeString": "contract TokenLocker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLocker_$4086",
                              "typeString": "contract TokenLocker"
                            }
                          ],
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17620:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1221,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17620:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17620:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1228,
                                "name": "token_lock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "17659:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenLocker_$4086",
                                  "typeString": "contract TokenLocker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenLocker_$4086",
                                  "typeString": "contract TokenLocker"
                                }
                              ],
                              "id": 1227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17651:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1226,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17651:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17651:19:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1225,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2143,
                          "src": "17641:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17641:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1220,
                      "name": "onLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "17608:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17608:64:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1232,
                  "nodeType": "EmitStatement",
                  "src": "17603:69:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17717:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17709:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1234,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17709:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17709:10:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1240,
                            "name": "token_lock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "17741:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLocker_$4086",
                              "typeString": "contract TokenLocker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLocker_$4086",
                              "typeString": "contract TokenLocker"
                            }
                          ],
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17733:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1238,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17733:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17733:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1242,
                        "name": "token_lock_liquidity_minted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "17766:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1233,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4176,
                      "src": "17687:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17687:116:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1244,
                  "nodeType": "EmitStatement",
                  "src": "17682:121:8"
                }
              ]
            },
            "documentation": {
              "id": 1102,
              "nodeType": "StructuredDocumentation",
              "src": "15879:279:8",
              "text": "Function that calculates and transfers fees for treasury, vault, foundation and lock\n @param _bnb_bought is the amount of BNB that user has bought\n @param _tokens_sold is the amount of tokens user sells\n @param _bnb_reserve is this contract's bnb balance"
            },
            "id": 1246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenToBnbFees",
            "nameLocation": "16172:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1104,
                  "mutability": "mutable",
                  "name": "_bnb_bought",
                  "nameLocation": "16204:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "16196:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16196:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1106,
                  "mutability": "mutable",
                  "name": "_tokens_sold",
                  "nameLocation": "16233:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "16225:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16225:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1108,
                  "mutability": "mutable",
                  "name": "_bnb_reserve",
                  "nameLocation": "16263:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "16255:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16255:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16186:95:8"
            },
            "returnParameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16291:0:8"
            },
            "scope": 1939,
            "src": "16163:1647:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1280,
              "nodeType": "Block",
              "src": "18168:180:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1255,
                          "name": "bnb_sold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1249,
                          "src": "18186:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18197:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18186:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18178:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18178:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1259,
                  "nodeType": "ExpressionStatement",
                  "src": "18178:21:8"
                },
                {
                  "assignments": [
                    1261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1261,
                      "mutability": "mutable",
                      "name": "token_reserve",
                      "nameLocation": "18217:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1280,
                      "src": "18209:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1260,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18209:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1269,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1266,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18257:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          ],
                          "id": 1265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18249:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18249:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18249:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1262,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "18233:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      },
                      "id": 1263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "18233:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18233:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18209:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1271,
                        "name": "bnb_sold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1249,
                        "src": "18294:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1274,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "18312:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                "typeString": "contract StakeFountain"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                "typeString": "contract StakeFountain"
                              }
                            ],
                            "id": 1273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18304:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1272,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18304:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18304:13:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "18304:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1277,
                        "name": "token_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "18327:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1270,
                      "name": "getInputPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 387,
                      "src": "18280:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 1278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18280:61:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1253,
                  "id": 1279,
                  "nodeType": "Return",
                  "src": "18273:68:8"
                }
              ]
            },
            "documentation": {
              "id": 1247,
              "nodeType": "StructuredDocumentation",
              "src": "17851:203:8",
              "text": " @notice Public price function for BNB to Token trades with an exact input.\n @param bnb_sold Amount of BNB sold.\n @return Amount of Tokens that can be bought with input BNB."
            },
            "functionSelector": "0e250842",
            "id": 1281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBnbToTokenInputPrice",
            "nameLocation": "18068:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1249,
                  "mutability": "mutable",
                  "name": "bnb_sold",
                  "nameLocation": "18100:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1281,
                  "src": "18092:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18092:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18091:18:8"
            },
            "returnParameters": {
              "id": 1253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1252,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1281,
                  "src": "18155:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18155:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18154:9:8"
            },
            "scope": 1939,
            "src": "18059:289:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1319,
              "nodeType": "Block",
              "src": "18679:274:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1290,
                          "name": "tokens_bought",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1284,
                          "src": "18697:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18713:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18697:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18689:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18689:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1294,
                  "nodeType": "ExpressionStatement",
                  "src": "18689:26:8"
                },
                {
                  "assignments": [
                    1296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1296,
                      "mutability": "mutable",
                      "name": "token_reserve",
                      "nameLocation": "18733:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1319,
                      "src": "18725:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1295,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18725:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1304,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1301,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18773:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          ],
                          "id": 1300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18765:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1299,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18765:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18765:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1297,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "18749:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      },
                      "id": 1298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "18749:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18749:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18725:54:8"
                },
                {
                  "assignments": [
                    1306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1306,
                      "mutability": "mutable",
                      "name": "bnb_sold",
                      "nameLocation": "18797:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1319,
                      "src": "18789:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1305,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18789:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1316,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1308,
                        "name": "tokens_bought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1284,
                        "src": "18836:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1311,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "18871:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                "typeString": "contract StakeFountain"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                "typeString": "contract StakeFountain"
                              }
                            ],
                            "id": 1310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18863:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1309,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18863:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18863:13:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "18863:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1314,
                        "name": "token_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1296,
                        "src": "18898:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1307,
                      "name": "getOutputPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 430,
                      "src": "18808:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18808:113:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18789:132:8"
                },
                {
                  "expression": {
                    "id": 1317,
                    "name": "bnb_sold",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1306,
                    "src": "18938:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1288,
                  "id": 1318,
                  "nodeType": "Return",
                  "src": "18931:15:8"
                }
              ]
            },
            "documentation": {
              "id": 1282,
              "nodeType": "StructuredDocumentation",
              "src": "18354:205:8",
              "text": " @notice Public price function for BNB to Token trades with an exact output.\n @param tokens_bought Amount of Tokens bought.\n @return Amount of BNB needed to buy output Tokens."
            },
            "functionSelector": "38e70059",
            "id": 1320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBnbToTokenOutputPrice",
            "nameLocation": "18573:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1284,
                  "mutability": "mutable",
                  "name": "tokens_bought",
                  "nameLocation": "18606:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1320,
                  "src": "18598:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18598:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18597:23:8"
            },
            "returnParameters": {
              "id": 1288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1320,
                  "src": "18666:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18666:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18665:9:8"
            },
            "scope": 1939,
            "src": "18564:389:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1359,
              "nodeType": "Block",
              "src": "19285:291:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1329,
                          "name": "tokens_sold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "19303:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19317:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19303:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e20736f6c64203c2030",
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19320:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f377ac0f590dacbfe104fc1c70b7c50923488ce3cdf45e85d012dc300cc6c252",
                          "typeString": "literal_string \"token sold < 0\""
                        },
                        "value": "token sold < 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f377ac0f590dacbfe104fc1c70b7c50923488ce3cdf45e85d012dc300cc6c252",
                          "typeString": "literal_string \"token sold < 0\""
                        }
                      ],
                      "id": 1328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19295:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19295:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1334,
                  "nodeType": "ExpressionStatement",
                  "src": "19295:42:8"
                },
                {
                  "assignments": [
                    1336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1336,
                      "mutability": "mutable",
                      "name": "token_reserve",
                      "nameLocation": "19355:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1359,
                      "src": "19347:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1335,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19347:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1344,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1341,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19395:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          ],
                          "id": 1340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19387:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1339,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19387:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19387:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1337,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "19371:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      },
                      "id": 1338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "19371:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19371:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19347:54:8"
                },
                {
                  "assignments": [
                    1346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1346,
                      "mutability": "mutable",
                      "name": "bnb_bought",
                      "nameLocation": "19419:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1359,
                      "src": "19411:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1345,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19411:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1356,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1348,
                        "name": "tokens_sold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1323,
                        "src": "19459:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1349,
                        "name": "token_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1336,
                        "src": "19484:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1352,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "19519:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                "typeString": "contract StakeFountain"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                "typeString": "contract StakeFountain"
                              }
                            ],
                            "id": 1351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19511:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1350,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19511:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19511:13:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "19511:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1347,
                      "name": "getInputPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 387,
                      "src": "19432:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19432:110:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19411:131:8"
                },
                {
                  "expression": {
                    "id": 1357,
                    "name": "bnb_bought",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1346,
                    "src": "19559:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1327,
                  "id": 1358,
                  "nodeType": "Return",
                  "src": "19552:17:8"
                }
              ]
            },
            "documentation": {
              "id": 1321,
              "nodeType": "StructuredDocumentation",
              "src": "18959:209:8",
              "text": " @notice Public price function for Token to BNB trades with an exact input.\n @param tokens_sold Amount of Tokens sold.\n @return Amount of BNB that can be bought with input Tokens."
            },
            "functionSelector": "5746402b",
            "id": 1360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenToBnbInputPrice",
            "nameLocation": "19182:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1323,
                  "mutability": "mutable",
                  "name": "tokens_sold",
                  "nameLocation": "19214:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "19206:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19206:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19205:21:8"
            },
            "returnParameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1326,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "19272:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19272:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19271:9:8"
            },
            "scope": 1939,
            "src": "19173:403:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1394,
              "nodeType": "Block",
              "src": "19898:185:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1369,
                          "name": "bnb_bought",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1363,
                          "src": "19916:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19929:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19916:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1368,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19908:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19908:23:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1373,
                  "nodeType": "ExpressionStatement",
                  "src": "19908:23:8"
                },
                {
                  "assignments": [
                    1375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1375,
                      "mutability": "mutable",
                      "name": "token_reserve",
                      "nameLocation": "19949:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1394,
                      "src": "19941:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1374,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19941:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1383,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1380,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19989:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          ],
                          "id": 1379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19981:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1378,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19981:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19981:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1376,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "19965:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      },
                      "id": 1377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "19965:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19965:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19941:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1385,
                        "name": "bnb_bought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1363,
                        "src": "20027:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1386,
                        "name": "token_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1375,
                        "src": "20039:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1389,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "20062:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                "typeString": "contract StakeFountain"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                "typeString": "contract StakeFountain"
                              }
                            ],
                            "id": 1388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "20054:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1387,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20054:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20054:13:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "20054:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1384,
                      "name": "getOutputPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 430,
                      "src": "20012:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 1392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20012:64:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1367,
                  "id": 1393,
                  "nodeType": "Return",
                  "src": "20005:71:8"
                }
              ]
            },
            "documentation": {
              "id": 1361,
              "nodeType": "StructuredDocumentation",
              "src": "19582:199:8",
              "text": " @notice Public price function for Token to BNB trades with an exact output.\n @param bnb_bought Amount of output BNB.\n @return Amount of Tokens needed to buy output BNB."
            },
            "functionSelector": "2f38c6e6",
            "id": 1395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenToBnbOutputPrice",
            "nameLocation": "19795:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1363,
                  "mutability": "mutable",
                  "name": "bnb_bought",
                  "nameLocation": "19828:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1395,
                  "src": "19820:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19820:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19819:20:8"
            },
            "returnParameters": {
              "id": 1367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1366,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1395,
                  "src": "19885:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19885:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19884:9:8"
            },
            "scope": 1939,
            "src": "19786:297:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1406,
              "nodeType": "Block",
              "src": "20222:38:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1403,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "20247:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      ],
                      "id": 1402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "20239:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1401,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "20239:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20239:14:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1400,
                  "id": 1405,
                  "nodeType": "Return",
                  "src": "20232:21:8"
                }
              ]
            },
            "documentation": {
              "id": 1396,
              "nodeType": "StructuredDocumentation",
              "src": "20089:74:8",
              "text": " @return Address of Token that is sold on this exchange."
            },
            "functionSelector": "9d76ea58",
            "id": 1407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenAddress",
            "nameLocation": "20177:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20189:2:8"
            },
            "returnParameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1407,
                  "src": "20213:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20213:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20212:9:8"
            },
            "scope": 1939,
            "src": "20168:92:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1418,
              "nodeType": "Block",
              "src": "20318:45:8",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1414,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "20343:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakeFountain_$1939",
                            "typeString": "contract StakeFountain"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakeFountain_$1939",
                            "typeString": "contract StakeFountain"
                          }
                        ],
                        "id": 1413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20335:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1412,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20335:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20335:13:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "20335:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1411,
                  "id": 1417,
                  "nodeType": "Return",
                  "src": "20328:28:8"
                }
              ]
            },
            "functionSelector": "d013cbe2",
            "id": 1419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bnbBalance",
            "nameLocation": "20275:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20285:2:8"
            },
            "returnParameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1410,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "20309:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20309:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20308:9:8"
            },
            "scope": 1939,
            "src": "20266:97:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1432,
              "nodeType": "Block",
              "src": "20423:54:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1428,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "20464:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          ],
                          "id": 1427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20456:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1426,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20456:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20456:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1424,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "20440:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      },
                      "id": 1425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "20440:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20440:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1423,
                  "id": 1431,
                  "nodeType": "Return",
                  "src": "20433:37:8"
                }
              ]
            },
            "functionSelector": "9e1a4d19",
            "id": 1433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenBalance",
            "nameLocation": "20378:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20390:2:8"
            },
            "returnParameters": {
              "id": 1423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1422,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "20414:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20414:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20413:9:8"
            },
            "scope": 1939,
            "src": "20369:108:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1496,
              "nodeType": "Block",
              "src": "20596:422:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1441,
                          "name": "bnb_sold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1435,
                          "src": "20614:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20625:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "20614:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20606:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20606:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1445,
                  "nodeType": "ExpressionStatement",
                  "src": "20606:21:8"
                },
                {
                  "assignments": [
                    1447
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1447,
                      "mutability": "mutable",
                      "name": "token_amount",
                      "nameLocation": "20645:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1496,
                      "src": "20637:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1446,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20637:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1449,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "20660:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20637:24:8"
                },
                {
                  "assignments": [
                    1451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1451,
                      "mutability": "mutable",
                      "name": "total_liquidity",
                      "nameLocation": "20679:15:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1496,
                      "src": "20671:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1450,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20671:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1454,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1452,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2129,
                      "src": "20697:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20697:13:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20671:39:8"
                },
                {
                  "assignments": [
                    1456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1456,
                      "mutability": "mutable",
                      "name": "bnb_reserve",
                      "nameLocation": "20728:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1496,
                      "src": "20720:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1455,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20720:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1462,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1459,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "20750:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakeFountain_$1939",
                            "typeString": "contract StakeFountain"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakeFountain_$1939",
                            "typeString": "contract StakeFountain"
                          }
                        ],
                        "id": 1458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20742:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1457,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20742:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20742:13:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "20742:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20720:43:8"
                },
                {
                  "assignments": [
                    1464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1464,
                      "mutability": "mutable",
                      "name": "token_reserve",
                      "nameLocation": "20781:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1496,
                      "src": "20773:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1463,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20773:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1472,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1469,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "20821:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          ],
                          "id": 1468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20813:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1467,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20813:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20813:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1465,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "20797:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      },
                      "id": 1466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "20797:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20797:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20773:54:8"
                },
                {
                  "expression": {
                    "id": 1483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1473,
                      "name": "token_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1447,
                      "src": "20837:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1476,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1474,
                                    "name": "bnb_sold",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1435,
                                    "src": "20854:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1475,
                                    "name": "token_reserve",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1464,
                                    "src": "20865:13:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "20854:24:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1477,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "20853:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1478,
                              "name": "bnb_reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1456,
                              "src": "20882:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "20853:40:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1480,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "20852:42:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20897:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "20852:46:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20837:61:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1484,
                  "nodeType": "ExpressionStatement",
                  "src": "20837:61:8"
                },
                {
                  "assignments": [
                    1486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1486,
                      "mutability": "mutable",
                      "name": "liquidity_minted",
                      "nameLocation": "20916:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1496,
                      "src": "20908:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1485,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20908:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1493,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1487,
                            "name": "bnb_sold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1435,
                            "src": "20936:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1488,
                            "name": "total_liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1451,
                            "src": "20947:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20936:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1490,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "20935:28:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1491,
                      "name": "bnb_reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1456,
                      "src": "20966:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20935:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20908:69:8"
                },
                {
                  "expression": {
                    "id": 1494,
                    "name": "liquidity_minted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1486,
                    "src": "20995:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1439,
                  "id": 1495,
                  "nodeType": "Return",
                  "src": "20988:23:8"
                }
              ]
            },
            "functionSelector": "1a42b767",
            "id": 1497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBnbToLiquidityInputPrice",
            "nameLocation": "20492:27:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1435,
                  "mutability": "mutable",
                  "name": "bnb_sold",
                  "nameLocation": "20528:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1497,
                  "src": "20520:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20520:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20519:18:8"
            },
            "returnParameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1497,
                  "src": "20583:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20583:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20582:9:8"
            },
            "scope": 1939,
            "src": "20483:535:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1553,
              "nodeType": "Block",
              "src": "21148:357:8",
              "statements": [
                {
                  "assignments": [
                    1507
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1507,
                      "mutability": "mutable",
                      "name": "total_liquidity",
                      "nameLocation": "21166:15:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1553,
                      "src": "21158:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1506,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21158:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1510,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1508,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2129,
                      "src": "21184:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21184:13:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21158:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1512,
                          "name": "total_liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1507,
                          "src": "21215:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21233:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "21215:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21207:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21207:28:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1516,
                  "nodeType": "ExpressionStatement",
                  "src": "21207:28:8"
                },
                {
                  "assignments": [
                    1518
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1518,
                      "mutability": "mutable",
                      "name": "token_reserve",
                      "nameLocation": "21253:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1553,
                      "src": "21245:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1517,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21245:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1526,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1523,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "21293:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          ],
                          "id": 1522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21285:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1521,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21285:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21285:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1519,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "21269:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      },
                      "id": 1520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "21269:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21269:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21245:54:8"
                },
                {
                  "assignments": [
                    1528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1528,
                      "mutability": "mutable",
                      "name": "bnb_amount",
                      "nameLocation": "21317:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1553,
                      "src": "21309:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1527,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21309:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1539,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1529,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1499,
                            "src": "21331:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1532,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "21348:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                    "typeString": "contract StakeFountain"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                    "typeString": "contract StakeFountain"
                                  }
                                ],
                                "id": 1531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "21340:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1530,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "21340:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21340:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "21340:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21331:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1536,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "21330:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1537,
                      "name": "total_liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1507,
                      "src": "21365:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21330:50:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21309:71:8"
                },
                {
                  "assignments": [
                    1541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1541,
                      "mutability": "mutable",
                      "name": "token_amount",
                      "nameLocation": "21398:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1553,
                      "src": "21390:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1540,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21390:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1548,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1542,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1499,
                            "src": "21414:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1543,
                            "name": "token_reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1518,
                            "src": "21423:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21414:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1545,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "21413:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1546,
                      "name": "total_liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1507,
                      "src": "21440:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21413:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21390:65:8"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1549,
                        "name": "bnb_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1528,
                        "src": "21473:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1550,
                        "name": "token_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1541,
                        "src": "21485:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1551,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "21472:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1505,
                  "id": 1552,
                  "nodeType": "Return",
                  "src": "21465:33:8"
                }
              ]
            },
            "functionSelector": "3da2ec9b",
            "id": 1554,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLiquidityToReserveInputPrice",
            "nameLocation": "21033:31:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1499,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "21073:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1554,
                  "src": "21065:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21065:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21064:16:8"
            },
            "returnParameters": {
              "id": 1505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1502,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1554,
                  "src": "21126:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21126:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1504,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1554,
                  "src": "21135:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21135:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21125:18:8"
            },
            "scope": 1939,
            "src": "21024:481:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1565,
              "nodeType": "Block",
              "src": "21569:35:8",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1561,
                      "name": "_txs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "21586:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1563,
                    "indexExpression": {
                      "id": 1562,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1556,
                      "src": "21591:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21586:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1560,
                  "id": 1564,
                  "nodeType": "Return",
                  "src": "21579:18:8"
                }
              ]
            },
            "functionSelector": "4eaa1b87",
            "id": 1566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "txs",
            "nameLocation": "21520:3:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "21532:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "21524:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21524:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21523:15:8"
            },
            "returnParameters": {
              "id": 1560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1559,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "21560:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21560:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21559:9:8"
            },
            "scope": 1939,
            "src": "21511:93:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1800,
              "nodeType": "Block",
              "src": "22203:1853:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1577,
                            "name": "max_tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1571,
                            "src": "22234:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22247:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "22234:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1580,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "22252:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "22252:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22264:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "22252:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "22234:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53776170236164644c69717569646974793a20494e56414c49445f415247554d454e54",
                        "id": 1585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22279:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e72c8b24ec1e7c793aae1e06e7608b6ffcb1aedae9cf0d9a9fc74d046772338",
                          "typeString": "literal_string \"Swap#addLiquidity: INVALID_ARGUMENT\""
                        },
                        "value": "Swap#addLiquidity: INVALID_ARGUMENT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e72c8b24ec1e7c793aae1e06e7608b6ffcb1aedae9cf0d9a9fc74d046772338",
                          "typeString": "literal_string \"Swap#addLiquidity: INVALID_ARGUMENT\""
                        }
                      ],
                      "id": 1576,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22213:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22213:113:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1587,
                  "nodeType": "ExpressionStatement",
                  "src": "22213:113:8"
                },
                {
                  "assignments": [
                    1589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1589,
                      "mutability": "mutable",
                      "name": "total_liquidity",
                      "nameLocation": "22344:15:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "22336:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1588,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22336:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1592,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1590,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2129,
                      "src": "22362:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22362:13:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22336:39:8"
                },
                {
                  "assignments": [
                    1594
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1594,
                      "mutability": "mutable",
                      "name": "token_amount",
                      "nameLocation": "22394:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "22386:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1593,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22386:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1596,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "22409:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22386:24:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1597,
                        "name": "_providers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "22425:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1600,
                      "indexExpression": {
                        "expression": {
                          "id": 1598,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22436:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22436:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "22425:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 1601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22451:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "22425:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1615,
                  "nodeType": "IfStatement",
                  "src": "22421:119:8",
                  "trueBody": {
                    "id": 1614,
                    "nodeType": "Block",
                    "src": "22458:82:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1603,
                              "name": "_providers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "22472:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1606,
                            "indexExpression": {
                              "expression": {
                                "id": 1604,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "22483:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "22483:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "22472:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22497:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "22472:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1609,
                        "nodeType": "ExpressionStatement",
                        "src": "22472:29:8"
                      },
                      {
                        "expression": {
                          "id": 1612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1610,
                            "name": "providers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "22515:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22528:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "22515:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1613,
                        "nodeType": "ExpressionStatement",
                        "src": "22515:14:8"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1616,
                      "name": "total_liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1589,
                      "src": "22554:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22572:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "22554:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1798,
                    "nodeType": "Block",
                    "src": "23465:585:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1729,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "23487:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "23487:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23500:7:8",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              "src": "23487:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e56414c49445f56414c5545",
                              "id": 1733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23509:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f38185948b9759248e56ec02128912506b4a23870d442e59ae3f857bcd81896c",
                                "typeString": "literal_string \"INVALID_VALUE\""
                              },
                              "value": "INVALID_VALUE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f38185948b9759248e56ec02128912506b4a23870d442e59ae3f857bcd81896c",
                                "typeString": "literal_string \"INVALID_VALUE\""
                              }
                            ],
                            "id": 1728,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23479:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23479:46:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1735,
                        "nodeType": "ExpressionStatement",
                        "src": "23479:46:8"
                      },
                      {
                        "expression": {
                          "id": 1738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1736,
                            "name": "token_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1594,
                            "src": "23539:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1737,
                            "name": "max_tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1571,
                            "src": "23554:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23539:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1739,
                        "nodeType": "ExpressionStatement",
                        "src": "23539:25:8"
                      },
                      {
                        "assignments": [
                          1741
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1741,
                            "mutability": "mutable",
                            "name": "initial_liquidity",
                            "nameLocation": "23586:17:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1798,
                            "src": "23578:25:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1740,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23578:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1747,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1744,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "23614:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                  "typeString": "contract StakeFountain"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                  "typeString": "contract StakeFountain"
                                }
                              ],
                              "id": 1743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "23606:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1742,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "23606:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23606:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "23606:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23578:49:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1751,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "23653:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "23653:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1753,
                              "name": "initial_liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1741,
                              "src": "23665:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1748,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "23641:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_StakeFountain_$1939_$",
                                "typeString": "type(contract super StakeFountain)"
                              }
                            },
                            "id": 1750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2449,
                            "src": "23641:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23641:42:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1755,
                        "nodeType": "ExpressionStatement",
                        "src": "23641:42:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1759,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "23741:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1760,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "23741:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1763,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "23761:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                        "typeString": "contract StakeFountain"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                        "typeString": "contract StakeFountain"
                                      }
                                    ],
                                    "id": 1762,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "23753:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1761,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "23753:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1764,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23753:13:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1765,
                                  "name": "token_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1594,
                                  "src": "23768:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1757,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22,
                                  "src": "23722:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakeToken_$3918",
                                    "typeString": "contract StakeToken"
                                  }
                                },
                                "id": 1758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2244,
                                "src": "23722:18:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23722:59:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1756,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23697:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23697:98:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1768,
                        "nodeType": "ExpressionStatement",
                        "src": "23697:98:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1770,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "23830:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "23830:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1772,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "23842:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "23842:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1774,
                              "name": "token_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1594,
                              "src": "23853:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1769,
                            "name": "onAddLiquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "23815:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23815:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1776,
                        "nodeType": "EmitStatement",
                        "src": "23810:56:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1778,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "23897:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "23897:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1781,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "23919:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1782,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "23919:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1780,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2143,
                                "src": "23909:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 1783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23909:21:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1777,
                            "name": "onLiquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "23885:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23885:46:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1785,
                        "nodeType": "EmitStatement",
                        "src": "23880:51:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "23967:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23959:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1787,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23959:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23959:10:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1791,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "23971:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "23971:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1793,
                              "name": "initial_liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1741,
                              "src": "23983:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1786,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4176,
                            "src": "23950:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23950:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1795,
                        "nodeType": "EmitStatement",
                        "src": "23945:56:8"
                      },
                      {
                        "expression": {
                          "id": 1796,
                          "name": "initial_liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1741,
                          "src": "24022:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1575,
                        "id": 1797,
                        "nodeType": "Return",
                        "src": "24015:24:8"
                      }
                    ]
                  },
                  "id": 1799,
                  "nodeType": "IfStatement",
                  "src": "22550:1500:8",
                  "trueBody": {
                    "id": 1727,
                    "nodeType": "Block",
                    "src": "22575:884:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1620,
                                "name": "min_liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1569,
                                "src": "22597:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1621,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22613:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "22597:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1619,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "22589:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22589:26:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1624,
                        "nodeType": "ExpressionStatement",
                        "src": "22589:26:8"
                      },
                      {
                        "assignments": [
                          1626
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1626,
                            "mutability": "mutable",
                            "name": "bnb_reserve",
                            "nameLocation": "22637:11:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1727,
                            "src": "22629:19:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1625,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22629:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1635,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1629,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "22659:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                    "typeString": "contract StakeFountain"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                    "typeString": "contract StakeFountain"
                                  }
                                ],
                                "id": 1628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22651:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1627,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22651:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22651:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "22651:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 1632,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "22675:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "22675:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22651:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22629:55:8"
                      },
                      {
                        "assignments": [
                          1637
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1637,
                            "mutability": "mutable",
                            "name": "token_reserve",
                            "nameLocation": "22706:13:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1727,
                            "src": "22698:21:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1636,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22698:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1645,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1642,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "22746:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                    "typeString": "contract StakeFountain"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                    "typeString": "contract StakeFountain"
                                  }
                                ],
                                "id": 1641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22738:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1640,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22738:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22738:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1638,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "22722:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakeToken_$3918",
                                "typeString": "contract StakeToken"
                              }
                            },
                            "id": 1639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2143,
                            "src": "22722:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22722:30:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22698:54:8"
                      },
                      {
                        "expression": {
                          "id": 1657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1646,
                            "name": "token_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1594,
                            "src": "22766:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1650,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 1647,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "22783:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1648,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "value",
                                          "nodeType": "MemberAccess",
                                          "src": "22783:9:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 1649,
                                          "name": "token_reserve",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1637,
                                          "src": "22795:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "22783:25:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1651,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "22782:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 1652,
                                    "name": "bnb_reserve",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1626,
                                    "src": "22812:11:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "22782:41:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1654,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "22781:43:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22827:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "22781:47:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22766:62:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1658,
                        "nodeType": "ExpressionStatement",
                        "src": "22766:62:8"
                      },
                      {
                        "assignments": [
                          1660
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1660,
                            "mutability": "mutable",
                            "name": "liquidity_minted",
                            "nameLocation": "22850:16:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1727,
                            "src": "22842:24:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1659,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22842:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1668,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1661,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "22870:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "22870:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1663,
                                  "name": "total_liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1589,
                                  "src": "22882:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22870:27:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1665,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "22869:29:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1666,
                            "name": "bnb_reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1626,
                            "src": "22917:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22869:59:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22842:86:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1670,
                                  "name": "max_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1571,
                                  "src": "22968:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1671,
                                  "name": "token_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1594,
                                  "src": "22982:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22968:26:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1673,
                                  "name": "liquidity_minted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1660,
                                  "src": "22998:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1674,
                                  "name": "min_liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1569,
                                  "src": "23018:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22998:33:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "22968:63:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1669,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "22943:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22943:102:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1678,
                        "nodeType": "ExpressionStatement",
                        "src": "22943:102:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1680,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "23065:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "23065:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1682,
                              "name": "liquidity_minted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1660,
                              "src": "23077:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1679,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2449,
                            "src": "23059:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23059:35:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1684,
                        "nodeType": "ExpressionStatement",
                        "src": "23059:35:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1688,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "23152:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1689,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "23152:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1692,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "23172:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                        "typeString": "contract StakeFountain"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                        "typeString": "contract StakeFountain"
                                      }
                                    ],
                                    "id": 1691,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "23164:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1690,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "23164:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1693,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23164:13:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1694,
                                  "name": "token_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1594,
                                  "src": "23179:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1686,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22,
                                  "src": "23133:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakeToken_$3918",
                                    "typeString": "contract StakeToken"
                                  }
                                },
                                "id": 1687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2244,
                                "src": "23133:18:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23133:59:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1685,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23108:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23108:98:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1697,
                        "nodeType": "ExpressionStatement",
                        "src": "23108:98:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1699,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "23241:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "23241:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1701,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "23253:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "23253:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1703,
                              "name": "token_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1594,
                              "src": "23264:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1698,
                            "name": "onAddLiquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "23226:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23226:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1705,
                        "nodeType": "EmitStatement",
                        "src": "23221:56:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1707,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "23308:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "23308:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1710,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "23330:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1711,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "23330:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1709,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2143,
                                "src": "23320:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 1712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23320:21:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1706,
                            "name": "onLiquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "23296:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23296:46:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1714,
                        "nodeType": "EmitStatement",
                        "src": "23291:51:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1718,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "23378:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23370:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1716,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23370:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23370:10:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1720,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "23382:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "23382:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1722,
                              "name": "liquidity_minted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1660,
                              "src": "23394:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1715,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4176,
                            "src": "23361:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23361:50:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1724,
                        "nodeType": "EmitStatement",
                        "src": "23356:55:8"
                      },
                      {
                        "expression": {
                          "id": 1725,
                          "name": "liquidity_minted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1660,
                          "src": "23432:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1575,
                        "id": 1726,
                        "nodeType": "Return",
                        "src": "23425:23:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1567,
              "nodeType": "StructuredDocumentation",
              "src": "21648:424:8",
              "text": " @notice Deposit BNB && Tokens (STAKE) at current ratio to mint STOKE tokens.\n @dev min_liquidity does nothing when total SWAP supply is 0.\n @param min_liquidity Minimum number of STOKE sender will mint if total STAKE supply is greater than 0.\n @param max_tokens Maximum number of tokens deposited. Deposits max amount if total STOKE supply is 0.\n @return The amount of SWAP minted."
            },
            "functionSelector": "9cd441da",
            "id": 1801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "22086:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "min_liquidity",
                  "nameLocation": "22107:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "22099:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22099:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "mutability": "mutable",
                  "name": "max_tokens",
                  "nameLocation": "22130:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "22122:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22122:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22098:43:8"
            },
            "returnParameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1574,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "22190:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22190:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22189:9:8"
            },
            "scope": 1939,
            "src": "22077:1979:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1937,
              "nodeType": "Block",
              "src": "24487:822:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1816,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1804,
                              "src": "24505:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24514:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "24505:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1819,
                              "name": "min_bnb",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1806,
                              "src": "24519:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24529:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "24519:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "24505:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1823,
                            "name": "min_tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1808,
                            "src": "24534:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24547:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "24534:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "24505:43:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1815,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24497:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24497:52:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1828,
                  "nodeType": "ExpressionStatement",
                  "src": "24497:52:8"
                },
                {
                  "assignments": [
                    1830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1830,
                      "mutability": "mutable",
                      "name": "total_liquidity",
                      "nameLocation": "24567:15:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1937,
                      "src": "24559:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1829,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24559:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1833,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1831,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2129,
                      "src": "24585:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24585:13:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24559:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1835,
                          "name": "total_liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1830,
                          "src": "24616:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24634:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24616:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1834,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24608:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24608:28:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1839,
                  "nodeType": "ExpressionStatement",
                  "src": "24608:28:8"
                },
                {
                  "assignments": [
                    1841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1841,
                      "mutability": "mutable",
                      "name": "token_reserve",
                      "nameLocation": "24654:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1937,
                      "src": "24646:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1840,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24646:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1849,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1846,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "24694:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeFountain_$1939",
                              "typeString": "contract StakeFountain"
                            }
                          ],
                          "id": 1845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24686:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1844,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24686:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24686:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1842,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "24670:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$3918",
                          "typeString": "contract StakeToken"
                        }
                      },
                      "id": 1843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "24670:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24670:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24646:54:8"
                },
                {
                  "assignments": [
                    1851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1851,
                      "mutability": "mutable",
                      "name": "bnb_amount",
                      "nameLocation": "24718:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1937,
                      "src": "24710:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1850,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24710:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1862,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1852,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1804,
                            "src": "24732:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1855,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "24749:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                    "typeString": "contract StakeFountain"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakeFountain_$1939",
                                    "typeString": "contract StakeFountain"
                                  }
                                ],
                                "id": 1854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "24741:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1853,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "24741:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24741:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "24741:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24732:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1859,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "24731:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1860,
                      "name": "total_liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1830,
                      "src": "24766:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24731:50:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24710:71:8"
                },
                {
                  "assignments": [
                    1864
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1864,
                      "mutability": "mutable",
                      "name": "token_amount",
                      "nameLocation": "24800:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1937,
                      "src": "24792:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1863,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24792:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1872,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1865,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1804,
                            "src": "24816:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "id": 1866,
                                "name": "token_reserve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1841,
                                "src": "24826:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1867,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "24825:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24816:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1869,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "24815:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1870,
                      "name": "total_liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1830,
                      "src": "24844:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24815:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24792:67:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1874,
                            "name": "bnb_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1851,
                            "src": "24877:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1875,
                            "name": "min_bnb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1806,
                            "src": "24891:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24877:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1877,
                            "name": "token_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1864,
                            "src": "24902:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1878,
                            "name": "min_tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1808,
                            "src": "24918:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24902:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "24877:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1873,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24869:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24869:60:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1882,
                  "nodeType": "ExpressionStatement",
                  "src": "24869:60:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1884,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "24945:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "24945:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1886,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1804,
                        "src": "24957:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1883,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2521,
                      "src": "24939:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24939:25:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1888,
                  "nodeType": "ExpressionStatement",
                  "src": "24939:25:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1895,
                        "name": "bnb_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1851,
                        "src": "25003:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1891,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "24982:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "24982:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24974:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1889,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24974:8:8",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24974:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "24974:28:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24974:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1897,
                  "nodeType": "ExpressionStatement",
                  "src": "24974:40:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1901,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "25047:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "25047:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1903,
                            "name": "token_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1864,
                            "src": "25059:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1899,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "25032:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeToken_$3918",
                              "typeString": "contract StakeToken"
                            }
                          },
                          "id": 1900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2168,
                          "src": "25032:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25032:40:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1898,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25024:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25024:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1906,
                  "nodeType": "ExpressionStatement",
                  "src": "25024:49:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1908,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "25106:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "25106:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1910,
                        "name": "bnb_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1851,
                        "src": "25118:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1911,
                        "name": "token_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1864,
                        "src": "25130:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1907,
                      "name": "onRemoveLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "25088:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25088:55:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1913,
                  "nodeType": "EmitStatement",
                  "src": "25083:60:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1915,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "25170:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "25170:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1918,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "25192:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "25192:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1917,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2143,
                          "src": "25182:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25182:21:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1914,
                      "name": "onLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "25158:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25158:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1922,
                  "nodeType": "EmitStatement",
                  "src": "25153:51:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1924,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "25228:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "25228:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "25248:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "25240:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1926,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "25240:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25240:10:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1930,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1804,
                        "src": "25252:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1923,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4176,
                      "src": "25219:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25219:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1932,
                  "nodeType": "EmitStatement",
                  "src": "25214:45:8"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1933,
                        "name": "bnb_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1851,
                        "src": "25277:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1934,
                        "name": "token_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1864,
                        "src": "25289:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1935,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "25276:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1814,
                  "id": 1936,
                  "nodeType": "Return",
                  "src": "25269:33:8"
                }
              ]
            },
            "documentation": {
              "id": 1802,
              "nodeType": "StructuredDocumentation",
              "src": "24062:278:8",
              "text": " @dev Burn SWAP tokens to withdraw BNB && Tokens at current ratio.\n @param amount Amount of SWAP burned.\n @param min_bnb Minimum BNB withdrawn.\n @param min_tokens Minimum Tokens withdrawn.\n @return The amount of BNB && Tokens withdrawn."
            },
            "functionSelector": "857620e1",
            "id": 1938,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidity",
            "nameLocation": "24354:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1804,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "24387:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1938,
                  "src": "24379:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24379:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1806,
                  "mutability": "mutable",
                  "name": "min_bnb",
                  "nameLocation": "24411:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1938,
                  "src": "24403:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24403:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1808,
                  "mutability": "mutable",
                  "name": "min_tokens",
                  "nameLocation": "24436:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1938,
                  "src": "24428:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24428:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24369:83:8"
            },
            "returnParameters": {
              "id": 1814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1811,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1938,
                  "src": "24469:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24469:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1813,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1938,
                  "src": "24478:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24478:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24468:18:8"
            },
            "scope": 1939,
            "src": "24345:964:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1940,
        "src": "952:24359:8",
        "usedErrors": []
      }
    ],
    "src": "32:25280:8"
  },
  "bytecode": "6080604052603c600d556012805460ff191660011790553480156200002357600080fd5b50604051620035d5380380620035d583398101604081905262000046916200023d565b604080518082018252600e81526d29ba30b5b2902628103a37b5b2b760911b60208083019182528351808501909452600584526453544f4b4560d81b90840152815191929162000099916003916200017a565b508051620000af9060049060208401906200017a565b505050620000cc620000c66200012460201b60201c565b62000128565b600680546001600160a01b039586166001600160a01b03199182161790915542600c5560088054948616948216949094179093556009805492851692841692909217909155600a8054919093169116179055620002d7565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000188906200029a565b90600052602060002090601f016020900481019282620001ac5760008555620001f7565b82601f10620001c757805160ff1916838001178555620001f7565b82800160010185558215620001f7579182015b82811115620001f7578251825591602001919060010190620001da565b506200020592915062000209565b5090565b5b808211156200020557600081556001016200020a565b80516001600160a01b03811681146200023857600080fd5b919050565b600080600080608085870312156200025457600080fd5b6200025f8562000220565b93506200026f6020860162000220565b92506200027f6040860162000220565b91506200028f6060860162000220565b905092959194509250565b600181811c90821680620002af57607f821691505b60208210811415620002d157634e487b7160e01b600052602260045260246000fd5b50919050565b6132ee80620002e76000396000f3fe6080604052600436106102cd5760003560e01c8063857620e111610175578063b187bd26116100dc578063f2fde38b11610095578063fbfa77cf1161006f578063fbfa77cf146108f2578063fc0c546a14610912578063fc51820514610932578063fd11c2231461094857600080fd5b8063f2fde38b1461089c578063f8401fe6146108bc578063fb48d48a146108d257600080fd5b8063b187bd26146107c9578063b5695026146107e3578063d013cbe2146107f6578063d596f9b414610809578063dd62ed3e14610836578063e2ec6ec31461087c57600080fd5b80639cd441da1161012e5780639cd441da146107235780639d76ea58146107365780639e1a4d1914610754578063a32088d414610769578063a457c2d714610789578063a9059cbb146107a957600080fd5b8063857620e11461066057806389f2a871146106805780638da5cb5b146106a05780638f798a5d146106be57806395d89b41146106de5780639b19251a146106f357600080fd5b806338e70059116102345780635746402b116101ed57806370a08231116101c757806370a08231146105c3578063715018a6146105f9578063769d7235146106105780637b9417c81461064057600080fd5b80635746402b1461056d57806361d027b31461058d5780637044f7a7146105ad57600080fd5b806338e700591461047457806339509351146104945780633da2ec9b146104b457806341fbb050146104e95780634eaa1b8714610521578063537a39bb1461055757600080fd5b80631db7976f116102865780631db7976f146103c557806323b872dd146103d857806324953eaa146103f8578063286dd3f5146104185780632f38c6e614610438578063313ce5671461045857600080fd5b806306fdde03146102e7578063095ea7b3146103125780630e2508421461034257806318160ddd146103705780631a12be0d146103855780631a42b767146103a557600080fd5b366102e2576102df3460013333610968565b50005b600080fd5b3480156102f357600080fd5b506102fc610c4d565b6040516103099190612ea2565b60405180910390f35b34801561031e57600080fd5b5061033261032d366004612f0e565b610cdf565b6040519015158152602001610309565b34801561034e57600080fd5b5061036261035d366004612f38565b610cf9565b604051908152602001610309565b34801561037c57600080fd5b50600254610362565b34801561039157600080fd5b506103626103a0366004612f51565b610d88565b3480156103b157600080fd5b506103626103c0366004612f38565b610d96565b6103626103d3366004612f38565b610e68565b3480156103e457600080fd5b506103326103f3366004612f73565b610e76565b34801561040457600080fd5b50610332610413366004612fc5565b610e9a565b34801561042457600080fd5b5061033261043336600461307e565b610f18565b34801561044457600080fd5b50610362610453366004612f38565b610fc3565b34801561046457600080fd5b5060405160128152602001610309565b34801561048057600080fd5b5061036261048f366004612f38565b61104b565b3480156104a057600080fd5b506103326104af366004612f0e565b6110dd565b3480156104c057600080fd5b506104d46104cf366004612f38565b61111c565b60408051928352602083019190915201610309565b3480156104f557600080fd5b50600a54610509906001600160a01b031681565b6040516001600160a01b039091168152602001610309565b34801561052d57600080fd5b5061036261053c36600461307e565b6001600160a01b031660009081526011602052604090205490565b34801561056357600080fd5b50610362600b5481565b34801561057957600080fd5b50610362610588366004612f38565b6111e6565b34801561059957600080fd5b50600854610509906001600160a01b031681565b3480156105b957600080fd5b50610362600c5481565b3480156105cf57600080fd5b506103626105de36600461307e565b6001600160a01b031660009081526020819052604090205490565b34801561060557600080fd5b5061060e6112a4565b005b34801561061c57600080fd5b5061033261062b36600461307e565b60106020526000908152604090205460ff1681565b34801561064c57600080fd5b5061033261065b36600461307e565b6112da565b34801561066c57600080fd5b506104d461067b366004613099565b61137b565b34801561068c57600080fd5b5061036261069b366004613099565b6115b9565b3480156106ac57600080fd5b506005546001600160a01b0316610509565b3480156106ca57600080fd5b50600754610509906001600160a01b031681565b3480156106ea57600080fd5b506102fc611636565b3480156106ff57600080fd5b5061033261070e36600461307e565b600f6020526000908152604090205460ff1681565b610362610731366004612f51565b611645565b34801561074257600080fd5b506006546001600160a01b0316610509565b34801561076057600080fd5b50610362611a62565b34801561077557600080fd5b5061060e61078436600461307e565b611ad4565b34801561079557600080fd5b506103326107a4366004612f0e565b611b20565b3480156107b557600080fd5b506103326107c4366004612f0e565b611bb2565b3480156107d557600080fd5b506012546103329060ff1681565b6103626107f1366004612f38565b611bc0565b34801561080257600080fd5b5047610362565b34801561081557600080fd5b5061036261082436600461307e565b60116020526000908152604090205481565b34801561084257600080fd5b506103626108513660046130c5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561088857600080fd5b50610332610897366004612fc5565b611bce565b3480156108a857600080fd5b5061060e6108b736600461307e565b611c45565b3480156108c857600080fd5b50610362600e5481565b3480156108de57600080fd5b506103626108ed366004612f51565b611ce0565b3480156108fe57600080fd5b50600954610509906001600160a01b031681565b34801561091e57600080fd5b50600654610509906001600160a01b031681565b34801561093e57600080fd5b50610362600d5481565b34801561095457600080fd5b50610362610963366004613099565b611cee565b600080851180156109795750600084115b6109bb5760405162461bcd60e51b815260206004820152600e60248201526d0736f6c6420616e64206d696e20360941b60448201526064015b60405180910390fd5b6006546040516370a0823160e01b8152306004820152600091829182916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2c91906130f8565b6001600160a01b0387166000908152600f6020526040902054909150479060ff168015610a7157506001600160a01b0386166000908152600f602052604090205460ff165b15610a7e57889350610aa4565b6064610a8b856003613127565b610a959190613146565b9250610aa1838a613168565b93505b6000610aba85610ab48185613168565b856115b9565b905088811015610b0c5760405162461bcd60e51b815260206004820152601b60248201527f746f6b656e735f626f75676874203e3d206d696e5f746f6b656e73000000000060448201526064016109b2565b60065460405163a9059cbb60e01b81526001600160a01b038981166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b83919061317f565b610bbe5760405162461bcd60e51b815260206004820152600c60248201526b3a3930b739b332b91032b93960a11b60448201526064016109b2565b8315610bcd57610bcd84611d39565b808a896001600160a01b03167f7f743fb741e07b0c4daeb2af54fb3ebfa2bdb31d9913a0e555661c870411aae560405160405180910390a47f75f52e89b275bdaed7ceb1586a0c5ac0503a27a09ea92f74dd81db37fa8402824760405190815260200160405180910390a1610c40611ddd565b9998505050505050505050565b606060038054610c5c906131a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610c88906131a1565b8015610cd55780601f10610caa57610100808354040283529160200191610cd5565b820191906000526020600020905b815481529060010190602001808311610cb857829003601f168201915b5050505050905090565b600033610ced818585611efa565b60019150505b92915050565b6000808211610d0757600080fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7491906130f8565b9050610d818347836115b9565b9392505050565b6000610d818383333361201f565b6000808211610da457600080fd5b600080610db060025490565b6006546040516370a0823160e01b815230600482015291925047916000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610dfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2291906130f8565b905081610e2f8288613127565b610e399190613146565b610e449060016131d6565b9350600082610e538589613127565b610e5d9190613146565b979650505050505050565b6000610cf382343333612267565b600033610e848582856124eb565b610e8f85858561257d565b506001949350505050565b6005546000906001600160a01b03163314610ec75760405162461bcd60e51b81526004016109b2906131ee565b60005b8251811015610f1157610ef5838281518110610ee857610ee8613223565b6020026020010151610f18565b15610eff57600191505b80610f0981613239565b915050610eca565b505b919050565b6005546000906001600160a01b03163314610f455760405162461bcd60e51b81526004016109b2906131ee565b6001600160a01b0382166000908152600f602052604090205460ff1615610f13576001600160a01b0382166000818152600f6020908152604091829020805460ff1916905590519182527ff1abf01a1043b7c244d128e8595cf0c1d10743b022b03a02dffd8ca3bf729f5a91015b60405180910390a1506001919050565b6000808211610fd157600080fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561101a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103e91906130f8565b9050610d81838247611cee565b600080821161105957600080fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156110a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c691906130f8565b905060006110d5844784611cee565b949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190610ced90829086906111179087906131d6565b611efa565b600080600061112a60025490565b90506000811161113957600080fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611182573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a691906130f8565b90506000826111b54788613127565b6111bf9190613146565b90506000836111ce8489613127565b6111d89190613146565b919791965090945050505050565b60008082116112285760405162461bcd60e51b815260206004820152600e60248201526d0746f6b656e20736f6c64203c20360941b60448201526064016109b2565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611271573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129591906130f8565b905060006110d58483476115b9565b6005546001600160a01b031633146112ce5760405162461bcd60e51b81526004016109b2906131ee565b6112d86000612739565b565b6005546000906001600160a01b031633146113075760405162461bcd60e51b81526004016109b2906131ee565b6001600160a01b0382166000908152600f602052604090205460ff16610f13576001600160a01b0382166000818152600f6020908152604091829020805460ff1916600117905590519182527fd1bba68c128cc3f427e5831b3c6f99f480b6efa6b9e80c757768f6124158cc3f9101610fb3565b60008060008511801561138e5750600084115b801561139a5750600083115b6113a357600080fd5b60006113ae60025490565b9050600081116113bd57600080fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142a91906130f8565b9050600082611439478a613127565b6114439190613146565b9050600083611452848b613127565b61145c9190613146565b905087821015801561146e5750868110155b61147757600080fd5b611481338a61278b565b604051339083156108fc029084906000818181858888f193505050501580156114ae573d6000803e3d6000fd5b5060065460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015611500573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611524919061317f565b61152d57600080fd5b6040518190839033907f9985886fa2f848be5f83e79df7592adebce0c554283252f12b1c6ca0c1e3509390600090a433600090815260208190526040902054604051339060008051602061327983398151915290600090a360405189815260009033906000805160206132998339815191529060200160405180910390a3909890975095505050505050565b600080831180156115ca5750600082115b6116065760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f56414c554560981b60448201526064016109b2565b60006116128386613127565b9050600061162086866131d6565b905061162c8183613146565b9695505050505050565b606060048054610c5c906131a1565b600080821180156116565750600034115b6116ae5760405162461bcd60e51b815260206004820152602360248201527f53776170236164644c69717569646974793a20494e56414c49445f415247554d60448201526211539560ea1b60648201526084016109b2565b60006116b960025490565b336000908152601060205260408120549192509060ff1661170a57336000908152601060205260408120805460ff19166001908117909155600e8054919290916117049084906131d6565b90915550505b8115611905576000851161171d57600080fd5b60006117293447613168565b6006546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179b91906130f8565b9050816117a88234613127565b6117b29190613146565b6117bd9060016131d6565b92506000826117cc8634613127565b6117d69190613146565b90508387101580156117e85750878110155b6117f157600080fd5b6117fb33826128bf565b6006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061182f90339030908990600401613254565b6020604051808303816000875af115801561184e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611872919061317f565b61187b57600080fd5b6040518490349033907f6059fee843ff0198392eef05d3fd97a79c42b66d197dbfc62ebdf25cf169844490600090a433600090815260208190526040902054604051339060008051602061327983398151915290600090a360405181815233906000906000805160206132998339815191529060200160405180910390a39450610cf39350505050565b670de0b6b3a764000034101561194d5760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f56414c554560981b60448201526064016109b2565b50824761195a33826128bf565b6006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061198e90339030908790600401613254565b6020604051808303816000875af11580156119ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d1919061317f565b6119da57600080fd5b6040518290349033907f6059fee843ff0198392eef05d3fd97a79c42b66d197dbfc62ebdf25cf169844490600090a433600090815260208190526040902054604051339060008051602061327983398151915290600090a360405181815233906000906000805160206132998339815191529060200160405180910390a39250610cf3915050565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611aab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acf91906130f8565b905090565b6005546001600160a01b03163314611afe5760405162461bcd60e51b81526004016109b2906131ee565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015611ba55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016109b2565b610e8f8286868403611efa565b600033610ced81858561257d565b6000610cf334833333610968565b6005546000906001600160a01b03163314611bfb5760405162461bcd60e51b81526004016109b2906131ee565b60005b8251811015610f1157611c29838281518110611c1c57611c1c613223565b60200260200101516112da565b15611c3357600191505b80611c3d81613239565b915050611bfe565b6005546001600160a01b03163314611c6f5760405162461bcd60e51b81526004016109b2906131ee565b6001600160a01b038116611cd45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109b2565b611cdd81612739565b50565b6000610d818383333361298c565b60008083118015611cff5750600082115b611d0857600080fd5b6000611d148585613127565b90506000611d228685613168565b9050611d2e8183613146565b61162c9060016131d6565b60008111611d4657600080fd5b6008546040516000916001600160a01b03169083908381818185875af1925050503d8060008114611d93576040519150601f19603f3d011682016040523d82523d6000602084013e611d98565b606091505b5050905080611da657600080fd5b6040518281527fc328594cab3a117e8ddf861647e12c326eb6fa98ab8f707982ad7a13e8264c7c9060200160405180910390a15050565b6000611df0670de0b6b3a764000061104b565b600d54600c549192504791611e059042613168565b1115611e53577faffebbdd31c6253ae2ea132d4a132d79b3ad07ed2720b51749aa97330a7bdb13611e37826002613127565b60408051918252602082018590520160405180910390a142600c555b6040518181527f75f52e89b275bdaed7ceb1586a0c5ac0503a27a09ea92f74dd81db37fa8402829060200160405180910390a16040518281527f26632edb369f47eb451a281fad73ca0a52cfa3109e457a64524535839486ac6d9060200160405180910390a16001600b6000828254611ecc91906131d6565b9091555050336000908152601160205260408120805460019290611ef19084906131d6565b90915550505050565b6001600160a01b038316611f5c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016109b2565b6001600160a01b038216611fbd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016109b2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600080851161202d57600080fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015612076573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061209a91906130f8565b90504760006120aa888484611cee565b90506000818810156120f45760405162461bcd60e51b81526020600482015260136024820152721b585e081d1bdad95b9cc8195e18d959591959606a1b60448201526064016109b2565b6001600160a01b0387166000908152600f602052604090205460ff16801561213457506001600160a01b0386166000908152600f602052604090205460ff165b15612140575080612164565b605261214d836064613127565b6121579190613146565b9050612164898285612ba7565b6040516001600160a01b038716908a156108fc02908b906000818181858888f1935050505015801561219a573d6000803e3d6000fd5b506006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906121cf908a9030908690600401613254565b6020604051808303816000875af11580156121ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612212919061317f565b61221b57600080fd5b8881886001600160a01b03167f3cc32b807e0e6ade29defe751a1339a43c1e45d7d18eca93a916ca060ebe89ea60405160405180910390a461225b611ddd565b98975050505050505050565b600080851180156122785750600084115b61228157600080fd5b6006546040516370a0823160e01b8152306004820152600091829182916001600160a01b0316906370a0823190602401602060405180830381865afa1580156122ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f291906130f8565b905047600061230b8a6123058b85613168565b85611cee565b6001600160a01b0389166000908152600f602052604090205490915060ff16801561234e57506001600160a01b0387166000908152600f602052604090205460ff165b1561235b5780945061238e565b6061612368826064613127565b6123729190613146565b94506064612381866003613127565b61238b9190613146565b93505b600061239a868b613168565b905080156123da576040516001600160a01b038a169082156108fc029083906000818181858888f193505050501580156123d8573d6000803e3d6000fd5b505b60065460405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018e90529091169063a9059cbb906044016020604051808303816000875af115801561242d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612451919061317f565b61245a57600080fd5b84156124695761246985611d39565b8a868a6001600160a01b03167f7f743fb741e07b0c4daeb2af54fb3ebfa2bdb31d9913a0e555661c870411aae560405160405180910390a46040518581527fc328594cab3a117e8ddf861647e12c326eb6fa98ab8f707982ad7a13e8264c7c9060200160405180910390a16124dc611ddd565b50939998505050505050505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114612577578181101561256a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016109b2565b6125778484848403611efa565b50505050565b6001600160a01b0383166125e15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016109b2565b6001600160a01b0382166126435760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016109b2565b6001600160a01b038316600090815260208190526040902054818110156126bb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016109b2565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906126f29084906131d6565b92505081905550826001600160a01b0316846001600160a01b03166000805160206132998339815191528460405161272c91815260200190565b60405180910390a3612577565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166127eb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016109b2565b6001600160a01b0382166000908152602081905260409020548181101561285f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016109b2565b6001600160a01b038316600090815260208190526040812083830390556002805484929061288e908490613168565b90915550506040518281526000906001600160a01b0385169060008051602061329983398151915290602001612012565b6001600160a01b0382166129155760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016109b2565b806002600082825461292791906131d6565b90915550506001600160a01b038216600090815260208190526040812080548392906129549084906131d6565b90915550506040518181526001600160a01b038316906000906000805160206132998339815191529060200160405180910390a35050565b6000808511801561299d5750600084115b6129a657600080fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156129ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a1391906130f8565b905047600080612a248985856115b9565b905087811015612a3357600080fd5b6001600160a01b0387166000908152600f602052604090205460ff168015612a7357506001600160a01b0386166000908152600f602052604090205460ff165b15612a8057809150612aa4565b6064612a8d826052613127565b612a979190613146565b9150612aa4818a85612ba7565b6040516001600160a01b0387169083156108fc029084906000818181858888f19350505050158015612ada573d6000803e3d6000fd5b506006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90612b0f908a9030908e90600401613254565b6020604051808303816000875af1158015612b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b52919061317f565b612b5b57600080fd5b8189886001600160a01b03167f3cc32b807e0e6ade29defe751a1339a43c1e45d7d18eca93a916ca060ebe89ea60405160405180910390a4612b9b611ddd565b50979650505050505050565b60006064612bb6856008613127565b612bc09190613146565b9050612bcb81611d39565b60006064612bda856005613127565b612be49190613146565b60065460095460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350169063a9059cbb906044016020604051808303816000875af1158015612c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c5f919061317f565b5060006103e8612c70876019613127565b612c7a9190613146565b90506000612c8760025490565b9050600085612c968385613127565b612ca09190613146565b905060006064612cb183600a613127565b612cbb9190613146565b90506000612cc98284613168565b600a54909150612ce2906001600160a01b0316836128bf565b600754612cf8906001600160a01b0316826128bf565b600760009054906101000a90046001600160a01b03166001600160a01b031663677a78726040518163ffffffff1660e01b8152600401600060405180830381600087803b158015612d4857600080fd5b505af1158015612d5c573d6000803e3d6000fd5b505050507fc328594cab3a117e8ddf861647e12c326eb6fa98ab8f707982ad7a13e8264c7c87604051612d9191815260200190565b60405180910390a16040518681527f044b0fc80e673b7ce4245d6302c96dc22199a569a1b815fe4295e3b6ea54f95b9060200160405180910390a1600a546001600160a01b031660008181526020819052604080822054905190929160008051602061327983398151915291a3600a546040518381526001600160a01b03909116906000906000805160206132998339815191529060200160405180910390a36007546001600160a01b031660008181526020819052604080822054905190929160008051602061327983398151915291a36007546040518281526001600160a01b03909116906000906000805160206132998339815191529060200160405180910390a350505050505050505050565b600060208083528351808285015260005b81811015612ecf57858101830151858201604001528201612eb3565b81811115612ee1576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610f1357600080fd5b60008060408385031215612f2157600080fd5b612f2a83612ef7565b946020939093013593505050565b600060208284031215612f4a57600080fd5b5035919050565b60008060408385031215612f6457600080fd5b50508035926020909101359150565b600080600060608486031215612f8857600080fd5b612f9184612ef7565b9250612f9f60208501612ef7565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215612fd857600080fd5b823567ffffffffffffffff80821115612ff057600080fd5b818501915085601f83011261300457600080fd5b81358181111561301657613016612faf565b8060051b604051601f19603f8301168101818110858211171561303b5761303b612faf565b60405291825284820192508381018501918883111561305957600080fd5b938501935b8285101561225b5761306f85612ef7565b8452938501939285019261305e565b60006020828403121561309057600080fd5b610d8182612ef7565b6000806000606084860312156130ae57600080fd5b505081359360208301359350604090920135919050565b600080604083850312156130d857600080fd5b6130e183612ef7565b91506130ef60208401612ef7565b90509250929050565b60006020828403121561310a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561314157613141613111565b500290565b60008261316357634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561317a5761317a613111565b500390565b60006020828403121561319157600080fd5b81518015158114610d8157600080fd5b600181811c908216806131b557607f821691505b60208210811415610f1157634e487b7160e01b600052602260045260246000fd5b600082198211156131e9576131e9613111565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561324d5761324d613111565b5060010190565b6001600160a01b03938416815291909216602082015260408101919091526060019056fe709a5b29491696d085fa151016fb243ea3cf977d385d7220302ec663ceb15d28ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ffdabee5af2b80d03a66231a40d5878929f00aae6bf3a32c141ec34d5b77e59664736f6c634300080c0033",
  "bytecodeSha1": "6d1841070e8e1caee249fbb121849ea98f99636c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "StakeFountain",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "238": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {
        "ERC20._approve": {
          "228": [
            10254,
            10273,
            true
          ],
          "229": [
            10332,
            10353,
            true
          ]
        },
        "ERC20._burn": {
          "235": [
            9207,
            9228,
            true
          ],
          "236": [
            9398,
            9422,
            true
          ]
        },
        "ERC20._mint": {
          "237": [
            8498,
            8519,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "230": [
            10966,
            11003,
            false
          ],
          "231": [
            11027,
            11053,
            true
          ]
        },
        "ERC20._transfer": {
          "232": [
            7614,
            7632,
            true
          ],
          "233": [
            7692,
            7708,
            true
          ],
          "234": [
            7863,
            7884,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "227": [
            6815,
            6850,
            true
          ]
        }
      },
      "10": {},
      "11": {},
      "13": {},
      "15": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {
        "StakeFountain.addAddressToWhitelist": {
          "184": [
            3806,
            3821,
            false
          ]
        },
        "StakeFountain.addAddressesToWhitelist": {
          "203": [
            4243,
            4274,
            false
          ]
        },
        "StakeFountain.addLiquidity": {
          "194": [
            22234,
            22248,
            false
          ],
          "195": [
            22252,
            22265,
            true
          ],
          "196": [
            22554,
            22573,
            false
          ],
          "197": [
            22597,
            22614,
            true
          ],
          "198": [
            22968,
            22994,
            false
          ],
          "199": [
            22998,
            23031,
            true
          ],
          "200": [
            23133,
            23192,
            true
          ],
          "201": [
            23487,
            23507,
            true
          ],
          "202": [
            23722,
            23781,
            true
          ]
        },
        "StakeFountain.bnbToTokenInput": {
          "169": [
            7661,
            7674,
            false
          ],
          "170": [
            7678,
            7693,
            true
          ],
          "171": [
            7900,
            7917,
            false
          ],
          "172": [
            7921,
            7942,
            false
          ],
          "173": [
            8264,
            8292,
            true
          ],
          "174": [
            8408,
            8449,
            true
          ],
          "175": [
            8480,
            8496,
            false
          ]
        },
        "StakeFountain.bnbToTokenOutput": {
          "214": [
            9703,
            9720,
            false
          ],
          "215": [
            9724,
            9735,
            true
          ],
          "216": [
            10071,
            10087,
            false
          ],
          "217": [
            10091,
            10111,
            false
          ],
          "218": [
            10402,
            10416,
            false
          ],
          "219": [
            10495,
            10535,
            true
          ],
          "220": [
            10550,
            10566,
            false
          ]
        },
        "StakeFountain.getBnbToLiquidityInputPrice": {
          "177": [
            20614,
            20626,
            true
          ]
        },
        "StakeFountain.getBnbToTokenInputPrice": {
          "176": [
            18186,
            18198,
            true
          ]
        },
        "StakeFountain.getBnbToTokenOutputPrice": {
          "181": [
            18697,
            18714,
            true
          ]
        },
        "StakeFountain.getInputPrice": {
          "192": [
            6085,
            6102,
            false
          ],
          "193": [
            6106,
            6124,
            true
          ]
        },
        "StakeFountain.getLiquidityToReserveInputPrice": {
          "182": [
            21215,
            21234,
            true
          ]
        },
        "StakeFountain.getOutputPrice": {
          "204": [
            6868,
            6885,
            false
          ],
          "205": [
            6889,
            6907,
            true
          ]
        },
        "StakeFountain.getTokenToBnbInputPrice": {
          "183": [
            19303,
            19318,
            true
          ]
        },
        "StakeFountain.getTokenToBnbOutputPrice": {
          "180": [
            19916,
            19930,
            true
          ]
        },
        "StakeFountain.removeAddressFromWhitelist": {
          "179": [
            4593,
            4608,
            false
          ]
        },
        "StakeFountain.removeAddressesFromWhitelist": {
          "178": [
            5067,
            5103,
            false
          ]
        },
        "StakeFountain.removeLiquidity": {
          "185": [
            24505,
            24515,
            false
          ],
          "186": [
            24519,
            24530,
            false
          ],
          "187": [
            24534,
            24548,
            true
          ],
          "188": [
            24616,
            24635,
            true
          ],
          "189": [
            24877,
            24898,
            false
          ],
          "190": [
            24902,
            24928,
            true
          ],
          "191": [
            25032,
            25072,
            true
          ]
        },
        "StakeFountain.tokenToBnbInput": {
          "221": [
            12083,
            12098,
            false
          ],
          "222": [
            12102,
            12113,
            true
          ],
          "223": [
            12414,
            12435,
            true
          ],
          "224": [
            12450,
            12466,
            false
          ],
          "225": [
            12470,
            12490,
            false
          ],
          "226": [
            12757,
            12810,
            true
          ]
        },
        "StakeFountain.tokenToBnbOutput": {
          "209": [
            13579,
            13593,
            true
          ],
          "210": [
            13938,
            13963,
            true
          ],
          "211": [
            14001,
            14017,
            false
          ],
          "212": [
            14021,
            14041,
            false
          ],
          "213": [
            14350,
            14409,
            true
          ]
        },
        "StakeFountain.trackGlobalStats": {
          "208": [
            15154,
            15204,
            false
          ]
        },
        "StakeFountain.transferTreasuryFee": {
          "206": [
            15714,
            15731,
            true
          ],
          "207": [
            15822,
            15824,
            true
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "137": [
            2378,
            2395
          ],
          "138": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "5": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "45": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "89": [
            1998,
            2071
          ],
          "90": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "ERC20._approve": {
          "103": [
            10246,
            10314
          ],
          "104": [
            10324,
            10392
          ],
          "105": [
            10403,
            10439
          ],
          "106": [
            10449,
            10486
          ]
        },
        "ERC20._burn": {
          "139": [
            9199,
            9266
          ],
          "140": [
            9390,
            9461
          ],
          "141": [
            9495,
            9539
          ],
          "142": [
            9559,
            9581
          ],
          "143": [
            9592,
            9634
          ]
        },
        "ERC20._mint": {
          "144": [
            8490,
            8555
          ],
          "145": [
            8626,
            8648
          ],
          "146": [
            8658,
            8686
          ],
          "147": [
            8696,
            8738
          ]
        },
        "ERC20._spendAllowance": {
          "128": [
            11019,
            11087
          ],
          "129": [
            11129,
            11180
          ]
        },
        "ERC20._transfer": {
          "130": [
            7606,
            7674
          ],
          "131": [
            7684,
            7748
          ],
          "132": [
            7855,
            7927
          ],
          "133": [
            7961,
            7999
          ],
          "134": [
            8019,
            8042
          ],
          "135": [
            8053,
            8084
          ],
          "136": [
            8095,
            8132
          ]
        },
        "ERC20.allowance": {
          "8": [
            4084,
            4118
          ]
        },
        "ERC20.approve": {
          "22": [
            4570,
            4602
          ],
          "23": [
            4612,
            4623
          ]
        },
        "ERC20.balanceOf": {
          "4": [
            3501,
            3526
          ]
        },
        "ERC20.decimals": {
          "2": [
            3168,
            3177
          ]
        },
        "ERC20.decreaseAllowance": {
          "83": [
            6807,
            6892
          ],
          "84": [
            6926,
            6986
          ]
        },
        "ERC20.increaseAllowance": {
          "41": [
            6015,
            6081
          ]
        },
        "ERC20.name": {
          "20": [
            2235,
            2247
          ]
        },
        "ERC20.symbol": {
          "60": [
            2448,
            2462
          ]
        },
        "ERC20.totalSupply": {
          "1": [
            3324,
            3343
          ]
        },
        "ERC20.transfer": {
          "85": [
            3862,
            3890
          ]
        },
        "ERC20.transferFrom": {
          "30": [
            5375,
            5413
          ],
          "31": [
            5423,
            5450
          ],
          "32": [
            5460,
            5471
          ]
        }
      },
      "10": {},
      "11": {},
      "13": {},
      "15": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "Context._msgSender": {
          "21": [
            712,
            729
          ]
        }
      },
      "7": {},
      "8": {
        "StakeFountain.<receive>": {
          "0": [
            5468,
            5521
          ]
        },
        "StakeFountain.addAddressToWhitelist": {
          "46": [
            3837,
            3859
          ],
          "47": [
            3873,
            3907
          ]
        },
        "StakeFountain.addAddressesToWhitelist": {
          "87": [
            4294,
            4308
          ],
          "88": [
            4220,
            4223
          ]
        },
        "StakeFountain.addLiquidity": {
          "61": [
            22213,
            22326
          ],
          "62": [
            22472,
            22501
          ],
          "63": [
            22515,
            22529
          ],
          "64": [
            22589,
            22615
          ],
          "65": [
            22766,
            22828
          ],
          "66": [
            22943,
            23045
          ],
          "67": [
            23059,
            23094
          ],
          "68": [
            23108,
            23206
          ],
          "69": [
            23221,
            23277
          ],
          "70": [
            23291,
            23342
          ],
          "71": [
            23356,
            23411
          ],
          "72": [
            23425,
            23448
          ],
          "73": [
            23479,
            23525
          ],
          "74": [
            23539,
            23564
          ],
          "75": [
            23641,
            23683
          ],
          "76": [
            23697,
            23795
          ],
          "77": [
            23810,
            23866
          ],
          "78": [
            23880,
            23931
          ],
          "79": [
            23945,
            24001
          ],
          "80": [
            24015,
            24039
          ]
        },
        "StakeFountain.bnbBalance": {
          "7": [
            20328,
            20356
          ]
        },
        "StakeFountain.bnbToTokenInput": {
          "9": [
            7653,
            7712
          ],
          "10": [
            7958,
            7978
          ],
          "11": [
            8009,
            8044
          ],
          "12": [
            8058,
            8093
          ],
          "13": [
            8256,
            8324
          ],
          "14": [
            8400,
            8466
          ],
          "15": [
            8498,
            8531
          ],
          "16": [
            8542,
            8596
          ],
          "17": [
            8606,
            8642
          ],
          "18": [
            8653,
            8671
          ],
          "19": [
            8682,
            8702
          ]
        },
        "StakeFountain.bnbToTokenOutput": {
          "117": [
            9695,
            9736
          ],
          "118": [
            10127,
            10152
          ],
          "119": [
            10183,
            10221
          ],
          "120": [
            10235,
            10276
          ],
          "121": [
            10432,
            10467
          ],
          "122": [
            10487,
            10536
          ],
          "123": [
            10568,
            10601
          ],
          "124": [
            10611,
            10669
          ],
          "125": [
            10679,
            10709
          ],
          "126": [
            10719,
            10737
          ],
          "127": [
            10747,
            10768
          ]
        },
        "StakeFountain.bnbToTokenSwapInput": {
          "86": [
            9067,
            9136
          ]
        },
        "StakeFountain.bnbToTokenSwapOutput": {
          "29": [
            11117,
            11202
          ]
        },
        "StakeFountain.getBnbToLiquidityInputPrice": {
          "27": [
            20606,
            20627
          ],
          "28": [
            20837,
            20898
          ]
        },
        "StakeFountain.getBnbToTokenInputPrice": {
          "24": [
            18178,
            18199
          ],
          "25": [
            18273,
            18341
          ]
        },
        "StakeFountain.getBnbToTokenOutputPrice": {
          "40": [
            18689,
            18715
          ]
        },
        "StakeFountain.getInputPrice": {
          "58": [
            6077,
            6142
          ],
          "59": [
            6271,
            6301
          ]
        },
        "StakeFountain.getLiquidityToReserveInputPrice": {
          "42": [
            21207,
            21235
          ],
          "43": [
            21465,
            21498
          ]
        },
        "StakeFountain.getOutputPrice": {
          "92": [
            6860,
            6908
          ],
          "93": [
            7041,
            7077
          ]
        },
        "StakeFountain.getTokenToBnbInputPrice": {
          "44": [
            19295,
            19337
          ]
        },
        "StakeFountain.getTokenToBnbOutputPrice": {
          "38": [
            19908,
            19931
          ],
          "39": [
            20005,
            20076
          ]
        },
        "StakeFountain.removeAddressFromWhitelist": {
          "35": [
            4624,
            4647
          ],
          "36": [
            4661,
            4697
          ],
          "37": [
            4711,
            4725
          ]
        },
        "StakeFountain.removeAddressesFromWhitelist": {
          "33": [
            5123,
            5137
          ],
          "34": [
            5044,
            5047
          ]
        },
        "StakeFountain.removeLiquidity": {
          "48": [
            24497,
            24549
          ],
          "49": [
            24608,
            24636
          ],
          "50": [
            24869,
            24929
          ],
          "51": [
            24939,
            24964
          ],
          "52": [
            24974,
            25014
          ],
          "53": [
            25024,
            25073
          ],
          "54": [
            25083,
            25143
          ],
          "55": [
            25153,
            25204
          ],
          "56": [
            25214,
            25259
          ],
          "57": [
            25269,
            25302
          ]
        },
        "StakeFountain.setLock": {
          "82": [
            3366,
            3397
          ]
        },
        "StakeFountain.tokenAddress": {
          "6": [
            20232,
            20253
          ]
        },
        "StakeFountain.tokenBalance": {
          "81": [
            20433,
            20470
          ]
        },
        "StakeFountain.tokenToBnbFees": {
          "158": [
            16440,
            16473
          ],
          "159": [
            16600,
            16632
          ],
          "160": [
            17213,
            17259
          ],
          "161": [
            17269,
            17324
          ],
          "162": [
            17334,
            17357
          ],
          "163": [
            17390,
            17420
          ],
          "164": [
            17430,
            17454
          ],
          "165": [
            17465,
            17516
          ],
          "166": [
            17526,
            17592
          ],
          "167": [
            17603,
            17672
          ],
          "168": [
            17682,
            17803
          ]
        },
        "StakeFountain.tokenToBnbInput": {
          "148": [
            12075,
            12114
          ],
          "149": [
            12406,
            12436
          ],
          "150": [
            12506,
            12535
          ],
          "151": [
            12566,
            12608
          ],
          "152": [
            12622,
            12674
          ],
          "153": [
            12694,
            12739
          ],
          "154": [
            12749,
            12811
          ],
          "155": [
            12821,
            12877
          ],
          "156": [
            12887,
            12905
          ],
          "157": [
            12915,
            12938
          ]
        },
        "StakeFountain.tokenToBnbOutput": {
          "107": [
            13571,
            13594
          ],
          "108": [
            13930,
            13987
          ],
          "109": [
            14057,
            14088
          ],
          "110": [
            14119,
            14163
          ],
          "111": [
            14177,
            14235
          ],
          "112": [
            14293,
            14332
          ],
          "113": [
            14342,
            14410
          ],
          "114": [
            14420,
            14476
          ],
          "115": [
            14486,
            14504
          ],
          "116": [
            14515,
            14539
          ]
        },
        "StakeFountain.tokenToBnbSwapInput": {
          "91": [
            13316,
            13384
          ]
        },
        "StakeFountain.tokenToBnbSwapOutput": {
          "26": [
            14923,
            14994
          ]
        },
        "StakeFountain.trackGlobalStats": {
          "97": [
            15220,
            15254
          ],
          "98": [
            15268,
            15298
          ],
          "99": [
            15319,
            15350
          ],
          "100": [
            15360,
            15379
          ],
          "101": [
            15390,
            15403
          ],
          "102": [
            15413,
            15434
          ]
        },
        "StakeFountain.transferTreasuryFee": {
          "94": [
            15706,
            15732
          ],
          "95": [
            15814,
            15825
          ],
          "96": [
            15835,
            15866
          ]
        },
        "StakeFountain.txs": {
          "3": [
            21579,
            21597
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
    "IPancakeSwapPair",
    "IToken",
    "IVault",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeMath",
    "StakeToken",
    "TokenLocker"
  ],
  "deployedBytecode": "6080604052600436106102cd5760003560e01c8063857620e111610175578063b187bd26116100dc578063f2fde38b11610095578063fbfa77cf1161006f578063fbfa77cf146108f2578063fc0c546a14610912578063fc51820514610932578063fd11c2231461094857600080fd5b8063f2fde38b1461089c578063f8401fe6146108bc578063fb48d48a146108d257600080fd5b8063b187bd26146107c9578063b5695026146107e3578063d013cbe2146107f6578063d596f9b414610809578063dd62ed3e14610836578063e2ec6ec31461087c57600080fd5b80639cd441da1161012e5780639cd441da146107235780639d76ea58146107365780639e1a4d1914610754578063a32088d414610769578063a457c2d714610789578063a9059cbb146107a957600080fd5b8063857620e11461066057806389f2a871146106805780638da5cb5b146106a05780638f798a5d146106be57806395d89b41146106de5780639b19251a146106f357600080fd5b806338e70059116102345780635746402b116101ed57806370a08231116101c757806370a08231146105c3578063715018a6146105f9578063769d7235146106105780637b9417c81461064057600080fd5b80635746402b1461056d57806361d027b31461058d5780637044f7a7146105ad57600080fd5b806338e700591461047457806339509351146104945780633da2ec9b146104b457806341fbb050146104e95780634eaa1b8714610521578063537a39bb1461055757600080fd5b80631db7976f116102865780631db7976f146103c557806323b872dd146103d857806324953eaa146103f8578063286dd3f5146104185780632f38c6e614610438578063313ce5671461045857600080fd5b806306fdde03146102e7578063095ea7b3146103125780630e2508421461034257806318160ddd146103705780631a12be0d146103855780631a42b767146103a557600080fd5b366102e2576102df3460013333610968565b50005b600080fd5b3480156102f357600080fd5b506102fc610c4d565b6040516103099190612ea2565b60405180910390f35b34801561031e57600080fd5b5061033261032d366004612f0e565b610cdf565b6040519015158152602001610309565b34801561034e57600080fd5b5061036261035d366004612f38565b610cf9565b604051908152602001610309565b34801561037c57600080fd5b50600254610362565b34801561039157600080fd5b506103626103a0366004612f51565b610d88565b3480156103b157600080fd5b506103626103c0366004612f38565b610d96565b6103626103d3366004612f38565b610e68565b3480156103e457600080fd5b506103326103f3366004612f73565b610e76565b34801561040457600080fd5b50610332610413366004612fc5565b610e9a565b34801561042457600080fd5b5061033261043336600461307e565b610f18565b34801561044457600080fd5b50610362610453366004612f38565b610fc3565b34801561046457600080fd5b5060405160128152602001610309565b34801561048057600080fd5b5061036261048f366004612f38565b61104b565b3480156104a057600080fd5b506103326104af366004612f0e565b6110dd565b3480156104c057600080fd5b506104d46104cf366004612f38565b61111c565b60408051928352602083019190915201610309565b3480156104f557600080fd5b50600a54610509906001600160a01b031681565b6040516001600160a01b039091168152602001610309565b34801561052d57600080fd5b5061036261053c36600461307e565b6001600160a01b031660009081526011602052604090205490565b34801561056357600080fd5b50610362600b5481565b34801561057957600080fd5b50610362610588366004612f38565b6111e6565b34801561059957600080fd5b50600854610509906001600160a01b031681565b3480156105b957600080fd5b50610362600c5481565b3480156105cf57600080fd5b506103626105de36600461307e565b6001600160a01b031660009081526020819052604090205490565b34801561060557600080fd5b5061060e6112a4565b005b34801561061c57600080fd5b5061033261062b36600461307e565b60106020526000908152604090205460ff1681565b34801561064c57600080fd5b5061033261065b36600461307e565b6112da565b34801561066c57600080fd5b506104d461067b366004613099565b61137b565b34801561068c57600080fd5b5061036261069b366004613099565b6115b9565b3480156106ac57600080fd5b506005546001600160a01b0316610509565b3480156106ca57600080fd5b50600754610509906001600160a01b031681565b3480156106ea57600080fd5b506102fc611636565b3480156106ff57600080fd5b5061033261070e36600461307e565b600f6020526000908152604090205460ff1681565b610362610731366004612f51565b611645565b34801561074257600080fd5b506006546001600160a01b0316610509565b34801561076057600080fd5b50610362611a62565b34801561077557600080fd5b5061060e61078436600461307e565b611ad4565b34801561079557600080fd5b506103326107a4366004612f0e565b611b20565b3480156107b557600080fd5b506103326107c4366004612f0e565b611bb2565b3480156107d557600080fd5b506012546103329060ff1681565b6103626107f1366004612f38565b611bc0565b34801561080257600080fd5b5047610362565b34801561081557600080fd5b5061036261082436600461307e565b60116020526000908152604090205481565b34801561084257600080fd5b506103626108513660046130c5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561088857600080fd5b50610332610897366004612fc5565b611bce565b3480156108a857600080fd5b5061060e6108b736600461307e565b611c45565b3480156108c857600080fd5b50610362600e5481565b3480156108de57600080fd5b506103626108ed366004612f51565b611ce0565b3480156108fe57600080fd5b50600954610509906001600160a01b031681565b34801561091e57600080fd5b50600654610509906001600160a01b031681565b34801561093e57600080fd5b50610362600d5481565b34801561095457600080fd5b50610362610963366004613099565b611cee565b600080851180156109795750600084115b6109bb5760405162461bcd60e51b815260206004820152600e60248201526d0736f6c6420616e64206d696e20360941b60448201526064015b60405180910390fd5b6006546040516370a0823160e01b8152306004820152600091829182916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2c91906130f8565b6001600160a01b0387166000908152600f6020526040902054909150479060ff168015610a7157506001600160a01b0386166000908152600f602052604090205460ff165b15610a7e57889350610aa4565b6064610a8b856003613127565b610a959190613146565b9250610aa1838a613168565b93505b6000610aba85610ab48185613168565b856115b9565b905088811015610b0c5760405162461bcd60e51b815260206004820152601b60248201527f746f6b656e735f626f75676874203e3d206d696e5f746f6b656e73000000000060448201526064016109b2565b60065460405163a9059cbb60e01b81526001600160a01b038981166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b83919061317f565b610bbe5760405162461bcd60e51b815260206004820152600c60248201526b3a3930b739b332b91032b93960a11b60448201526064016109b2565b8315610bcd57610bcd84611d39565b808a896001600160a01b03167f7f743fb741e07b0c4daeb2af54fb3ebfa2bdb31d9913a0e555661c870411aae560405160405180910390a47f75f52e89b275bdaed7ceb1586a0c5ac0503a27a09ea92f74dd81db37fa8402824760405190815260200160405180910390a1610c40611ddd565b9998505050505050505050565b606060038054610c5c906131a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610c88906131a1565b8015610cd55780601f10610caa57610100808354040283529160200191610cd5565b820191906000526020600020905b815481529060010190602001808311610cb857829003601f168201915b5050505050905090565b600033610ced818585611efa565b60019150505b92915050565b6000808211610d0757600080fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7491906130f8565b9050610d818347836115b9565b9392505050565b6000610d818383333361201f565b6000808211610da457600080fd5b600080610db060025490565b6006546040516370a0823160e01b815230600482015291925047916000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610dfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2291906130f8565b905081610e2f8288613127565b610e399190613146565b610e449060016131d6565b9350600082610e538589613127565b610e5d9190613146565b979650505050505050565b6000610cf382343333612267565b600033610e848582856124eb565b610e8f85858561257d565b506001949350505050565b6005546000906001600160a01b03163314610ec75760405162461bcd60e51b81526004016109b2906131ee565b60005b8251811015610f1157610ef5838281518110610ee857610ee8613223565b6020026020010151610f18565b15610eff57600191505b80610f0981613239565b915050610eca565b505b919050565b6005546000906001600160a01b03163314610f455760405162461bcd60e51b81526004016109b2906131ee565b6001600160a01b0382166000908152600f602052604090205460ff1615610f13576001600160a01b0382166000818152600f6020908152604091829020805460ff1916905590519182527ff1abf01a1043b7c244d128e8595cf0c1d10743b022b03a02dffd8ca3bf729f5a91015b60405180910390a1506001919050565b6000808211610fd157600080fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561101a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103e91906130f8565b9050610d81838247611cee565b600080821161105957600080fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156110a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c691906130f8565b905060006110d5844784611cee565b949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190610ced90829086906111179087906131d6565b611efa565b600080600061112a60025490565b90506000811161113957600080fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611182573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a691906130f8565b90506000826111b54788613127565b6111bf9190613146565b90506000836111ce8489613127565b6111d89190613146565b919791965090945050505050565b60008082116112285760405162461bcd60e51b815260206004820152600e60248201526d0746f6b656e20736f6c64203c20360941b60448201526064016109b2565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611271573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129591906130f8565b905060006110d58483476115b9565b6005546001600160a01b031633146112ce5760405162461bcd60e51b81526004016109b2906131ee565b6112d86000612739565b565b6005546000906001600160a01b031633146113075760405162461bcd60e51b81526004016109b2906131ee565b6001600160a01b0382166000908152600f602052604090205460ff16610f13576001600160a01b0382166000818152600f6020908152604091829020805460ff1916600117905590519182527fd1bba68c128cc3f427e5831b3c6f99f480b6efa6b9e80c757768f6124158cc3f9101610fb3565b60008060008511801561138e5750600084115b801561139a5750600083115b6113a357600080fd5b60006113ae60025490565b9050600081116113bd57600080fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142a91906130f8565b9050600082611439478a613127565b6114439190613146565b9050600083611452848b613127565b61145c9190613146565b905087821015801561146e5750868110155b61147757600080fd5b611481338a61278b565b604051339083156108fc029084906000818181858888f193505050501580156114ae573d6000803e3d6000fd5b5060065460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015611500573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611524919061317f565b61152d57600080fd5b6040518190839033907f9985886fa2f848be5f83e79df7592adebce0c554283252f12b1c6ca0c1e3509390600090a433600090815260208190526040902054604051339060008051602061327983398151915290600090a360405189815260009033906000805160206132998339815191529060200160405180910390a3909890975095505050505050565b600080831180156115ca5750600082115b6116065760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f56414c554560981b60448201526064016109b2565b60006116128386613127565b9050600061162086866131d6565b905061162c8183613146565b9695505050505050565b606060048054610c5c906131a1565b600080821180156116565750600034115b6116ae5760405162461bcd60e51b815260206004820152602360248201527f53776170236164644c69717569646974793a20494e56414c49445f415247554d60448201526211539560ea1b60648201526084016109b2565b60006116b960025490565b336000908152601060205260408120549192509060ff1661170a57336000908152601060205260408120805460ff19166001908117909155600e8054919290916117049084906131d6565b90915550505b8115611905576000851161171d57600080fd5b60006117293447613168565b6006546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179b91906130f8565b9050816117a88234613127565b6117b29190613146565b6117bd9060016131d6565b92506000826117cc8634613127565b6117d69190613146565b90508387101580156117e85750878110155b6117f157600080fd5b6117fb33826128bf565b6006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061182f90339030908990600401613254565b6020604051808303816000875af115801561184e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611872919061317f565b61187b57600080fd5b6040518490349033907f6059fee843ff0198392eef05d3fd97a79c42b66d197dbfc62ebdf25cf169844490600090a433600090815260208190526040902054604051339060008051602061327983398151915290600090a360405181815233906000906000805160206132998339815191529060200160405180910390a39450610cf39350505050565b670de0b6b3a764000034101561194d5760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f56414c554560981b60448201526064016109b2565b50824761195a33826128bf565b6006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061198e90339030908790600401613254565b6020604051808303816000875af11580156119ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d1919061317f565b6119da57600080fd5b6040518290349033907f6059fee843ff0198392eef05d3fd97a79c42b66d197dbfc62ebdf25cf169844490600090a433600090815260208190526040902054604051339060008051602061327983398151915290600090a360405181815233906000906000805160206132998339815191529060200160405180910390a39250610cf3915050565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611aab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acf91906130f8565b905090565b6005546001600160a01b03163314611afe5760405162461bcd60e51b81526004016109b2906131ee565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015611ba55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016109b2565b610e8f8286868403611efa565b600033610ced81858561257d565b6000610cf334833333610968565b6005546000906001600160a01b03163314611bfb5760405162461bcd60e51b81526004016109b2906131ee565b60005b8251811015610f1157611c29838281518110611c1c57611c1c613223565b60200260200101516112da565b15611c3357600191505b80611c3d81613239565b915050611bfe565b6005546001600160a01b03163314611c6f5760405162461bcd60e51b81526004016109b2906131ee565b6001600160a01b038116611cd45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109b2565b611cdd81612739565b50565b6000610d818383333361298c565b60008083118015611cff5750600082115b611d0857600080fd5b6000611d148585613127565b90506000611d228685613168565b9050611d2e8183613146565b61162c9060016131d6565b60008111611d4657600080fd5b6008546040516000916001600160a01b03169083908381818185875af1925050503d8060008114611d93576040519150601f19603f3d011682016040523d82523d6000602084013e611d98565b606091505b5050905080611da657600080fd5b6040518281527fc328594cab3a117e8ddf861647e12c326eb6fa98ab8f707982ad7a13e8264c7c9060200160405180910390a15050565b6000611df0670de0b6b3a764000061104b565b600d54600c549192504791611e059042613168565b1115611e53577faffebbdd31c6253ae2ea132d4a132d79b3ad07ed2720b51749aa97330a7bdb13611e37826002613127565b60408051918252602082018590520160405180910390a142600c555b6040518181527f75f52e89b275bdaed7ceb1586a0c5ac0503a27a09ea92f74dd81db37fa8402829060200160405180910390a16040518281527f26632edb369f47eb451a281fad73ca0a52cfa3109e457a64524535839486ac6d9060200160405180910390a16001600b6000828254611ecc91906131d6565b9091555050336000908152601160205260408120805460019290611ef19084906131d6565b90915550505050565b6001600160a01b038316611f5c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016109b2565b6001600160a01b038216611fbd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016109b2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600080851161202d57600080fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015612076573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061209a91906130f8565b90504760006120aa888484611cee565b90506000818810156120f45760405162461bcd60e51b81526020600482015260136024820152721b585e081d1bdad95b9cc8195e18d959591959606a1b60448201526064016109b2565b6001600160a01b0387166000908152600f602052604090205460ff16801561213457506001600160a01b0386166000908152600f602052604090205460ff165b15612140575080612164565b605261214d836064613127565b6121579190613146565b9050612164898285612ba7565b6040516001600160a01b038716908a156108fc02908b906000818181858888f1935050505015801561219a573d6000803e3d6000fd5b506006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906121cf908a9030908690600401613254565b6020604051808303816000875af11580156121ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612212919061317f565b61221b57600080fd5b8881886001600160a01b03167f3cc32b807e0e6ade29defe751a1339a43c1e45d7d18eca93a916ca060ebe89ea60405160405180910390a461225b611ddd565b98975050505050505050565b600080851180156122785750600084115b61228157600080fd5b6006546040516370a0823160e01b8152306004820152600091829182916001600160a01b0316906370a0823190602401602060405180830381865afa1580156122ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f291906130f8565b905047600061230b8a6123058b85613168565b85611cee565b6001600160a01b0389166000908152600f602052604090205490915060ff16801561234e57506001600160a01b0387166000908152600f602052604090205460ff165b1561235b5780945061238e565b6061612368826064613127565b6123729190613146565b94506064612381866003613127565b61238b9190613146565b93505b600061239a868b613168565b905080156123da576040516001600160a01b038a169082156108fc029083906000818181858888f193505050501580156123d8573d6000803e3d6000fd5b505b60065460405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018e90529091169063a9059cbb906044016020604051808303816000875af115801561242d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612451919061317f565b61245a57600080fd5b84156124695761246985611d39565b8a868a6001600160a01b03167f7f743fb741e07b0c4daeb2af54fb3ebfa2bdb31d9913a0e555661c870411aae560405160405180910390a46040518581527fc328594cab3a117e8ddf861647e12c326eb6fa98ab8f707982ad7a13e8264c7c9060200160405180910390a16124dc611ddd565b50939998505050505050505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114612577578181101561256a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016109b2565b6125778484848403611efa565b50505050565b6001600160a01b0383166125e15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016109b2565b6001600160a01b0382166126435760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016109b2565b6001600160a01b038316600090815260208190526040902054818110156126bb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016109b2565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906126f29084906131d6565b92505081905550826001600160a01b0316846001600160a01b03166000805160206132998339815191528460405161272c91815260200190565b60405180910390a3612577565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166127eb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016109b2565b6001600160a01b0382166000908152602081905260409020548181101561285f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016109b2565b6001600160a01b038316600090815260208190526040812083830390556002805484929061288e908490613168565b90915550506040518281526000906001600160a01b0385169060008051602061329983398151915290602001612012565b6001600160a01b0382166129155760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016109b2565b806002600082825461292791906131d6565b90915550506001600160a01b038216600090815260208190526040812080548392906129549084906131d6565b90915550506040518181526001600160a01b038316906000906000805160206132998339815191529060200160405180910390a35050565b6000808511801561299d5750600084115b6129a657600080fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156129ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a1391906130f8565b905047600080612a248985856115b9565b905087811015612a3357600080fd5b6001600160a01b0387166000908152600f602052604090205460ff168015612a7357506001600160a01b0386166000908152600f602052604090205460ff165b15612a8057809150612aa4565b6064612a8d826052613127565b612a979190613146565b9150612aa4818a85612ba7565b6040516001600160a01b0387169083156108fc029084906000818181858888f19350505050158015612ada573d6000803e3d6000fd5b506006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90612b0f908a9030908e90600401613254565b6020604051808303816000875af1158015612b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b52919061317f565b612b5b57600080fd5b8189886001600160a01b03167f3cc32b807e0e6ade29defe751a1339a43c1e45d7d18eca93a916ca060ebe89ea60405160405180910390a4612b9b611ddd565b50979650505050505050565b60006064612bb6856008613127565b612bc09190613146565b9050612bcb81611d39565b60006064612bda856005613127565b612be49190613146565b60065460095460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350169063a9059cbb906044016020604051808303816000875af1158015612c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c5f919061317f565b5060006103e8612c70876019613127565b612c7a9190613146565b90506000612c8760025490565b9050600085612c968385613127565b612ca09190613146565b905060006064612cb183600a613127565b612cbb9190613146565b90506000612cc98284613168565b600a54909150612ce2906001600160a01b0316836128bf565b600754612cf8906001600160a01b0316826128bf565b600760009054906101000a90046001600160a01b03166001600160a01b031663677a78726040518163ffffffff1660e01b8152600401600060405180830381600087803b158015612d4857600080fd5b505af1158015612d5c573d6000803e3d6000fd5b505050507fc328594cab3a117e8ddf861647e12c326eb6fa98ab8f707982ad7a13e8264c7c87604051612d9191815260200190565b60405180910390a16040518681527f044b0fc80e673b7ce4245d6302c96dc22199a569a1b815fe4295e3b6ea54f95b9060200160405180910390a1600a546001600160a01b031660008181526020819052604080822054905190929160008051602061327983398151915291a3600a546040518381526001600160a01b03909116906000906000805160206132998339815191529060200160405180910390a36007546001600160a01b031660008181526020819052604080822054905190929160008051602061327983398151915291a36007546040518281526001600160a01b03909116906000906000805160206132998339815191529060200160405180910390a350505050505050505050565b600060208083528351808285015260005b81811015612ecf57858101830151858201604001528201612eb3565b81811115612ee1576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610f1357600080fd5b60008060408385031215612f2157600080fd5b612f2a83612ef7565b946020939093013593505050565b600060208284031215612f4a57600080fd5b5035919050565b60008060408385031215612f6457600080fd5b50508035926020909101359150565b600080600060608486031215612f8857600080fd5b612f9184612ef7565b9250612f9f60208501612ef7565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215612fd857600080fd5b823567ffffffffffffffff80821115612ff057600080fd5b818501915085601f83011261300457600080fd5b81358181111561301657613016612faf565b8060051b604051601f19603f8301168101818110858211171561303b5761303b612faf565b60405291825284820192508381018501918883111561305957600080fd5b938501935b8285101561225b5761306f85612ef7565b8452938501939285019261305e565b60006020828403121561309057600080fd5b610d8182612ef7565b6000806000606084860312156130ae57600080fd5b505081359360208301359350604090920135919050565b600080604083850312156130d857600080fd5b6130e183612ef7565b91506130ef60208401612ef7565b90509250929050565b60006020828403121561310a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561314157613141613111565b500290565b60008261316357634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561317a5761317a613111565b500390565b60006020828403121561319157600080fd5b81518015158114610d8157600080fd5b600181811c908216806131b557607f821691505b60208210811415610f1157634e487b7160e01b600052602260045260246000fd5b600082198211156131e9576131e9613111565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561324d5761324d613111565b5060010190565b6001600160a01b03938416815291909216602082015260408101919091526060019056fe709a5b29491696d085fa151016fb243ea3cf977d385d7220302ec663ceb15d28ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ffdabee5af2b80d03a66231a40d5878929f00aae6bf3a32c141ec34d5b77e59664736f6c634300080c0033",
  "deployedSourceMap": "952:24359:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5468:53;5484:9;5495:1;5498:10;5510;5468:15;:53::i;:::-;;952:24359;;;;;2156:98:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;-1:-1:-1;4433:197:1;;;;;:::i;:::-;;:::i;:::-;;;1218:14:16;;1211:22;1193:41;;1181:2;1166:18;4433:197:1;1053:187:16;18059:289:8;;;;;;;;;;-1:-1:-1;18059:289:8;;;;;:::i;:::-;;:::i;:::-;;;1576:25:16;;;1564:2;1549:18;18059:289:8;1430:177:16;3244:106:1;;;;;;;;;;-1:-1:-1;3331:12:1;;3244:106;;14798:203:8;;;;;;;;;;-1:-1:-1;14798:203:8;;;;;:::i;:::-;;:::i;20483:535::-;;;;;;;;;;-1:-1:-1;20483:535:8;;;;;:::i;:::-;;:::i;10993:216::-;;;;;;:::i;:::-;;:::i;5192:286:1:-;;;;;;;;;;-1:-1:-1;5192:286:1;;;;;:::i;:::-;;:::i;4866:326:8:-;;;;;;;;;;-1:-1:-1;4866:326:8;;;;;:::i;:::-;;:::i;4461:305::-;;;;;;;;;;-1:-1:-1;4461:305:8;;;;;:::i;:::-;;:::i;19786:297::-;;;;;;;;;;-1:-1:-1;19786:297:8;;;;;:::i;:::-;;:::i;3093:91:1:-;;;;;;;;;;-1:-1:-1;3093:91:1;;3175:2;3789:36:16;;3777:2;3762:18;3093:91:1;3647:184:16;18564:389:8;;;;;;;;;;-1:-1:-1;18564:389:8;;;;;:::i;:::-;;:::i;5873:236:1:-;;;;;;;;;;-1:-1:-1;5873:236:1;;;;;:::i;:::-;;:::i;21024:481:8:-;;;;;;;;;;-1:-1:-1;21024:481:8;;;;;:::i;:::-;;:::i;:::-;;;;4010:25:16;;;4066:2;4051:18;;4044:34;;;;3983:18;21024:481:8;3836:248:16;1233:25:8;;;;;;;;;;-1:-1:-1;1233:25:8;;;;-1:-1:-1;;;;;1233:25:8;;;;;;-1:-1:-1;;;;;4253:32:16;;;4235:51;;4223:2;4208:18;1233:25:8;4089:203:16;21511:93:8;;;;;;;;;;-1:-1:-1;21511:93:8;;;;;:::i;:::-;-1:-1:-1;;;;;21586:11:8;21560:7;21586:11;;;:4;:11;;;;;;;21511:93;1265:23;;;;;;;;;;;;;;;;19173:403;;;;;;;;;;-1:-1:-1;19173:403:8;;;;;:::i;:::-;;:::i;1178:23::-;;;;;;;;;;-1:-1:-1;1178:23:8;;;;-1:-1:-1;;;;;1178:23:8;;;1294:27;;;;;;;;;;;;;;;;3408:125:1;;;;;;;;;;-1:-1:-1;3408:125:1;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:1;3482:7;3508:18;;;;;;;;;;;;3408:125;1668:101:0;;;;;;;;;;;;;:::i;:::-;;1455:42:8;;;;;;;;;;-1:-1:-1;1455:42:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;3678:274;;;;;;;;;;-1:-1:-1;3678:274:8;;;;;:::i;:::-;;:::i;24345:964::-;;;;;;;;;;-1:-1:-1;24345:964:8;;;;;:::i;:::-;;:::i;5915:393::-;;;;;;;;;;-1:-1:-1;5915:393:8;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;-1:-1:-1;;;;;1108:6:0;1036:85;;1143:29:8;;;;;;;;;;-1:-1:-1;1143:29:8;;;;-1:-1:-1;;;;;1143:29:8;;;2367:102:1;;;;;;;;;;;;;:::i;1408:41:8:-;;;;;;;;;;-1:-1:-1;1408:41:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;22077:1979;;;;;;:::i;:::-;;:::i;20168:92::-;;;;;;;;;;-1:-1:-1;20247:5:8;;-1:-1:-1;;;;;20247:5:8;20168:92;;20369:108;;;;;;;;;;;;;:::i;3307:97::-;;;;;;;;;;-1:-1:-1;3307:97:8;;;;;:::i;:::-;;:::i;6596:429:1:-;;;;;;;;;;-1:-1:-1;6596:429:1;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;;;;;-1:-1:-1;3729:189:1;;;;;:::i;:::-;;:::i;1549:27:8:-;;;;;;;;;;-1:-1:-1;1549:27:8;;;;;;;;8947:196;;;;;;:::i;:::-;;:::i;20266:97::-;;;;;;;;;;-1:-1:-1;20335:21:8;20266:97;;1503:39;;;;;;;;;;-1:-1:-1;1503:39:8;;;;;:::i;:::-;;;;;;;;;;;;;;3976:149:1;;;;;;;;;;-1:-1:-1;3976:149:1;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:1;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;4047:316:8;;;;;;;;;;-1:-1:-1;4047:316:8;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;1377:24:8:-;;;;;;;;;;;;;;;;13194:197;;;;;;;;;;-1:-1:-1;13194:197:8;;;;;:::i;:::-;;:::i;1207:20::-;;;;;;;;;;-1:-1:-1;1207:20:8;;;;-1:-1:-1;;;;;1207:20:8;;;1075:23;;;;;;;;;;-1:-1:-1;1075:23:8;;;;-1:-1:-1;;;;;1075:23:8;;;1327:44;;;;;;;;;;;;;;;;6696:388;;;;;;;;;;-1:-1:-1;6696:388:8;;;;;:::i;:::-;;:::i;7478:1231::-;7634:7;7673:1;7661:9;:13;:32;;;;;7692:1;7678:11;:15;7661:32;7653:59;;;;-1:-1:-1;;;7653:59:8;;5540:2:16;7653:59:8;;;5522:21:16;5579:2;5559:18;;;5552:30;-1:-1:-1;;;5598:18:16;;;5591:44;5652:18;;7653:59:8;;;;;;;;;7802:5;;:30;;-1:-1:-1;;;7802:30:8;;7826:4;7802:30;;;4235:51:16;7722:16:8;;;;;;-1:-1:-1;;;;;7802:5:8;;:15;;4208:18:16;;7802:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7900:17:8;;7842:19;7900:17;;;:9;:17;;;;;;7778:54;;-1:-1:-1;7864:21:8;;7900:17;;:42;;;;-1:-1:-1;;;;;;7921:21:8;;;;;;:9;:21;;;;;;;;7900:42;7896:208;;;7969:9;7958:20;;7896:208;;;8041:3;8025:12;8029:8;8025:1;:12;:::i;:::-;8024:20;;;;:::i;:::-;8009:35;-1:-1:-1;8069:24:8;8009:35;8069:9;:24;:::i;:::-;8058:35;;7896:208;8113:21;8137:108;8164:8;8186:22;8164:8;8186:11;:22;:::i;:::-;8222:13;8137;:108::i;:::-;8113:132;;8281:11;8264:13;:28;;8256:68;;;;-1:-1:-1;;;8256:68:8;;6729:2:16;8256:68:8;;;6711:21:16;6768:2;6748:18;;;6741:30;6807:29;6787:18;;;6780:57;6854:18;;8256:68:8;6527:351:16;8256:68:8;8408:5;;:41;;-1:-1:-1;;;8408:41:8;;-1:-1:-1;;;;;7075:32:16;;;8408:41:8;;;7057:51:16;7124:18;;;7117:34;;;8408:5:8;;;;:14;;7030:18:16;;8408:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8400:66;;;;-1:-1:-1;;;8400:66:8;;7646:2:16;8400:66:8;;;7628:21:16;7685:2;7665:18;;;7658:30;-1:-1:-1;;;7704:18:16;;;7697:42;7756:18;;8400:66:8;7444:336:16;8400:66:8;8480:16;;8476:55;;8498:33;8518:12;8498:19;:33::i;:::-;8582:13;8571:9;8563:6;-1:-1:-1;;;;;8547:49:8;;;;;;;;;;;8611:31;20335:21;8611:31;;1576:25:16;;;1564:2;1549:18;8611:31:8;;;;;;;8653:18;:16;:18::i;:::-;8689:13;7478:1231;-1:-1:-1;;;;;;;;;7478:1231:8:o;2156:98:1:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:6;4570:32:1;719:10:6;4586:7:1;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;18059:289:8:-;18155:7;18197:1;18186:8;:12;18178:21;;;;;;18233:5;;:30;;-1:-1:-1;;;18233:30:8;;18257:4;18233:30;;;4235:51:16;18209:21:8;;-1:-1:-1;;;;;18233:5:8;;:15;;4208:18:16;;18233:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18209:54;;18280:61;18294:8;18304:21;18327:13;18280;:61::i;:::-;18273:68;18059:289;-1:-1:-1;;;18059:289:8:o;14798:203::-;14900:7;14930:64;14947:10;14959;14971;14983;14930:16;:64::i;20483:535::-;20583:7;20625:1;20614:8;:12;20606:21;;;;;;20637:20;20671:23;20697:13;3331:12:1;;;3244:106;20697:13:8;20797:5;;:30;;-1:-1:-1;;;20797:30:8;;20821:4;20797:30;;;4235:51:16;20671:39:8;;-1:-1:-1;20742:21:8;;20720:19;;-1:-1:-1;;;;;20797:5:8;;:15;;4208:18:16;;20797:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20773:54;-1:-1:-1;20882:11:8;20854:24;20773:54;20854:8;:24;:::i;:::-;20853:40;;;;:::i;:::-;20852:46;;20897:1;20852:46;:::i;:::-;20837:61;-1:-1:-1;20908:24:8;20966:11;20936:26;20947:15;20936:8;:26;:::i;:::-;20935:42;;;;:::i;:::-;20908:69;20483:535;-1:-1:-1;;;;;;;20483:535:8:o;10993:216::-;11094:7;11136:66;11153:13;11168:9;11179:10;11191;11136:16;:66::i;5192:286:1:-;5319:4;719:10:6;5375:38:1;5391:4;719:10:6;5406:6:1;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:1;;5192:286;-1:-1:-1;;;;5192:286:1:o;4866:326:8:-;1108:6:0;;4978:12:8;;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5011:9:8::1;5006:156;5030:5;:12;5026:1;:16;5006:156;;;5067:36;5094:5;5100:1;5094:8;;;;;;;;:::i;:::-;;;;;;;5067:26;:36::i;:::-;5063:89;;;5133:4;5123:14;;5063:89;5044:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5006:156;;;;1318:1:0;4866:326:8::0;;;:::o;4461:305::-;1108:6:0;;4561:12:8;;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;4593:15:8;::::1;;::::0;;;:9:::1;:15;::::0;;;;;::::1;;4589:147;;;-1:-1:-1::0;;;;;4624:15:8;::::1;4642:5;4624:15:::0;;;:9:::1;:15;::::0;;;;;;;;:23;;-1:-1:-1;;4624:23:8::1;::::0;;4666:31;;4235:51:16;;;4666:31:8::1;::::0;4208:18:16;4666:31:8::1;;;;;;;;-1:-1:-1::0;4721:4:8::1;4461:305:::0;;;:::o;19786:297::-;19885:7;19929:1;19916:10;:14;19908:23;;;;;;19965:5;;:30;;-1:-1:-1;;;19965:30:8;;19989:4;19965:30;;;4235:51:16;19941:21:8;;-1:-1:-1;;;;;19965:5:8;;:15;;4208:18:16;;19965:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19941:54;;20012:64;20027:10;20039:13;20054:21;20012:14;:64::i;18564:389::-;18666:7;18713:1;18697:13;:17;18689:26;;;;;;18749:5;;:30;;-1:-1:-1;;;18749:30:8;;18773:4;18749:30;;;4235:51:16;18725:21:8;;-1:-1:-1;;;;;18749:5:8;;:15;;4208:18:16;;18749:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18725:54;;18789:16;18808:113;18836:13;18863:21;18898:13;18808:14;:113::i;:::-;18789:132;18564:389;-1:-1:-1;;;;18564:389:8:o;5873:236:1:-;719:10:6;5961:4:1;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:1;;;;;;;;;;5961:4;;719:10:6;6015:66:1;;719:10:6;;6040:27:1;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;21024:481:8:-;21126:7;21135;21158:23;21184:13;3331:12:1;;;3244:106;21184:13:8;21158:39;;21233:1;21215:15;:19;21207:28;;;;;;21269:5;;:30;;-1:-1:-1;;;21269:30:8;;21293:4;21269:30;;;4235:51:16;21245:21:8;;-1:-1:-1;;;;;21269:5:8;;:15;;4208:18:16;;21269:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21245:54;-1:-1:-1;21309:18:8;21365:15;21331:30;21340:21;21331:6;:30;:::i;:::-;21330:50;;;;:::i;:::-;21309:71;-1:-1:-1;21390:20:8;21440:15;21414:22;21423:13;21414:6;:22;:::i;:::-;21413:42;;;;:::i;:::-;21473:10;;21390:65;;-1:-1:-1;21024:481:8;;-1:-1:-1;;;;;21024:481:8:o;19173:403::-;19272:7;19317:1;19303:11;:15;19295:42;;;;-1:-1:-1;;;19295:42:8;;9138:2:16;19295:42:8;;;9120:21:16;9177:2;9157:18;;;9150:30;-1:-1:-1;;;9196:18:16;;;9189:44;9250:18;;19295:42:8;8936:338:16;19295:42:8;19371:5;;:30;;-1:-1:-1;;;19371:30:8;;19395:4;19371:30;;;4235:51:16;19347:21:8;;-1:-1:-1;;;;;19371:5:8;;:15;;4208:18:16;;19371:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19347:54;;19411:18;19432:110;19459:11;19484:13;19511:21;19432:13;:110::i;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3678:274:8:-;1108:6:0;;3773:12:8;;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;3806:15:8;::::1;;::::0;;;:9:::1;:15;::::0;;;;;::::1;;3801:145;;-1:-1:-1::0;;;;;3837:15:8;::::1;;::::0;;;:9:::1;:15;::::0;;;;;;;;:22;;-1:-1:-1;;3837:22:8::1;3855:4;3837:22;::::0;;3878:29;;4235:51:16;;;3878:29:8::1;::::0;4208:18:16;3878:29:8::1;4089:203:16::0;24345:964:8;24469:7;24478;24514:1;24505:6;:10;:25;;;;;24529:1;24519:7;:11;24505:25;:43;;;;;24547:1;24534:10;:14;24505:43;24497:52;;;;;;24559:23;24585:13;3331:12:1;;;3244:106;24585:13:8;24559:39;;24634:1;24616:15;:19;24608:28;;;;;;24670:5;;:30;;-1:-1:-1;;;24670:30:8;;24694:4;24670:30;;;4235:51:16;24646:21:8;;-1:-1:-1;;;;;24670:5:8;;:15;;4208:18:16;;24670:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24646:54;-1:-1:-1;24710:18:8;24766:15;24732:30;24741:21;24732:6;:30;:::i;:::-;24731:50;;;;:::i;:::-;24710:71;-1:-1:-1;24792:20:8;24844:15;24816:24;24826:13;24816:6;:24;:::i;:::-;24815:44;;;;:::i;:::-;24792:67;;24891:7;24877:10;:21;;:51;;;;;24918:10;24902:12;:26;;24877:51;24869:60;;;;;;24939:25;24945:10;24957:6;24939:5;:25::i;:::-;24974:40;;24982:10;;24974:40;;;;;25003:10;;24974:40;;;;25003:10;24982;24974:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25032:5:8;;:40;;-1:-1:-1;;;25032:40:8;;25047:10;25032:40;;;7057:51:16;7124:18;;;7117:34;;;-1:-1:-1;;;;;25032:5:8;;;;:14;;7030:18:16;;25032:40:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25024:49;;;;;;25088:55;;25130:12;;25118:10;;25106;;25088:55;;;;;25192:10;3482:7:1;3508:18;;;;;;;;;;;25158:46:8;;25170:10;;-1:-1:-1;;;;;;;;;;;25158:46:8;;;;25219:40;;1576:25:16;;;25248:1:8;;25228:10;;-1:-1:-1;;;;;;;;;;;25219:40:8;1564:2:16;1549:18;25219:40:8;;;;;;;25277:10;;;;-1:-1:-1;24345:964:8;-1:-1:-1;;;;;;24345:964:8:o;5915:393::-;6058:7;6101:1;6085:13;:17;:39;;;;;6123:1;6106:14;:18;6085:39;6077:65;;;;-1:-1:-1;;;6077:65:8;;9481:2:16;6077:65:8;;;9463:21:16;9520:2;9500:18;;;9493:30;-1:-1:-1;;;9539:18:16;;;9532:43;9592:18;;6077:65:8;9279:337:16;6077:65:8;6152:17;6172:29;6187:14;6172:12;:29;:::i;:::-;6152:49;-1:-1:-1;6211:19:8;6233:28;6249:12;6233:13;:28;:::i;:::-;6211:50;-1:-1:-1;6278:23:8;6211:50;6278:9;:23;:::i;:::-;6271:30;5915:393;-1:-1:-1;;;;;;5915:393:8:o;2367:102:1:-;2423:13;2455:7;2448:14;;;;;:::i;22077:1979:8:-;22190:7;22247:1;22234:10;:14;:31;;;;;22264:1;22252:9;:13;22234:31;22213:113;;;;-1:-1:-1;;;22213:113:8;;9823:2:16;22213:113:8;;;9805:21:16;9862:2;9842:18;;;9835:30;9901:34;9881:18;;;9874:62;-1:-1:-1;;;9952:18:16;;;9945:33;9995:19;;22213:113:8;9621:399:16;22213:113:8;22336:23;22362:13;3331:12:1;;;3244:106;22362:13:8;22436:10;22386:20;22425:22;;;:10;:22;;;;;;22336:39;;-1:-1:-1;22386:20:8;22425:22;;22421:119;;22483:10;22472:22;;;;:10;:22;;;;;:29;;-1:-1:-1;;22472:29:8;22497:4;22472:29;;;;;;22515:9;:14;;22497:4;;22515:9;;:14;;22497:4;;22515:14;:::i;:::-;;;;-1:-1:-1;;22421:119:8;22554:19;;22550:1500;;22613:1;22597:13;:17;22589:26;;;;;;22629:19;22651:33;22675:9;22651:21;:33;:::i;:::-;22722:5;;:30;;-1:-1:-1;;;22722:30:8;;22746:4;22722:30;;;4235:51:16;22629:55:8;;-1:-1:-1;22698:21:8;;-1:-1:-1;;;;;22722:5:8;;;;:15;;4208:18:16;;22722:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22698:54;-1:-1:-1;22812:11:8;22783:25;22698:54;22783:9;:25;:::i;:::-;22782:41;;;;:::i;:::-;22781:47;;22827:1;22781:47;:::i;:::-;22766:62;-1:-1:-1;22842:24:8;22917:11;22870:27;22882:15;22870:9;:27;:::i;:::-;22869:59;;;;:::i;:::-;22842:86;;22982:12;22968:10;:26;;:63;;;;;23018:13;22998:16;:33;;22968:63;22943:102;;;;;;23059:35;23065:10;23077:16;23059:5;:35::i;:::-;23133:5;;:59;;-1:-1:-1;;;23133:59:8;;-1:-1:-1;;;;;23133:5:8;;;;:18;;:59;;23152:10;;23172:4;;23179:12;;23133:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23108:98;;;;;;23226:51;;23264:12;;23253:9;;23241:10;;23226:51;;;;;23330:10;3482:7:1;3508:18;;;;;;;;;;;23296:46:8;;23308:10;;-1:-1:-1;;;;;;;;;;;23296:46:8;;;;23361:50;;1576:25:16;;;23382:10:8;;23378:1;;-1:-1:-1;;;;;;;;;;;23361:50:8;1564:2:16;1549:18;23361:50:8;;;;;;;23432:16;-1:-1:-1;23425:23:8;;-1:-1:-1;;;;23425:23:8;22550:1500;23500:7;23487:9;:20;;23479:46;;;;-1:-1:-1;;;23479:46:8;;9481:2:16;23479:46:8;;;9463:21:16;9520:2;9500:18;;;9493:30;-1:-1:-1;;;9539:18:16;;;9532:43;9592:18;;23479:46:8;9279:337:16;23479:46:8;-1:-1:-1;23554:10:8;23606:21;23641:42;23653:10;23606:21;23641:11;:42::i;:::-;23722:5;;:59;;-1:-1:-1;;;23722:59:8;;-1:-1:-1;;;;;23722:5:8;;;;:18;;:59;;23741:10;;23761:4;;23768:12;;23722:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23697:98;;;;;;23815:51;;23853:12;;23842:9;;23830:10;;23815:51;;;;;23919:10;3482:7:1;3508:18;;;;;;;;;;;23885:46:8;;23897:10;;-1:-1:-1;;;;;;;;;;;23885:46:8;;;;23950:51;;1576:25:16;;;23971:10:8;;23967:1;;-1:-1:-1;;;;;;;;;;;23950:51:8;1564:2:16;1549:18;23950:51:8;;;;;;;24022:17;-1:-1:-1;24015:24:8;;-1:-1:-1;;24015:24:8;20369:108;20440:5;;:30;;-1:-1:-1;;;20440:30:8;;20464:4;20440:30;;;4235:51:16;20414:7:8;;-1:-1:-1;;;;;20440:5:8;;:15;;4208:18:16;;20440:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20433:37;;20369:108;:::o;3307:97::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3366:10:8::1;:31:::0;;-1:-1:-1;;;;;;3366:31:8::1;-1:-1:-1::0;;;;;3366:31:8;;;::::1;::::0;;;::::1;::::0;;3307:97::o;6596:429:1:-;719:10:6;6689:4:1;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:1;;;;;;;;;;6689:4;;719:10:6;6815:35:1;;;;6807:85;;;;-1:-1:-1;;;6807:85:1;;10607:2:16;6807:85:1;;;10589:21:16;10646:2;10626:18;;;10619:30;10685:34;10665:18;;;10658:62;-1:-1:-1;;;10736:18:16;;;10729:35;10781:19;;6807:85:1;10405:401:16;6807:85:1;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;3729:189::-;3808:4;719:10:6;3862:28:1;719:10:6;3879:2:1;3883:6;3862:9;:28::i;8947:196:8:-;9044:7;9074:62;9090:9;9101:10;9113;9125;9074:15;:62::i;4047:316::-;1108:6:0;;4154:12:8;;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4187:9:8::1;4182:151;4206:5;:12;4202:1;:16;4182:151;;;4243:31;4265:5;4271:1;4265:8;;;;;;;;:::i;:::-;;;;;;;4243:21;:31::i;:::-;4239:84;;;4304:4;4294:14;;4239:84;4220:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4182:151;;1918:198:0::0;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;11013:2:16;1998:73:0::1;::::0;::::1;10995:21:16::0;11052:2;11032:18;;;11025:30;11091:34;11071:18;;;11064:62;-1:-1:-1;;;11142:18:16;;;11135:36;11188:19;;1998:73:0::1;10811:402:16::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;13194:197:8:-;13293:7;13323:61;13339:11;13352:7;13361:10;13373;13323:15;:61::i;6696:388::-;6841:7;6884:1;6868:13;:17;:39;;;;;6906:1;6889:14;:18;6868:39;6860:48;;;;;;6918:17;6938:29;6954:13;6938;:29;:::i;:::-;6918:49;-1:-1:-1;6977:19:8;7000:30;7017:13;7000:14;:30;:::i;:::-;6977:54;-1:-1:-1;7049:23:8;6977:54;7049:9;:23;:::i;:::-;7048:29;;7076:1;7048:29;:::i;15595:278::-;15730:1;15714:13;:17;15706:26;;;;;;15764:8;;15756:48;;15743:7;;-1:-1:-1;;;;;15764:8:8;;15786:13;;15743:7;15756:48;15743:7;15756:48;15786:13;15764:8;15756:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15742:62;;;15822:2;15814:11;;;;;;15840:26;;1576:25:16;;;15840:26:8;;1564:2:16;1549:18;15840:26:8;;;;;;;15656:217;15595:278;:::o;15007:434::-;15053:13;15069:30;15094:4;15069:24;:30::i;:::-;15187:17;;15172:12;;15053:46;;-1:-1:-1;20335:21:8;;15154:30;;:15;:30;:::i;:::-;:50;15150:159;;;15225:29;15235:11;:7;15245:1;15235:11;:::i;:::-;15225:29;;;4010:25:16;;;4066:2;4051:18;;4044:34;;;3983:18;15225:29:8;;;;;;;15283:15;15268:12;:30;15150:159;15324:26;;1576:25:16;;;15324:26:8;;1564:2:16;1549:18;15324:26:8;;;;;;;15365:14;;1576:25:16;;;15365:14:8;;1564:2:16;1549:18;15365:14:8;;;;;;;15402:1;15390:8;;:13;;;;;;;:::i;:::-;;;;-1:-1:-1;;15418:10:8;15413:16;;;;:4;:16;;;;;:21;;15433:1;;15413:16;:21;;15433:1;;15413:21;:::i;:::-;;;;-1:-1:-1;;;;15007:434:8:o;10123:370:1:-;-1:-1:-1;;;;;10254:19:1;;10246:68;;;;-1:-1:-1;;;10246:68:1;;11630:2:16;10246:68:1;;;11612:21:16;11669:2;11649:18;;;11642:30;11708:34;11688:18;;;11681:62;-1:-1:-1;;;11759:18:16;;;11752:34;11803:19;;10246:68:1;11428:400:16;10246:68:1;-1:-1:-1;;;;;10332:21:1;;10324:68;;;;-1:-1:-1;;;10324:68:1;;12035:2:16;10324:68:1;;;12017:21:16;12074:2;12054:18;;;12047:30;12113:34;12093:18;;;12086:62;-1:-1:-1;;;12164:18:16;;;12157:32;12206:19;;10324:68:1;11833:398:16;10324:68:1;-1:-1:-1;;;;;10403:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;1576:25:16;;;10454:32:1;;1549:18:16;10454:32:1;;;;;;;;10123:370;;;:::o;13397:1149:8:-;13552:7;13592:1;13579:10;:14;13571:23;;;;;;13628:5;;:30;;-1:-1:-1;;;13628:30:8;;13652:4;13628:30;;;4235:51:16;13604:21:8;;-1:-1:-1;;;;;13628:5:8;;:15;;4208:18:16;;13628:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13604:54;-1:-1:-1;13690:21:8;13668:19;13743:100;13771:10;13604:54;13690:21;13743:14;:100::i;:::-;13721:122;;13853:25;13952:11;13938:10;:25;;13930:57;;;;-1:-1:-1;;;13930:57:8;;12438:2:16;13930:57:8;;;12420:21:16;12477:2;12457:18;;;12450:30;-1:-1:-1;;;12496:18:16;;;12489:49;12555:18;;13930:57:8;12236:343:16;13930:57:8;-1:-1:-1;;;;;14001:16:8;;;;;;:9;:16;;;;;;;;:40;;;;-1:-1:-1;;;;;;14021:20:8;;;;;;:9;:20;;;;;;;;14001:40;13997:249;;;-1:-1:-1;14077:11:8;13997:249;;;14161:2;14140:17;14146:11;14140:3;:17;:::i;:::-;14139:24;;;;:::i;:::-;14119:44;;14177:58;14192:10;14204:17;14223:11;14177:14;:58::i;:::-;14293:39;;-1:-1:-1;;;;;14293:27:8;;;:39;;;;;14321:10;;14293:39;;;;14321:10;14293:27;:39;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14350:5:8;;:59;;-1:-1:-1;;;14350:59:8;;-1:-1:-1;;;;;14350:5:8;;;;:18;;:59;;14369:5;;14384:4;;14391:17;;14350:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14342:68;;;;;;14465:10;14446:17;14439:5;-1:-1:-1;;;;;14425:51:8;;;;;;;;;;;14486:18;:16;:18::i;:::-;14522:17;13397:1149;-1:-1:-1;;;;;;;;13397:1149:8:o;9521:1254::-;9676:7;9719:1;9703:13;:17;:32;;;;;9734:1;9724:7;:11;9703:32;9695:41;;;;;;9832:5;;:30;;-1:-1:-1;;;9832:30:8;;9856:4;9832:30;;;4235:51:16;9746:22:8;;;;;;-1:-1:-1;;;;;9832:5:8;;:15;;4208:18:16;;9832:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9808:54;-1:-1:-1;9894:21:8;9872:19;9944:113;9972:13;9999:21;10013:7;9894:21;9999;:::i;:::-;10034:13;9944:14;:113::i;:::-;-1:-1:-1;;;;;10071:16:8;;;;;;:9;:16;;;;;;9925:132;;-1:-1:-1;10071:16:8;;:40;;;;-1:-1:-1;;;;;;10091:20:8;;;;;;:9;:20;;;;;;;;10071:40;10067:220;;;10144:8;10127:25;;10067:220;;;10219:2;10201:14;10207:8;10201:3;:14;:::i;:::-;10200:21;;;;:::i;:::-;10183:38;-1:-1:-1;10273:3:8;10251:18;10183:38;10251:1;:18;:::i;:::-;10250:26;;;;:::i;:::-;10235:41;;10067:220;10343:18;10364:24;10374:14;10364:7;:24;:::i;:::-;10343:45;-1:-1:-1;10402:14:8;;10398:80;;10432:35;;-1:-1:-1;;;;;10432:23:8;;;:35;;;;;10456:10;;10432:35;;;;10456:10;10432:23;:35;;;;;;;;;;;;;;;;;;;;;10398:80;10495:5;;:40;;-1:-1:-1;;;10495:40:8;;-1:-1:-1;;;;;7075:32:16;;;10495:40:8;;;7057:51:16;7124:18;;;7117:34;;;10495:5:8;;;;:14;;7030:18:16;;10495:40:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10487:49;;;;;;10550:16;;10546:55;;10568:33;10588:12;10568:19;:33::i;:::-;10655:13;10639:14;10632:5;-1:-1:-1;;;;;10616:53:8;;;;;;;;;;;10684:25;;1576::16;;;10684::8;;1564:2:16;1549:18;10684:25:8;;;;;;;10719:18;:16;:18::i;:::-;-1:-1:-1;10754:14:8;;9521:1254;-1:-1:-1;;;;;;;;;9521:1254:8:o;10770:441:1:-;-1:-1:-1;;;;;4091:18:1;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:1;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:1;;12786:2:16;11019:68:1;;;12768:21:16;12825:2;12805:18;;;12798:30;12864:31;12844:18;;;12837:59;12913:18;;11019:68:1;12584:353:16;11019:68:1;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:1;;7606:68;;;;-1:-1:-1;;;7606:68:1;;13144:2:16;7606:68:1;;;13126:21:16;13183:2;13163:18;;;13156:30;13222:34;13202:18;;;13195:62;-1:-1:-1;;;13273:18:16;;;13266:35;13318:19;;7606:68:1;12942:401:16;7606:68:1;-1:-1:-1;;;;;7692:16:1;;7684:64;;;;-1:-1:-1;;;7684:64:1;;13550:2:16;7684:64:1;;;13532:21:16;13589:2;13569:18;;;13562:30;13628:34;13608:18;;;13601:62;-1:-1:-1;;;13679:18:16;;;13672:33;13722:19;;7684:64:1;13348:399:16;7684:64:1;-1:-1:-1;;;;;7830:15:1;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:1;;13954:2:16;7855:72:1;;;13936:21:16;13993:2;13973:18;;;13966:30;14032:34;14012:18;;;14005:62;-1:-1:-1;;;14083:18:16;;;14076:36;14129:19;;7855:72:1;13752:402:16;7855:72:1;-1:-1:-1;;;;;7961:15:1;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:1;8067:4;-1:-1:-1;;;;;8058:26:1;-1:-1:-1;;;;;;;;;;;8077:6:1;8058:26;;;;1576:25:16;;1564:2;1549:18;;1430:177;8058:26:1;;;;;;;;8095:37;9124:576;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;9124:576:1:-;-1:-1:-1;;;;;9207:21:1;;9199:67;;;;-1:-1:-1;;;9199:67:1;;14361:2:16;9199:67:1;;;14343:21:16;14400:2;14380:18;;;14373:30;14439:34;14419:18;;;14412:62;-1:-1:-1;;;14490:18:16;;;14483:31;14531:19;;9199:67:1;14159:397:16;9199:67:1;-1:-1:-1;;;;;9362:18:1;;9337:22;9362:18;;;;;;;;;;;9398:24;;;;9390:71;;;;-1:-1:-1;;;9390:71:1;;14763:2:16;9390:71:1;;;14745:21:16;14802:2;14782:18;;;14775:30;14841:34;14821:18;;;14814:62;-1:-1:-1;;;14892:18:16;;;14885:32;14934:19;;9390:71:1;14561:398:16;9390:71:1;-1:-1:-1;;;;;9495:18:1;;:9;:18;;;;;;;;;;9516:23;;;9495:44;;9559:12;:22;;9533:6;;9495:9;9559:22;;9533:6;;9559:22;:::i;:::-;;;;-1:-1:-1;;9597:37:1;;1576:25:16;;;9623:1:1;;-1:-1:-1;;;;;9597:37:1;;;-1:-1:-1;;;;;;;;;;;9597:37:1;1564:2:16;1549:18;9597:37:1;1430:177:16;8415:389:1;-1:-1:-1;;;;;8498:21:1;;8490:65;;;;-1:-1:-1;;;8490:65:1;;15166:2:16;8490:65:1;;;15148:21:16;15205:2;15185:18;;;15178:30;15244:33;15224:18;;;15217:61;15295:18;;8490:65:1;14964:355:16;8490:65:1;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:1;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:1;;1576:25:16;;;-1:-1:-1;;;;;8701:37:1;;;8718:1;;-1:-1:-1;;;;;;;;;;;8701:37:1;1564:2:16;1549:18;8701:37:1;;;;;;;8415:389;;:::o;11904:1041:8:-;12056:7;12097:1;12083:11;:15;:30;;;;;12112:1;12102:7;:11;12083:30;12075:39;;;;;;12148:5;;:30;;-1:-1:-1;;;12148:30:8;;12172:4;12148:30;;;4235:51:16;12124:21:8;;-1:-1:-1;;;;;12148:5:8;;:15;;4208:18:16;;12148:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12124:54;-1:-1:-1;12210:21:8;12188:19;;12296:100;12323:11;12124:54;12210:21;12296:13;:100::i;:::-;12275:121;;12428:7;12414:10;:21;;12406:30;;;;;;-1:-1:-1;;;;;12450:16:8;;;;;;:9;:16;;;;;;;;:40;;;;-1:-1:-1;;;;;;12470:20:8;;;;;;:9;:20;;;;;;;;12450:40;12446:239;;;12525:10;12506:29;;12446:239;;;12605:3;12586:15;12591:10;12586:2;:15;:::i;:::-;12585:23;;;;:::i;:::-;12566:42;;12622:52;12637:10;12649:11;12662;12622:14;:52::i;:::-;12694:45;;-1:-1:-1;;;;;12694:27:8;;;:45;;;;;12722:16;;12694:45;;;;12722:16;12694:27;:45;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12757:5:8;;:53;;-1:-1:-1;;;12757:53:8;;-1:-1:-1;;;;;12757:5:8;;;;:18;;:53;;12776:5;;12791:4;;12798:11;;12757:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12749:62;;;;;;12860:16;12847:11;12840:5;-1:-1:-1;;;;;12826:51:8;;;;;;;;;;;12887:18;:16;:18::i;:::-;-1:-1:-1;12922:16:8;11904:1041;-1:-1:-1;;;;;;;11904:1041:8:o;16163:1647::-;16384:20;16427:3;16408:15;16412:11;16408:1;:15;:::i;:::-;16407:23;;;;:::i;:::-;16384:46;;16440:33;16460:12;16440:19;:33::i;:::-;16546:17;16587:3;16567:16;16571:12;16567:1;:16;:::i;:::-;16566:24;;;;:::i;:::-;16600:5;;16615;;16600:32;;-1:-1:-1;;;16600:32:8;;-1:-1:-1;;;;;16615:5:8;;;16600:32;;;7057:51:16;7124:18;;;7117:34;;;16546:44:8;;-1:-1:-1;16600:5:8;;:14;;7030:18:16;;16600:32:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16796:35:8;16855:4;16835:16;16840:11;16835:2;:16;:::i;:::-;16834:25;;;;:::i;:::-;16796:63;;16869:23;16895:13;3331:12:1;;;3244:106;16895:13:8;16869:39;-1:-1:-1;16918:24:8;17007:12;16946:57;16869:39;16946:27;:57;:::i;:::-;16945:74;;;;:::i;:::-;16918:101;-1:-1:-1;17030:35:8;17094:3;17069:21;16918:101;17069:2;:21;:::i;:::-;17068:29;;;;:::i;:::-;17030:67;-1:-1:-1;17107:35:8;17145:58;17030:67;17145:16;:58;:::i;:::-;17219:10;;17107:96;;-1:-1:-1;17213:46:8;;-1:-1:-1;;;;;17219:10:8;17231:27;17213:5;:46::i;:::-;17283:10;;17269:55;;-1:-1:-1;;;;;17283:10:8;17296:27;17269:5;:55::i;:::-;17334:10;;;;;;;;;-1:-1:-1;;;;;17334:10:8;-1:-1:-1;;;;;17334:21:8;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17395:25;17407:12;17395:25;;;;1576::16;;1564:2;1549:18;;1430:177;17395:25:8;;;;;;;;17435:19;;1576:25:16;;;17435:19:8;;1564:2:16;1549:18;17435:19:8;;;;;;;17504:10;;-1:-1:-1;;;;;17504:10:8;3482:7:1;3508:18;;;;;;;;;;;;17470:46:8;;3508:18:1;;17504:10:8;-1:-1:-1;;;;;;;;;;;17470:46:8;;17552:10;;17531:61;;1576:25:16;;;-1:-1:-1;;;;;17552:10:8;;;;;;-1:-1:-1;;;;;;;;;;;17531:61:8;1564:2:16;1549:18;17531:61:8;;;;;;;17659:10;;-1:-1:-1;;;;;17659:10:8;3482:7:1;3508:18;;;;;;;;;;;;17608:64:8;;3508:18:1;;17659:10:8;-1:-1:-1;;;;;;;;;;;17608:64:8;;17741:10;;17687:116;;1576:25:16;;;-1:-1:-1;;;;;17741:10:8;;;;;;-1:-1:-1;;;;;;;;;;;17687:116:8;1564:2:16;1549:18;17687:116:8;;;;;;;16291:1519;;;;;;;16163:1647;;;:::o;14:597:16:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:16;574:15;-1:-1:-1;;570:29:16;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:16:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:16;;723:42;;713:70;;779:1;776;769:12;794:254;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:16:o;1245:180::-;1304:6;1357:2;1345:9;1336:7;1332:23;1328:32;1325:52;;;1373:1;1370;1363:12;1325:52;-1:-1:-1;1396:23:16;;1245:180;-1:-1:-1;1245:180:16:o;1612:248::-;1680:6;1688;1741:2;1729:9;1720:7;1716:23;1712:32;1709:52;;;1757:1;1754;1747:12;1709:52;-1:-1:-1;;1780:23:16;;;1850:2;1835:18;;;1822:32;;-1:-1:-1;1612:248:16:o;1865:328::-;1942:6;1950;1958;2011:2;1999:9;1990:7;1986:23;1982:32;1979:52;;;2027:1;2024;2017:12;1979:52;2050:29;2069:9;2050:29;:::i;:::-;2040:39;;2098:38;2132:2;2121:9;2117:18;2098:38;:::i;:::-;2088:48;;2183:2;2172:9;2168:18;2155:32;2145:42;;1865:328;;;;;:::o;2198:127::-;2259:10;2254:3;2250:20;2247:1;2240:31;2290:4;2287:1;2280:15;2314:4;2311:1;2304:15;2330:1121;2414:6;2445:2;2488;2476:9;2467:7;2463:23;2459:32;2456:52;;;2504:1;2501;2494:12;2456:52;2544:9;2531:23;2573:18;2614:2;2606:6;2603:14;2600:34;;;2630:1;2627;2620:12;2600:34;2668:6;2657:9;2653:22;2643:32;;2713:7;2706:4;2702:2;2698:13;2694:27;2684:55;;2735:1;2732;2725:12;2684:55;2771:2;2758:16;2793:2;2789;2786:10;2783:36;;;2799:18;;:::i;:::-;2845:2;2842:1;2838:10;2877:2;2871:9;2940:2;2936:7;2931:2;2927;2923:11;2919:25;2911:6;2907:38;2995:6;2983:10;2980:22;2975:2;2963:10;2960:18;2957:46;2954:72;;;3006:18;;:::i;:::-;3042:2;3035:22;3092:18;;;3126:15;;;;-1:-1:-1;3168:11:16;;;3164:20;;;3196:19;;;3193:39;;;3228:1;3225;3218:12;3193:39;3252:11;;;;3272:148;3288:6;3283:3;3280:15;3272:148;;;3354:23;3373:3;3354:23;:::i;:::-;3342:36;;3305:12;;;;3398;;;;3272:148;;3456:186;3515:6;3568:2;3556:9;3547:7;3543:23;3539:32;3536:52;;;3584:1;3581;3574:12;3536:52;3607:29;3626:9;3607:29;:::i;4297:316::-;4374:6;4382;4390;4443:2;4431:9;4422:7;4418:23;4414:32;4411:52;;;4459:1;4456;4449:12;4411:52;-1:-1:-1;;4482:23:16;;;4552:2;4537:18;;4524:32;;-1:-1:-1;4603:2:16;4588:18;;;4575:32;;4297:316;-1:-1:-1;4297:316:16:o;4846:260::-;4914:6;4922;4975:2;4963:9;4954:7;4950:23;4946:32;4943:52;;;4991:1;4988;4981:12;4943:52;5014:29;5033:9;5014:29;:::i;:::-;5004:39;;5062:38;5096:2;5085:9;5081:18;5062:38;:::i;:::-;5052:48;;4846:260;;;;;:::o;5681:184::-;5751:6;5804:2;5792:9;5783:7;5779:23;5775:32;5772:52;;;5820:1;5817;5810:12;5772:52;-1:-1:-1;5843:16:16;;5681:184;-1:-1:-1;5681:184:16:o;5870:127::-;5931:10;5926:3;5922:20;5919:1;5912:31;5962:4;5959:1;5952:15;5986:4;5983:1;5976:15;6002:168;6042:7;6108:1;6104;6100:6;6096:14;6093:1;6090:21;6085:1;6078:9;6071:17;6067:45;6064:71;;;6115:18;;:::i;:::-;-1:-1:-1;6155:9:16;;6002:168::o;6175:217::-;6215:1;6241;6231:132;;6285:10;6280:3;6276:20;6273:1;6266:31;6320:4;6317:1;6310:15;6348:4;6345:1;6338:15;6231:132;-1:-1:-1;6377:9:16;;6175:217::o;6397:125::-;6437:4;6465:1;6462;6459:8;6456:34;;;6470:18;;:::i;:::-;-1:-1:-1;6507:9:16;;6397:125::o;7162:277::-;7229:6;7282:2;7270:9;7261:7;7257:23;7253:32;7250:52;;;7298:1;7295;7288:12;7250:52;7330:9;7324:16;7383:5;7376:13;7369:21;7362:5;7359:32;7349:60;;7405:1;7402;7395:12;7785:380;7864:1;7860:12;;;;7907;;;7928:61;;7982:4;7974:6;7970:17;7960:27;;7928:61;8035:2;8027:6;8024:14;8004:18;8001:38;7998:161;;;8081:10;8076:3;8072:20;8069:1;8062:31;8116:4;8113:1;8106:15;8144:4;8141:1;8134:15;8170:128;8210:3;8241:1;8237:6;8234:1;8231:13;8228:39;;;8247:18;;:::i;:::-;-1:-1:-1;8283:9:16;;8170:128::o;8303:356::-;8505:2;8487:21;;;8524:18;;;8517:30;8583:34;8578:2;8563:18;;8556:62;8650:2;8635:18;;8303:356::o;8664:127::-;8725:10;8720:3;8716:20;8713:1;8706:31;8756:4;8753:1;8746:15;8780:4;8777:1;8770:15;8796:135;8835:3;-1:-1:-1;;8856:17:16;;8853:43;;;8876:18;;:::i;:::-;-1:-1:-1;8923:1:16;8912:13;;8796:135::o;10025:375::-;-1:-1:-1;;;;;10283:15:16;;;10265:34;;10335:15;;;;10330:2;10315:18;;10308:43;10382:2;10367:18;;10360:34;;;;10215:2;10200:18;;10025:375::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "addAddressToWhitelist(address)": {
        "details": "add an address to the whitelist",
        "params": {
          "addr": "address"
        }
      },
      "addAddressesToWhitelist(address[])": {
        "details": "add addresses to the whitelist",
        "params": {
          "addrs": "addresses"
        }
      },
      "addLiquidity(uint256,uint256)": {
        "details": "min_liquidity does nothing when total SWAP supply is 0.",
        "notice": "Deposit BNB && Tokens (STAKE) at current ratio to mint STOKE tokens.",
        "params": {
          "max_tokens": "Maximum number of tokens deposited. Deposits max amount if total STOKE supply is 0.",
          "min_liquidity": "Minimum number of STOKE sender will mint if total STAKE supply is greater than 0."
        },
        "returns": {
          "_0": "The amount of SWAP minted."
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "bnbToTokenSwapInput(uint256)": {
        "details": "User specifies exact input (msg.value) && minimum output.",
        "notice": "Convert BNB to Tokens.",
        "params": {
          "min_tokens": "Minimum Tokens bought. Considers slippage."
        },
        "returns": {
          "_0": "Amount of Tokens bought."
        }
      },
      "bnbToTokenSwapOutput(uint256)": {
        "details": "User specifies maximum input (msg.value) && exact output.",
        "notice": "Convert BNB to Tokens.",
        "params": {
          "tokens_bought": "Amount of tokens bought."
        },
        "returns": {
          "_0": "Amount of BNB sold."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getBnbToTokenInputPrice(uint256)": {
        "notice": "Public price function for BNB to Token trades with an exact input.",
        "params": {
          "bnb_sold": "Amount of BNB sold."
        },
        "returns": {
          "_0": "Amount of Tokens that can be bought with input BNB."
        }
      },
      "getBnbToTokenOutputPrice(uint256)": {
        "notice": "Public price function for BNB to Token trades with an exact output.",
        "params": {
          "tokens_bought": "Amount of Tokens bought."
        },
        "returns": {
          "_0": "Amount of BNB needed to buy output Tokens."
        }
      },
      "getInputPrice(uint256,uint256,uint256)": {
        "details": "Pricing function for converting between BNB && Tokens without fee.",
        "params": {
          "input_amount": "Amount of BNB or Tokens being sold.",
          "input_reserve": "Amount of BNB or Tokens (input type) in exchange reserves.",
          "output_reserve": "Amount of BNB or Tokens (output type) in exchange reserves."
        },
        "returns": {
          "_0": "Amount of BNB or Tokens bought."
        }
      },
      "getOutputPrice(uint256,uint256,uint256)": {
        "details": "Pricing function for converting between BNB && Tokens without fee.",
        "params": {
          "input_reserve": "Amount of BNB or Tokens (input type) in exchange reserves.",
          "output_amount": "Amount of BNB or Tokens being bought.",
          "output_reserve": "Amount of BNB or Tokens (output type) in exchange reserves."
        },
        "returns": {
          "_0": "Amount of BNB or Tokens sold."
        }
      },
      "getTokenToBnbInputPrice(uint256)": {
        "notice": "Public price function for Token to BNB trades with an exact input.",
        "params": {
          "tokens_sold": "Amount of Tokens sold."
        },
        "returns": {
          "_0": "Amount of BNB that can be bought with input Tokens."
        }
      },
      "getTokenToBnbOutputPrice(uint256)": {
        "notice": "Public price function for Token to BNB trades with an exact output.",
        "params": {
          "bnb_bought": "Amount of output BNB."
        },
        "returns": {
          "_0": "Amount of Tokens needed to buy output BNB."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeAddressFromWhitelist(address)": {
        "details": "remove an address from the whitelist",
        "params": {
          "addr": "address"
        }
      },
      "removeAddressesFromWhitelist(address[])": {
        "details": "remove addresses from the whitelist",
        "params": {
          "addrs": "addresses"
        }
      },
      "removeLiquidity(uint256,uint256,uint256)": {
        "details": "Burn SWAP tokens to withdraw BNB && Tokens at current ratio.",
        "params": {
          "amount": "Amount of SWAP burned.",
          "min_bnb": "Minimum BNB withdrawn.",
          "min_tokens": "Minimum Tokens withdrawn."
        },
        "returns": {
          "_0": "The amount of BNB && Tokens withdrawn."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setLock(address)": {
        "details": "Sets lock address. Make sure to set a lock address after deploying.",
        "params": {
          "_lock": "token lock address"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "tokenAddress()": {
        "returns": {
          "_0": "Address of Token that is sold on this exchange."
        }
      },
      "tokenToBnbSwapInput(uint256,uint256)": {
        "details": "User specifies exact input && minimum output.",
        "notice": "Convert Tokens to BNB.",
        "params": {
          "min_bnb": "Minimum BNB purchased.",
          "tokens_sold": "Amount of Tokens sold."
        },
        "returns": {
          "_0": "Amount of BNB bought."
        }
      },
      "tokenToBnbSwapOutput(uint256,uint256)": {
        "details": "User specifies maximum input && exact output.",
        "notice": "Convert Tokens to BNB.",
        "params": {
          "bnb_bought": "Amount of BNB purchased.",
          "max_tokens": "Maximum Tokens sold."
        },
        "returns": {
          "_0": "Amount of Tokens sold."
        }
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "When user swaps from STAKE to BNB, 18% of the STAKE is taxed. 8% of the total value to swap is converted to BNB and sent to treasury. 5% of the STAKE to swap is sent to vault in STAKE. 5% of the STAKE to swap is converted to LP token by converting half of it to BNB and then sent to foundation.",
    "version": 1
  },
  "offset": [
    952,
    25311
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2CD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x857620E1 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0xB187BD26 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xFBFA77CF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x8F2 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x912 JUMPI DUP1 PUSH4 0xFC518205 EQ PUSH2 0x932 JUMPI DUP1 PUSH4 0xFD11C223 EQ PUSH2 0x948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x89C JUMPI DUP1 PUSH4 0xF8401FE6 EQ PUSH2 0x8BC JUMPI DUP1 PUSH4 0xFB48D48A EQ PUSH2 0x8D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB187BD26 EQ PUSH2 0x7C9 JUMPI DUP1 PUSH4 0xB5695026 EQ PUSH2 0x7E3 JUMPI DUP1 PUSH4 0xD013CBE2 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xD596F9B4 EQ PUSH2 0x809 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x836 JUMPI DUP1 PUSH4 0xE2EC6EC3 EQ PUSH2 0x87C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9CD441DA GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x736 JUMPI DUP1 PUSH4 0x9E1A4D19 EQ PUSH2 0x754 JUMPI DUP1 PUSH4 0xA32088D4 EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x789 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x857620E1 EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x89F2A871 EQ PUSH2 0x680 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0x8F798A5D EQ PUSH2 0x6BE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38E70059 GT PUSH2 0x234 JUMPI DUP1 PUSH4 0x5746402B GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5F9 JUMPI DUP1 PUSH4 0x769D7235 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0x7B9417C8 EQ PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5746402B EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0x7044F7A7 EQ PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38E70059 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x3DA2EC9B EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x41FBB050 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x4EAA1B87 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0x537A39BB EQ PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1DB7976F GT PUSH2 0x286 JUMPI DUP1 PUSH4 0x1DB7976F EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x24953EAA EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x286DD3F5 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x2F38C6E6 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xE250842 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x1A12BE0D EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x1A42B767 EQ PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x2E2 JUMPI PUSH2 0x2DF CALLVALUE PUSH1 0x1 CALLER CALLER PUSH2 0x968 JUMP JUMPDEST POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0E JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x309 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F38 JUMP JUMPDEST PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x309 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x362 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F51 JUMP JUMPDEST PUSH2 0xD88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F38 JUMP JUMPDEST PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F38 JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F73 JUMP JUMPDEST PUSH2 0xE76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC5 JUMP JUMPDEST PUSH2 0xE9A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x307E JUMP JUMPDEST PUSH2 0xF18 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x453 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F38 JUMP JUMPDEST PUSH2 0xFC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x309 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x2F38 JUMP JUMPDEST PUSH2 0x104B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0x4AF CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0E JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D4 PUSH2 0x4CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2F38 JUMP JUMPDEST PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x309 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x509 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x309 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x53C CALLDATASIZE PUSH1 0x4 PUSH2 0x307E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x588 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F38 JUMP JUMPDEST PUSH2 0x11E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x509 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x5DE CALLDATASIZE PUSH1 0x4 PUSH2 0x307E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60E PUSH2 0x12A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0x62B CALLDATASIZE PUSH1 0x4 PUSH2 0x307E JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0x65B CALLDATASIZE PUSH1 0x4 PUSH2 0x307E JUMP JUMPDEST PUSH2 0x12DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D4 PUSH2 0x67B CALLDATASIZE PUSH1 0x4 PUSH2 0x3099 JUMP JUMPDEST PUSH2 0x137B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x69B CALLDATASIZE PUSH1 0x4 PUSH2 0x3099 JUMP JUMPDEST PUSH2 0x15B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x509 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x509 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH2 0x1636 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0x70E CALLDATASIZE PUSH1 0x4 PUSH2 0x307E JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x731 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F51 JUMP JUMPDEST PUSH2 0x1645 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x509 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x1A62 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60E PUSH2 0x784 CALLDATASIZE PUSH1 0x4 PUSH2 0x307E JUMP JUMPDEST PUSH2 0x1AD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0x7A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0E JUMP JUMPDEST PUSH2 0x1B20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0x7C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0E JUMP JUMPDEST PUSH2 0x1BB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x332 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x7F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F38 JUMP JUMPDEST PUSH2 0x1BC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x362 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x824 CALLDATASIZE PUSH1 0x4 PUSH2 0x307E JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x851 CALLDATASIZE PUSH1 0x4 PUSH2 0x30C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0x897 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC5 JUMP JUMPDEST PUSH2 0x1BCE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60E PUSH2 0x8B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x307E JUMP JUMPDEST PUSH2 0x1C45 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x8ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2F51 JUMP JUMPDEST PUSH2 0x1CE0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x509 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x509 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x963 CALLDATASIZE PUSH1 0x4 PUSH2 0x3099 JUMP JUMPDEST PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 GT DUP1 ISZERO PUSH2 0x979 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x9BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736F6C6420616E64206D696E203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2C SWAP2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP SELFBALANCE SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xA71 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xA7E JUMPI DUP9 SWAP4 POP PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xA8B DUP6 PUSH1 0x3 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0xA95 SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP3 POP PUSH2 0xAA1 DUP4 DUP11 PUSH2 0x3168 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x0 PUSH2 0xABA DUP6 PUSH2 0xAB4 DUP2 DUP6 PUSH2 0x3168 JUMP JUMPDEST DUP6 PUSH2 0x15B9 JUMP JUMPDEST SWAP1 POP DUP9 DUP2 LT ISZERO PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E735F626F75676874203E3D206D696E5F746F6B656E730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB83 SWAP2 SWAP1 PUSH2 0x317F JUMP JUMPDEST PUSH2 0xBBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x3A3930B739B332B91032B939 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B2 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xBCD JUMPI PUSH2 0xBCD DUP5 PUSH2 0x1D39 JUMP JUMPDEST DUP1 DUP11 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7F743FB741E07B0C4DAEB2AF54FB3EBFA2BDB31D9913A0E555661C870411AAE5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH32 0x75F52E89B275BDAED7CEB1586A0C5AC0503A27A09EA92F74DD81DB37FA840282 SELFBALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xC40 PUSH2 0x1DDD JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xC5C SWAP1 PUSH2 0x31A1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC88 SWAP1 PUSH2 0x31A1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCAA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xCED DUP2 DUP6 DUP6 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xD07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD74 SWAP2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST SWAP1 POP PUSH2 0xD81 DUP4 SELFBALANCE DUP4 PUSH2 0x15B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD81 DUP4 DUP4 CALLER CALLER PUSH2 0x201F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xDA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDB0 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP SELFBALANCE SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xE2F DUP3 DUP9 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0xE39 SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST PUSH2 0xE44 SWAP1 PUSH1 0x1 PUSH2 0x31D6 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP3 PUSH2 0xE53 DUP6 DUP10 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0xE5D SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF3 DUP3 CALLVALUE CALLER CALLER PUSH2 0x2267 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xE84 DUP6 DUP3 DUP6 PUSH2 0x24EB JUMP JUMPDEST PUSH2 0xE8F DUP6 DUP6 DUP6 PUSH2 0x257D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B2 SWAP1 PUSH2 0x31EE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xF11 JUMPI PUSH2 0xEF5 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xEE8 JUMPI PUSH2 0xEE8 PUSH2 0x3223 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xF18 JUMP JUMPDEST ISZERO PUSH2 0xEFF JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0xF09 DUP2 PUSH2 0x3239 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xECA JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B2 SWAP1 PUSH2 0x31EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF13 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xF1ABF01A1043B7C244D128E8595CF0C1D10743B022B03A02DFFD8CA3BF729F5A SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xFD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x101A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x103E SWAP2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST SWAP1 POP PUSH2 0xD81 DUP4 DUP3 SELFBALANCE PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1059 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10D5 DUP5 SELFBALANCE DUP5 PUSH2 0x1CEE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xCED SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x1117 SWAP1 DUP8 SWAP1 PUSH2 0x31D6 JUMP JUMPDEST PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x112A PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1182 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11A6 SWAP2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0x11B5 SELFBALANCE DUP9 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x11BF SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0x11CE DUP5 DUP10 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x11D8 SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP2 SWAP8 SWAP2 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1228 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x746F6B656E20736F6C64203C203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1271 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10D5 DUP5 DUP4 SELFBALANCE PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B2 SWAP1 PUSH2 0x31EE JUMP JUMPDEST PUSH2 0x12D8 PUSH1 0x0 PUSH2 0x2739 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1307 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B2 SWAP1 PUSH2 0x31EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF13 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xD1BBA68C128CC3F427E5831B3C6F99F480B6EFA6B9E80C757768F6124158CC3F SWAP2 ADD PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 GT DUP1 ISZERO PUSH2 0x138E JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST DUP1 ISZERO PUSH2 0x139A JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST PUSH2 0x13A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13AE PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1406 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x142A SWAP2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0x1439 SELFBALANCE DUP11 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x1443 SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0x1452 DUP5 DUP12 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x145C SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP1 POP DUP8 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x146E JUMPI POP DUP7 DUP2 LT ISZERO JUMPDEST PUSH2 0x1477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1481 CALLER DUP11 PUSH2 0x278B JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1500 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1524 SWAP2 SWAP1 PUSH2 0x317F JUMP JUMPDEST PUSH2 0x152D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 DUP4 SWAP1 CALLER SWAP1 PUSH32 0x9985886FA2F848BE5F83E79DF7592ADEBCE0C554283252F12B1C6CA0C1E35093 SWAP1 PUSH1 0x0 SWAP1 LOG4 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3279 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP10 DUP2 MSTORE PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3299 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP1 ISZERO PUSH2 0x15CA JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x1606 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x494E56414C49445F56414C5545 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1612 DUP4 DUP7 PUSH2 0x3127 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1620 DUP7 DUP7 PUSH2 0x31D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x162C DUP2 DUP4 PUSH2 0x3146 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC5C SWAP1 PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT DUP1 ISZERO PUSH2 0x1656 JUMPI POP PUSH1 0x0 CALLVALUE GT JUMPDEST PUSH2 0x16AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53776170236164644C69717569646974793A20494E56414C49445F415247554D PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x115395 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B9 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0xFF AND PUSH2 0x170A JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xE DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1704 SWAP1 DUP5 SWAP1 PUSH2 0x31D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 ISZERO PUSH2 0x1905 JUMPI PUSH1 0x0 DUP6 GT PUSH2 0x171D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1729 CALLVALUE SELFBALANCE PUSH2 0x3168 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1777 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x179B SWAP2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x17A8 DUP3 CALLVALUE PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x17B2 SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST PUSH2 0x17BD SWAP1 PUSH1 0x1 PUSH2 0x31D6 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 PUSH2 0x17CC DUP7 CALLVALUE PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x17D6 SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP1 POP DUP4 DUP8 LT ISZERO DUP1 ISZERO PUSH2 0x17E8 JUMPI POP DUP8 DUP2 LT ISZERO JUMPDEST PUSH2 0x17F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17FB CALLER DUP3 PUSH2 0x28BF JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x182F SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x3254 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x184E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1872 SWAP2 SWAP1 PUSH2 0x317F JUMP JUMPDEST PUSH2 0x187B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 CALLVALUE SWAP1 CALLER SWAP1 PUSH32 0x6059FEE843FF0198392EEF05D3FD97A79C42B66D197DBFC62EBDF25CF1698444 SWAP1 PUSH1 0x0 SWAP1 LOG4 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3279 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3299 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP5 POP PUSH2 0xCF3 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO PUSH2 0x194D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x494E56414C49445F56414C5545 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B2 JUMP JUMPDEST POP DUP3 SELFBALANCE PUSH2 0x195A CALLER DUP3 PUSH2 0x28BF JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x198E SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3254 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19D1 SWAP2 SWAP1 PUSH2 0x317F JUMP JUMPDEST PUSH2 0x19DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 CALLVALUE SWAP1 CALLER SWAP1 PUSH32 0x6059FEE843FF0198392EEF05D3FD97A79C42B66D197DBFC62EBDF25CF1698444 SWAP1 PUSH1 0x0 SWAP1 LOG4 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3279 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3299 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 POP PUSH2 0xCF3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ACF SWAP2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1AFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B2 SWAP1 PUSH2 0x31EE JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x1BA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0xE8F DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xCED DUP2 DUP6 DUP6 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF3 CALLVALUE DUP4 CALLER CALLER PUSH2 0x968 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B2 SWAP1 PUSH2 0x31EE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xF11 JUMPI PUSH2 0x1C29 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C1C JUMPI PUSH2 0x1C1C PUSH2 0x3223 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x12DA JUMP JUMPDEST ISZERO PUSH2 0x1C33 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x1C3D DUP2 PUSH2 0x3239 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BFE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B2 SWAP1 PUSH2 0x31EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1CD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x1CDD DUP2 PUSH2 0x2739 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD81 DUP4 DUP4 CALLER CALLER PUSH2 0x298C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP1 ISZERO PUSH2 0x1CFF JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x1D08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D14 DUP6 DUP6 PUSH2 0x3127 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D22 DUP7 DUP6 PUSH2 0x3168 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D2E DUP2 DUP4 PUSH2 0x3146 JUMP JUMPDEST PUSH2 0x162C SWAP1 PUSH1 0x1 PUSH2 0x31D6 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1D46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D93 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1DA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xC328594CAB3A117E8DDF861647E12C326EB6FA98AB8F707982AD7A13E8264C7C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x104B JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xC SLOAD SWAP2 SWAP3 POP SELFBALANCE SWAP2 PUSH2 0x1E05 SWAP1 TIMESTAMP PUSH2 0x3168 JUMP JUMPDEST GT ISZERO PUSH2 0x1E53 JUMPI PUSH32 0xAFFEBBDD31C6253AE2EA132D4A132D79B3AD07ED2720B51749AA97330A7BDB13 PUSH2 0x1E37 DUP3 PUSH1 0x2 PUSH2 0x3127 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 TIMESTAMP PUSH1 0xC SSTORE JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x75F52E89B275BDAED7CEB1586A0C5AC0503A27A09EA92F74DD81DB37FA840282 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x26632EDB369F47EB451A281FAD73CA0A52CFA3109E457A64524535839486AC6D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1ECC SWAP2 SWAP1 PUSH2 0x31D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1EF1 SWAP1 DUP5 SWAP1 PUSH2 0x31D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1F5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1FBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 GT PUSH2 0x202D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2076 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x209A SWAP2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST SWAP1 POP SELFBALANCE PUSH1 0x0 PUSH2 0x20AA DUP9 DUP5 DUP5 PUSH2 0x1CEE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP9 LT ISZERO PUSH2 0x20F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1B585E081D1BDAD95B9CC8195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2134 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x2140 JUMPI POP DUP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x52 PUSH2 0x214D DUP4 PUSH1 0x64 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x2157 SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP1 POP PUSH2 0x2164 DUP10 DUP3 DUP6 PUSH2 0x2BA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP11 ISZERO PUSH2 0x8FC MUL SWAP1 DUP12 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x219A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x21CF SWAP1 DUP11 SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x3254 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2212 SWAP2 SWAP1 PUSH2 0x317F JUMP JUMPDEST PUSH2 0x221B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 DUP2 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3CC32B807E0E6ADE29DEFE751A1339A43C1E45D7D18ECA93A916CA060EBE89EA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x225B PUSH2 0x1DDD JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 GT DUP1 ISZERO PUSH2 0x2278 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x2281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22F2 SWAP2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST SWAP1 POP SELFBALANCE PUSH1 0x0 PUSH2 0x230B DUP11 PUSH2 0x2305 DUP12 DUP6 PUSH2 0x3168 JUMP JUMPDEST DUP6 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x234E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x235B JUMPI DUP1 SWAP5 POP PUSH2 0x238E JUMP JUMPDEST PUSH1 0x61 PUSH2 0x2368 DUP3 PUSH1 0x64 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x2372 SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP5 POP PUSH1 0x64 PUSH2 0x2381 DUP7 PUSH1 0x3 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x238B SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x0 PUSH2 0x239A DUP7 DUP12 PUSH2 0x3168 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x23DA JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x23D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP15 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x242D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2451 SWAP2 SWAP1 PUSH2 0x317F JUMP JUMPDEST PUSH2 0x245A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ISZERO PUSH2 0x2469 JUMPI PUSH2 0x2469 DUP6 PUSH2 0x1D39 JUMP JUMPDEST DUP11 DUP7 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7F743FB741E07B0C4DAEB2AF54FB3EBFA2BDB31D9913A0E555661C870411AAE5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0xC328594CAB3A117E8DDF861647E12C326EB6FA98AB8F707982AD7A13E8264C7C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x24DC PUSH2 0x1DDD JUMP JUMPDEST POP SWAP4 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2577 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x256A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x2577 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1EFA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x25E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x26BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x26F2 SWAP1 DUP5 SWAP1 PUSH2 0x31D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3299 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x272C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x27EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x285F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x288E SWAP1 DUP5 SWAP1 PUSH2 0x3168 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3299 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x2012 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2915 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2927 SWAP2 SWAP1 PUSH2 0x31D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x2954 SWAP1 DUP5 SWAP1 PUSH2 0x31D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3299 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 GT DUP1 ISZERO PUSH2 0x299D JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x29A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A13 SWAP2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST SWAP1 POP SELFBALANCE PUSH1 0x0 DUP1 PUSH2 0x2A24 DUP10 DUP6 DUP6 PUSH2 0x15B9 JUMP JUMPDEST SWAP1 POP DUP8 DUP2 LT ISZERO PUSH2 0x2A33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2A73 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x2A80 JUMPI DUP1 SWAP2 POP PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x2A8D DUP3 PUSH1 0x52 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x2A97 SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA4 DUP2 DUP11 DUP6 PUSH2 0x2BA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2ADA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x2B0F SWAP1 DUP11 SWAP1 ADDRESS SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x3254 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B52 SWAP2 SWAP1 PUSH2 0x317F JUMP JUMPDEST PUSH2 0x2B5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP10 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3CC32B807E0E6ADE29DEFE751A1339A43C1E45D7D18ECA93A916CA060EBE89EA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2B9B PUSH2 0x1DDD JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x2BB6 DUP6 PUSH1 0x8 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x2BC0 SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BCB DUP2 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x2BDA DUP6 PUSH1 0x5 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x2BE4 SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C5F SWAP2 SWAP1 PUSH2 0x317F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x2C70 DUP8 PUSH1 0x19 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x2C7A SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C87 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH2 0x2C96 DUP4 DUP6 PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x2CA0 SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0x2CB1 DUP4 PUSH1 0xA PUSH2 0x3127 JUMP JUMPDEST PUSH2 0x2CBB SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2CC9 DUP3 DUP5 PUSH2 0x3168 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 SWAP2 POP PUSH2 0x2CE2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x28BF JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x2CF8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x28BF JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x677A7872 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xC328594CAB3A117E8DDF861647E12C326EB6FA98AB8F707982AD7A13E8264C7C DUP8 PUSH1 0x40 MLOAD PUSH2 0x2D91 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE PUSH32 0x44B0FC80E673B7CE4245D6302C96DC22199A569A1B815FE4295E3B6EA54F95B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3279 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG3 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3299 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3279 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG3 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3299 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2ECF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2EB3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2EE1 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F2A DUP4 PUSH2 0x2EF7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F91 DUP5 PUSH2 0x2EF7 JUMP JUMPDEST SWAP3 POP PUSH2 0x2F9F PUSH1 0x20 DUP6 ADD PUSH2 0x2EF7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2FF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3004 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3016 JUMPI PUSH2 0x3016 PUSH2 0x2FAF JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x303B JUMPI PUSH2 0x303B PUSH2 0x2FAF JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x3059 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x225B JUMPI PUSH2 0x306F DUP6 PUSH2 0x2EF7 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x305E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3090 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD81 DUP3 PUSH2 0x2EF7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30E1 DUP4 PUSH2 0x2EF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x30EF PUSH1 0x20 DUP5 ADD PUSH2 0x2EF7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x310A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3141 JUMPI PUSH2 0x3141 PUSH2 0x3111 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3163 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x317A JUMPI PUSH2 0x317A PUSH2 0x3111 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x31B5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF11 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x31E9 JUMPI PUSH2 0x31E9 PUSH2 0x3111 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x324D JUMPI PUSH2 0x324D PUSH2 0x3111 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID PUSH17 0x9A5B29491696D085FA151016FB243EA3CF SWAP8 PUSH30 0x385D7220302EC663CEB15D28DDF252AD1BE2C89B69C2B068FC378DAA952B 0xA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xDA 0xBE 0xE5 0xAF 0x2B DUP1 0xD0 GASPRICE PUSH7 0x231A40D5878929 CREATE EXP 0xAE PUSH12 0xF3A32C141EC34D5B77E59664 PUSH20 0x6F6C634300080C00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "LT",
      "path": "8"
    },
    "9": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2CD"
    },
    "12": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "13": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "SHR",
      "path": "8"
    },
    "19": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "20": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x857620E1"
    },
    "25": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "GT",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x175"
    },
    "29": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "30": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "31": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xB187BD26"
    },
    "36": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "GT",
      "path": "8"
    },
    "37": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDC"
    },
    "40": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "41": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "42": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF2FDE38B"
    },
    "47": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "GT",
      "path": "8"
    },
    "48": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x95"
    },
    "51": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "52": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "53": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFBFA77CF"
    },
    "58": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "GT",
      "path": "8"
    },
    "59": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "63": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "64": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFBFA77CF"
    },
    "69": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "70": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8F2"
    },
    "73": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "74": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "75": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFC0C546A"
    },
    "80": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "81": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x912"
    },
    "84": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "85": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "86": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFC518205"
    },
    "91": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "92": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x932"
    },
    "95": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "96": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "97": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFD11C223"
    },
    "102": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "103": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x948"
    },
    "106": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "107": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "110": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "REVERT",
      "path": "8"
    },
    "111": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "112": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "113": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF2FDE38B"
    },
    "118": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "119": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x89C"
    },
    "122": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "123": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "124": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF8401FE6"
    },
    "129": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "130": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8BC"
    },
    "133": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "134": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "135": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFB48D48A"
    },
    "140": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "141": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8D2"
    },
    "144": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "145": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "147": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "148": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "REVERT",
      "path": "8"
    },
    "149": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "150": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "151": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xB187BD26"
    },
    "156": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "157": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7C9"
    },
    "160": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "161": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "162": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xB5695026"
    },
    "167": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "168": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7E3"
    },
    "171": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "172": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "173": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xD013CBE2"
    },
    "178": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "179": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7F6"
    },
    "182": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "183": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "184": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xD596F9B4"
    },
    "189": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "190": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x809"
    },
    "193": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "194": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "195": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDD62ED3E"
    },
    "200": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "201": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x836"
    },
    "204": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "205": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "206": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xE2EC6EC3"
    },
    "211": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "212": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x87C"
    },
    "215": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "216": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "219": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "REVERT",
      "path": "8"
    },
    "220": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "221": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "222": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x9CD441DA"
    },
    "227": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "GT",
      "path": "8"
    },
    "228": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12E"
    },
    "231": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "232": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "233": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x9CD441DA"
    },
    "238": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "239": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x723"
    },
    "242": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "243": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "244": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x9D76EA58"
    },
    "249": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "250": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x736"
    },
    "253": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "254": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "255": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x9E1A4D19"
    },
    "260": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "261": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x754"
    },
    "264": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "265": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "266": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA32088D4"
    },
    "271": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "272": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x769"
    },
    "275": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "276": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "277": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA457C2D7"
    },
    "282": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "283": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x789"
    },
    "286": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "287": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "288": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "293": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "294": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7A9"
    },
    "297": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "298": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "300": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "301": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "REVERT",
      "path": "8"
    },
    "302": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "303": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "304": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x857620E1"
    },
    "309": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "310": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x660"
    },
    "313": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "314": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "315": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x89F2A871"
    },
    "320": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "321": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x680"
    },
    "324": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "325": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "326": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "331": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "332": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6A0"
    },
    "335": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "336": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "337": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8F798A5D"
    },
    "342": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "343": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6BE"
    },
    "346": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "347": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "348": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x95D89B41"
    },
    "353": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "354": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6DE"
    },
    "357": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "358": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "359": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x9B19251A"
    },
    "364": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "365": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6F3"
    },
    "368": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "369": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "371": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "372": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "REVERT",
      "path": "8"
    },
    "373": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "374": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "375": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x38E70059"
    },
    "380": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "GT",
      "path": "8"
    },
    "381": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x234"
    },
    "384": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "385": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "386": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x5746402B"
    },
    "391": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "GT",
      "path": "8"
    },
    "392": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1ED"
    },
    "395": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "396": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "397": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "402": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "GT",
      "path": "8"
    },
    "403": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C7"
    },
    "406": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "407": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "408": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "413": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "414": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5C3"
    },
    "417": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "418": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "419": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "424": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "425": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5F9"
    },
    "428": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "429": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "430": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x769D7235"
    },
    "435": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "436": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x610"
    },
    "439": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "440": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "441": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x7B9417C8"
    },
    "446": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "447": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x640"
    },
    "450": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "451": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "453": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "454": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "REVERT",
      "path": "8"
    },
    "455": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "456": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "457": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x5746402B"
    },
    "462": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "463": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x56D"
    },
    "466": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "467": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "468": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x61D027B3"
    },
    "473": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "474": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x58D"
    },
    "477": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "478": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "479": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x7044F7A7"
    },
    "484": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "485": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5AD"
    },
    "488": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "489": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "491": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "492": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "REVERT",
      "path": "8"
    },
    "493": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "494": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "495": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x38E70059"
    },
    "500": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "501": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x474"
    },
    "504": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "505": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "506": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x39509351"
    },
    "511": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "512": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x494"
    },
    "515": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "516": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "517": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x3DA2EC9B"
    },
    "522": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "523": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4B4"
    },
    "526": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "527": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "528": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x41FBB050"
    },
    "533": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "534": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4E9"
    },
    "537": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "538": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "539": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x4EAA1B87"
    },
    "544": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "545": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x521"
    },
    "548": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "549": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "550": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x537A39BB"
    },
    "555": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "556": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x557"
    },
    "559": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "560": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "562": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "563": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "REVERT",
      "path": "8"
    },
    "564": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "565": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "566": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x1DB7976F"
    },
    "571": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "GT",
      "path": "8"
    },
    "572": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x286"
    },
    "575": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "576": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "577": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x1DB7976F"
    },
    "582": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "583": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3C5"
    },
    "586": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "587": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "588": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "593": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "594": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3D8"
    },
    "597": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "598": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "599": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x24953EAA"
    },
    "604": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "605": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F8"
    },
    "608": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "609": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "610": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x286DD3F5"
    },
    "615": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "616": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x418"
    },
    "619": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "620": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "621": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x2F38C6E6"
    },
    "626": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "627": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x438"
    },
    "630": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "631": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "632": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x313CE567"
    },
    "637": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "638": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x458"
    },
    "641": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "642": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "644": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "645": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "REVERT",
      "path": "8"
    },
    "646": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "647": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "648": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x6FDDE03"
    },
    "653": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "654": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2E7"
    },
    "657": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "658": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "659": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x95EA7B3"
    },
    "664": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "665": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x312"
    },
    "668": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "669": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "670": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xE250842"
    },
    "675": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "676": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x342"
    },
    "679": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "680": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "681": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x18160DDD"
    },
    "686": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "687": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x370"
    },
    "690": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "691": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "692": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x1A12BE0D"
    },
    "697": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "698": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x385"
    },
    "701": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "702": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "703": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x1A42B767"
    },
    "708": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "EQ",
      "path": "8"
    },
    "709": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3A5"
    },
    "712": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "713": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "715": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "716": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "REVERT",
      "path": "8"
    },
    "717": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "718": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "719": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2E2"
    },
    "722": {
      "fn": null,
      "offset": [
        952,
        25311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "723": {
      "fn": "StakeFountain.<receive>",
      "offset": [
        5468,
        5521
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 0,
      "value": "0x2DF"
    },
    "726": {
      "fn": "StakeFountain.<receive>",
      "offset": [
        5484,
        5493
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "727": {
      "fn": "StakeFountain.<receive>",
      "offset": [
        5495,
        5496
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "729": {
      "fn": "StakeFountain.<receive>",
      "offset": [
        5498,
        5508
      ],
      "op": "CALLER",
      "path": "8"
    },
    "730": {
      "fn": "StakeFountain.<receive>",
      "offset": [
        5510,
        5520
      ],
      "op": "CALLER",
      "path": "8"
    },
    "731": {
      "fn": "StakeFountain.<receive>",
      "offset": [
        5468,
        5483
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x968"
    },
    "734": {
      "fn": "StakeFountain.<receive>",
      "jump": "i",
      "offset": [
        5468,
        5521
      ],
      "op": "JUMP",
      "path": "8"
    },
    "735": {
      "fn": "StakeFountain.<receive>",
      "offset": [
        5468,
        5521
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "736": {
      "fn": "StakeFountain.<receive>",
      "offset": [
        5468,
        5521
      ],
      "op": "POP",
      "path": "8"
    },
    "737": {
      "offset": [
        952,
        25311
      ],
      "op": "STOP",
      "path": "8"
    },
    "738": {
      "fn": "StakeFountain.<receive>",
      "offset": [
        952,
        25311
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "739": {
      "fn": "StakeFountain.<receive>",
      "offset": [
        952,
        25311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "741": {
      "fn": "StakeFountain.<receive>",
      "offset": [
        952,
        25311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "742": {
      "first_revert": true,
      "fn": "StakeFountain.<receive>",
      "offset": [
        952,
        25311
      ],
      "op": "REVERT",
      "path": "8"
    },
    "743": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "744": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "745": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "1"
    },
    "746": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "747": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F3"
    },
    "750": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "751": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "753": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "1"
    },
    "754": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "REVERT",
      "path": "1"
    },
    "755": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "756": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "POP",
      "path": "1"
    },
    "757": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FC"
    },
    "760": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC4D"
    },
    "763": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "1"
    },
    "764": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "765": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "767": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "768": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x309"
    },
    "771": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "772": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "773": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EA2"
    },
    "776": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "1"
    },
    "777": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "778": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "780": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "781": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "1"
    },
    "782": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "783": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SUB",
      "path": "1"
    },
    "784": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "785": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "RETURN",
      "path": "1"
    },
    "786": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "787": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "788": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "DUP1",
      "path": "1"
    },
    "789": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "790": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31E"
    },
    "793": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "794": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "796": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "DUP1",
      "path": "1"
    },
    "797": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "REVERT",
      "path": "1"
    },
    "798": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "799": {
      "op": "POP"
    },
    "800": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "803": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x32D"
    },
    "806": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "807": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "809": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F0E"
    },
    "812": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "1"
    },
    "813": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "814": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCDF"
    },
    "817": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "1"
    },
    "818": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "819": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "821": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "822": {
      "op": "SWAP1"
    },
    "823": {
      "op": "ISZERO"
    },
    "824": {
      "op": "ISZERO"
    },
    "825": {
      "op": "DUP2"
    },
    "826": {
      "op": "MSTORE"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "829": {
      "op": "ADD"
    },
    "830": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x309"
    },
    "833": {
      "op": "JUMP"
    },
    "834": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "835": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "836": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "DUP1",
      "path": "8"
    },
    "837": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "838": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x34E"
    },
    "841": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "842": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "844": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "DUP1",
      "path": "8"
    },
    "845": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "REVERT",
      "path": "8"
    },
    "846": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "847": {
      "op": "POP"
    },
    "848": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "851": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x35D"
    },
    "854": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "855": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "857": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F38"
    },
    "860": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "jump": "i",
      "offset": [
        18059,
        18348
      ],
      "op": "JUMP",
      "path": "8"
    },
    "861": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "862": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCF9"
    },
    "865": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "jump": "i",
      "offset": [
        18059,
        18348
      ],
      "op": "JUMP",
      "path": "8"
    },
    "866": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "867": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "869": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "870": {
      "op": "SWAP1"
    },
    "871": {
      "op": "DUP2"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "875": {
      "op": "ADD"
    },
    "876": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x309"
    },
    "879": {
      "op": "JUMP"
    },
    "880": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "881": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "882": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "883": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "884": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37C"
    },
    "887": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "888": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "890": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "891": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "REVERT",
      "path": "1"
    },
    "892": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "893": {
      "op": "POP"
    },
    "894": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x2"
    },
    "896": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "897": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x362"
    },
    "900": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "901": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "902": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "903": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "DUP1",
      "path": "8"
    },
    "904": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "905": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x391"
    },
    "908": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "909": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "911": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "DUP1",
      "path": "8"
    },
    "912": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "REVERT",
      "path": "8"
    },
    "913": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "914": {
      "op": "POP"
    },
    "915": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "918": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3A0"
    },
    "921": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "922": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "924": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F51"
    },
    "927": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "jump": "i",
      "offset": [
        14798,
        15001
      ],
      "op": "JUMP",
      "path": "8"
    },
    "928": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "929": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD88"
    },
    "932": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "jump": "i",
      "offset": [
        14798,
        15001
      ],
      "op": "JUMP",
      "path": "8"
    },
    "933": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "934": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "935": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "DUP1",
      "path": "8"
    },
    "936": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "937": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3B1"
    },
    "940": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "941": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "943": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "DUP1",
      "path": "8"
    },
    "944": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "REVERT",
      "path": "8"
    },
    "945": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "946": {
      "op": "POP"
    },
    "947": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "950": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3C0"
    },
    "953": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "954": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "956": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F38"
    },
    "959": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "jump": "i",
      "offset": [
        20483,
        21018
      ],
      "op": "JUMP",
      "path": "8"
    },
    "960": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "961": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD96"
    },
    "964": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "jump": "i",
      "offset": [
        20483,
        21018
      ],
      "op": "JUMP",
      "path": "8"
    },
    "965": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        10993,
        11209
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "966": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        10993,
        11209
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "969": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        10993,
        11209
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3D3"
    },
    "972": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        10993,
        11209
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "973": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        10993,
        11209
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "975": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        10993,
        11209
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F38"
    },
    "978": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "jump": "i",
      "offset": [
        10993,
        11209
      ],
      "op": "JUMP",
      "path": "8"
    },
    "979": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        10993,
        11209
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "980": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        10993,
        11209
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE68"
    },
    "983": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "jump": "i",
      "offset": [
        10993,
        11209
      ],
      "op": "JUMP",
      "path": "8"
    },
    "984": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "985": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "986": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "DUP1",
      "path": "1"
    },
    "987": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "988": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E4"
    },
    "991": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "992": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "994": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "DUP1",
      "path": "1"
    },
    "995": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "REVERT",
      "path": "1"
    },
    "996": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "997": {
      "op": "POP"
    },
    "998": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "1001": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F3"
    },
    "1004": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1005": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1007": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F73"
    },
    "1010": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1011": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1012": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE76"
    },
    "1015": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1016": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1017": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1018": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1019": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1020": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x404"
    },
    "1023": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1024": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1026": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1027": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1028": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1029": {
      "op": "POP"
    },
    "1030": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x332"
    },
    "1033": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x413"
    },
    "1036": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1037": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1039": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2FC5"
    },
    "1042": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "jump": "i",
      "offset": [
        4866,
        5192
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1043": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1044": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE9A"
    },
    "1047": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "jump": "i",
      "offset": [
        4866,
        5192
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1048": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1049": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1050": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1051": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1052": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x424"
    },
    "1055": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1056": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1058": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1059": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1060": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1061": {
      "op": "POP"
    },
    "1062": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x332"
    },
    "1065": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x433"
    },
    "1068": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1069": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1071": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x307E"
    },
    "1074": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "jump": "i",
      "offset": [
        4461,
        4766
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1075": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1076": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF18"
    },
    "1079": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "jump": "i",
      "offset": [
        4461,
        4766
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1080": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1081": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1082": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1083": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1084": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x444"
    },
    "1087": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1088": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1090": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1091": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1092": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1093": {
      "op": "POP"
    },
    "1094": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "1097": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x453"
    },
    "1100": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1101": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1103": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F38"
    },
    "1106": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "jump": "i",
      "offset": [
        19786,
        20083
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1107": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1108": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFC3"
    },
    "1111": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "jump": "i",
      "offset": [
        19786,
        20083
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1112": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1113": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1114": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1115": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1116": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x464"
    },
    "1119": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1120": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1122": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1123": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1124": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1128": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1129": {
      "fn": "ERC20.decimals",
      "offset": [
        3175,
        3177
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x12"
    },
    "1131": {
      "op": "DUP2"
    },
    "1132": {
      "op": "MSTORE"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1135": {
      "op": "ADD"
    },
    "1136": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x309"
    },
    "1139": {
      "op": "JUMP"
    },
    "1140": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1141": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1142": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1143": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1144": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x480"
    },
    "1147": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1148": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1150": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1151": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1152": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1153": {
      "op": "POP"
    },
    "1154": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "1157": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x48F"
    },
    "1160": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1161": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1163": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F38"
    },
    "1166": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "jump": "i",
      "offset": [
        18564,
        18953
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1167": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1168": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x104B"
    },
    "1171": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "jump": "i",
      "offset": [
        18564,
        18953
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1172": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1173": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1174": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1175": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1176": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A0"
    },
    "1179": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1180": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1182": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1183": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1184": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "1189": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4AF"
    },
    "1192": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1193": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1195": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F0E"
    },
    "1198": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1199": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1200": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10DD"
    },
    "1203": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1204": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1205": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1206": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1207": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1208": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4C0"
    },
    "1211": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1212": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1214": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1215": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1216": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1217": {
      "op": "POP"
    },
    "1218": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D4"
    },
    "1221": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4CF"
    },
    "1224": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1225": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1227": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F38"
    },
    "1230": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "jump": "i",
      "offset": [
        21024,
        21505
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1231": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1232": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x111C"
    },
    "1235": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "jump": "i",
      "offset": [
        21024,
        21505
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1236": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1237": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1239": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1240": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1241": {
      "op": "SWAP3"
    },
    "1242": {
      "op": "DUP4"
    },
    "1243": {
      "op": "MSTORE"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1246": {
      "op": "DUP4"
    },
    "1247": {
      "op": "ADD"
    },
    "1248": {
      "op": "SWAP2"
    },
    "1249": {
      "op": "SWAP1"
    },
    "1250": {
      "op": "SWAP2"
    },
    "1251": {
      "op": "MSTORE"
    },
    "1252": {
      "op": "ADD"
    },
    "1253": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x309"
    },
    "1256": {
      "op": "JUMP"
    },
    "1257": {
      "offset": [
        1233,
        1258
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1258": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1259": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1260": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1261": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4F5"
    },
    "1264": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1265": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1267": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1268": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1269": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1270": {
      "op": "POP"
    },
    "1271": {
      "offset": [
        1233,
        1258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "1273": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1274": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x509"
    },
    "1277": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1284": {
      "op": "SHL"
    },
    "1285": {
      "op": "SUB"
    },
    "1286": {
      "offset": [
        1233,
        1258
      ],
      "op": "AND",
      "path": "8"
    },
    "1287": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1288": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1289": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1290": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1292": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        1233,
        1258
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1299": {
      "op": "SHL"
    },
    "1300": {
      "op": "SUB"
    },
    "1301": {
      "op": "SWAP1"
    },
    "1302": {
      "op": "SWAP2"
    },
    "1303": {
      "op": "AND"
    },
    "1304": {
      "op": "DUP2"
    },
    "1305": {
      "op": "MSTORE"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1308": {
      "op": "ADD"
    },
    "1309": {
      "offset": [
        1233,
        1258
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x309"
    },
    "1312": {
      "op": "JUMP"
    },
    "1313": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1314": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1315": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1316": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1317": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x52D"
    },
    "1320": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1321": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1323": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1324": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1325": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1326": {
      "op": "POP"
    },
    "1327": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "1330": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x53C"
    },
    "1333": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1334": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1336": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x307E"
    },
    "1339": {
      "fn": "StakeFountain.txs",
      "jump": "i",
      "offset": [
        21511,
        21604
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1340": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1347": {
      "op": "SHL"
    },
    "1348": {
      "op": "SUB"
    },
    "1349": {
      "fn": "StakeFountain.txs",
      "offset": [
        21586,
        21597
      ],
      "op": "AND",
      "path": "8",
      "statement": 3
    },
    "1350": {
      "fn": "StakeFountain.txs",
      "offset": [
        21560,
        21567
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1352": {
      "fn": "StakeFountain.txs",
      "offset": [
        21586,
        21597
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1353": {
      "fn": "StakeFountain.txs",
      "offset": [
        21586,
        21597
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1354": {
      "fn": "StakeFountain.txs",
      "offset": [
        21586,
        21597
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1355": {
      "fn": "StakeFountain.txs",
      "offset": [
        21586,
        21590
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x11"
    },
    "1357": {
      "fn": "StakeFountain.txs",
      "offset": [
        21586,
        21597
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1359": {
      "fn": "StakeFountain.txs",
      "offset": [
        21586,
        21597
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1360": {
      "fn": "StakeFountain.txs",
      "offset": [
        21586,
        21597
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1362": {
      "fn": "StakeFountain.txs",
      "offset": [
        21586,
        21597
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1363": {
      "fn": "StakeFountain.txs",
      "offset": [
        21586,
        21597
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1364": {
      "fn": "StakeFountain.txs",
      "offset": [
        21586,
        21597
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1365": {
      "fn": "StakeFountain.txs",
      "offset": [
        21586,
        21597
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1366": {
      "fn": "StakeFountain.txs",
      "offset": [
        21511,
        21604
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1367": {
      "offset": [
        1265,
        1288
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1368": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1369": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1370": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1371": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x563"
    },
    "1374": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1375": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1377": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1378": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1379": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1380": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "POP",
      "path": "8"
    },
    "1381": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "1384": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xB"
    },
    "1386": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1387": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1388": {
      "fn": "StakeFountain.txs",
      "offset": [
        1265,
        1288
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1389": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1390": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1391": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1392": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1393": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x579"
    },
    "1396": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1397": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1399": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1400": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1401": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "1406": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x588"
    },
    "1409": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1410": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1412": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F38"
    },
    "1415": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "jump": "i",
      "offset": [
        19173,
        19576
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1416": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1417": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11E6"
    },
    "1420": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "jump": "i",
      "offset": [
        19173,
        19576
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1421": {
      "offset": [
        1178,
        1201
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1422": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1178,
        1201
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1423": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1178,
        1201
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1424": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1178,
        1201
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1425": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1178,
        1201
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x599"
    },
    "1428": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1178,
        1201
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1429": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1178,
        1201
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1431": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1178,
        1201
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1432": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1178,
        1201
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1433": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1178,
        1201
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1434": {
      "op": "POP"
    },
    "1435": {
      "offset": [
        1178,
        1201
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "1437": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1178,
        1201
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1438": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1178,
        1201
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x509"
    },
    "1441": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1178,
        1201
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1448": {
      "op": "SHL"
    },
    "1449": {
      "op": "SUB"
    },
    "1450": {
      "offset": [
        1178,
        1201
      ],
      "op": "AND",
      "path": "8"
    },
    "1451": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1178,
        1201
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1452": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1178,
        1201
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1453": {
      "offset": [
        1294,
        1321
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1454": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1455": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1456": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1457": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5B9"
    },
    "1460": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1461": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1463": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1464": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1465": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1466": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "POP",
      "path": "8"
    },
    "1467": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "1470": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xC"
    },
    "1472": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1473": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1474": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        1294,
        1321
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1475": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1476": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1477": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1478": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1479": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5CF"
    },
    "1482": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1483": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1485": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1486": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1487": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1488": {
      "op": "POP"
    },
    "1489": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x362"
    },
    "1492": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5DE"
    },
    "1495": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1496": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1498": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x307E"
    },
    "1501": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1502": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1509": {
      "op": "SHL"
    },
    "1510": {
      "op": "SUB"
    },
    "1511": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "AND",
      "path": "1",
      "statement": 4
    },
    "1512": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1514": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1515": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1516": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1517": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1519": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1520": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1521": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1522": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1524": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1525": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1526": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1527": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1528": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1529": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1530": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1531": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1532": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1533": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x605"
    },
    "1536": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1537": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1539": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1540": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1541": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1542": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1543": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60E"
    },
    "1546": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A4"
    },
    "1549": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1550": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1551": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "1552": {
      "offset": [
        1455,
        1497
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1553": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1554": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1555": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1556": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x61C"
    },
    "1559": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1560": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1562": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1563": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1564": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1565": {
      "op": "POP"
    },
    "1566": {
      "offset": [
        1455,
        1497
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x332"
    },
    "1569": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x62B"
    },
    "1572": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1573": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1575": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x307E"
    },
    "1578": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1455,
        1497
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1579": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1580": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x10"
    },
    "1582": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1584": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1585": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1587": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1588": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1589": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1590": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1592": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1593": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1594": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1595": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "1597": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "AND",
      "path": "8"
    },
    "1598": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1599": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1455,
        1497
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1600": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1601": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1602": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1603": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1604": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x64C"
    },
    "1607": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1608": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1610": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1611": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1612": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1613": {
      "op": "POP"
    },
    "1614": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x332"
    },
    "1617": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x65B"
    },
    "1620": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1621": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1623": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x307E"
    },
    "1626": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "jump": "i",
      "offset": [
        3678,
        3952
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1627": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1628": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12DA"
    },
    "1631": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "jump": "i",
      "offset": [
        3678,
        3952
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1632": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1633": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1634": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1635": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1636": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x66C"
    },
    "1639": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1640": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1642": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1643": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1644": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1645": {
      "op": "POP"
    },
    "1646": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D4"
    },
    "1649": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x67B"
    },
    "1652": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1653": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1655": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3099"
    },
    "1658": {
      "fn": "StakeFountain.removeLiquidity",
      "jump": "i",
      "offset": [
        24345,
        25309
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1659": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1660": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x137B"
    },
    "1663": {
      "fn": "StakeFountain.removeLiquidity",
      "jump": "i",
      "offset": [
        24345,
        25309
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1664": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1665": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1666": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1667": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1668": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x68C"
    },
    "1671": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1672": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1674": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1675": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1676": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1677": {
      "op": "POP"
    },
    "1678": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "1681": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x69B"
    },
    "1684": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1685": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1687": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3099"
    },
    "1690": {
      "fn": "StakeFountain.getInputPrice",
      "jump": "i",
      "offset": [
        5915,
        6308
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1691": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1692": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15B9"
    },
    "1695": {
      "fn": "StakeFountain.getInputPrice",
      "jump": "i",
      "offset": [
        5915,
        6308
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1696": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1697": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1698": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1699": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1700": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AC"
    },
    "1703": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1704": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1706": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1707": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1708": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1709": {
      "op": "POP"
    },
    "1710": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x5"
    },
    "1712": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1719": {
      "op": "SHL"
    },
    "1720": {
      "op": "SUB"
    },
    "1721": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1722": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x509"
    },
    "1725": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1726": {
      "offset": [
        1143,
        1172
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1727": {
      "fn": "Ownable.owner",
      "offset": [
        1143,
        1172
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1728": {
      "fn": "Ownable.owner",
      "offset": [
        1143,
        1172
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1729": {
      "fn": "Ownable.owner",
      "offset": [
        1143,
        1172
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1730": {
      "fn": "Ownable.owner",
      "offset": [
        1143,
        1172
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6CA"
    },
    "1733": {
      "fn": "Ownable.owner",
      "offset": [
        1143,
        1172
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1734": {
      "fn": "Ownable.owner",
      "offset": [
        1143,
        1172
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1736": {
      "fn": "Ownable.owner",
      "offset": [
        1143,
        1172
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1737": {
      "fn": "Ownable.owner",
      "offset": [
        1143,
        1172
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1738": {
      "fn": "Ownable.owner",
      "offset": [
        1143,
        1172
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1739": {
      "op": "POP"
    },
    "1740": {
      "offset": [
        1143,
        1172
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "1742": {
      "fn": "Ownable.owner",
      "offset": [
        1143,
        1172
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1743": {
      "fn": "Ownable.owner",
      "offset": [
        1143,
        1172
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x509"
    },
    "1746": {
      "fn": "Ownable.owner",
      "offset": [
        1143,
        1172
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "op": "SUB"
    },
    "1755": {
      "offset": [
        1143,
        1172
      ],
      "op": "AND",
      "path": "8"
    },
    "1756": {
      "fn": "Ownable.owner",
      "offset": [
        1143,
        1172
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1757": {
      "fn": "Ownable.owner",
      "offset": [
        1143,
        1172
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1758": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1759": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1760": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1761": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1762": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6EA"
    },
    "1765": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1766": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1768": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1769": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1770": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1771": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "POP",
      "path": "1"
    },
    "1772": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FC"
    },
    "1775": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1636"
    },
    "1778": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1779": {
      "offset": [
        1408,
        1449
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1780": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1781": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1782": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1783": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6FF"
    },
    "1786": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1787": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1789": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1790": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1791": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1792": {
      "op": "POP"
    },
    "1793": {
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x332"
    },
    "1796": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x70E"
    },
    "1799": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1800": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1802": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x307E"
    },
    "1805": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        1408,
        1449
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1806": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1807": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "1809": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1811": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1812": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1814": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1815": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1816": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1817": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1819": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1820": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1821": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1822": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "1824": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "AND",
      "path": "8"
    },
    "1825": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1826": {
      "fn": "ERC20.symbol",
      "offset": [
        1408,
        1449
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1827": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22077,
        24056
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1828": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22077,
        24056
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "1831": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22077,
        24056
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x731"
    },
    "1834": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22077,
        24056
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1835": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22077,
        24056
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1837": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22077,
        24056
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F51"
    },
    "1840": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        22077,
        24056
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1841": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22077,
        24056
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1842": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22077,
        24056
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1645"
    },
    "1845": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        22077,
        24056
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1846": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20168,
        20260
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1847": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20168,
        20260
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1848": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20168,
        20260
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1849": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20168,
        20260
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1850": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20168,
        20260
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x742"
    },
    "1853": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20168,
        20260
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1854": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20168,
        20260
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1856": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20168,
        20260
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1857": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20168,
        20260
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1858": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20168,
        20260
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1859": {
      "op": "POP"
    },
    "1860": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20247,
        20252
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 6,
      "value": "0x6"
    },
    "1862": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20247,
        20252
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1869": {
      "op": "SHL"
    },
    "1870": {
      "op": "SUB"
    },
    "1871": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20247,
        20252
      ],
      "op": "AND",
      "path": "8"
    },
    "1872": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20168,
        20260
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x509"
    },
    "1875": {
      "fn": "StakeFountain.tokenAddress",
      "offset": [
        20168,
        20260
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1876": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1877": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1878": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1879": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1880": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x760"
    },
    "1883": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1884": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1886": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1887": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1888": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1889": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "POP",
      "path": "8"
    },
    "1890": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "1893": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A62"
    },
    "1896": {
      "fn": "StakeFountain.tokenBalance",
      "jump": "i",
      "offset": [
        20369,
        20477
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1897": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1898": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1899": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1900": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1901": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x775"
    },
    "1904": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1905": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1907": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1908": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1909": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1910": {
      "op": "POP"
    },
    "1911": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x60E"
    },
    "1914": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x784"
    },
    "1917": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1918": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1920": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x307E"
    },
    "1923": {
      "fn": "StakeFountain.setLock",
      "jump": "i",
      "offset": [
        3307,
        3404
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1924": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1925": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1AD4"
    },
    "1928": {
      "fn": "StakeFountain.setLock",
      "jump": "i",
      "offset": [
        3307,
        3404
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1929": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1930": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1931": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1932": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1933": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x795"
    },
    "1936": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1937": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1939": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1940": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1941": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1942": {
      "op": "POP"
    },
    "1943": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "1946": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A4"
    },
    "1949": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1950": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1952": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F0E"
    },
    "1955": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1956": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1957": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B20"
    },
    "1960": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1961": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1962": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1963": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1964": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1965": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7B5"
    },
    "1968": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1969": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1971": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1972": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1973": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1974": {
      "op": "POP"
    },
    "1975": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "1978": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C4"
    },
    "1981": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1982": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1984": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F0E"
    },
    "1987": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1988": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1989": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BB2"
    },
    "1992": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1993": {
      "offset": [
        1549,
        1576
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1994": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1995": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1996": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1997": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7D5"
    },
    "2000": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2001": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2003": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2004": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2005": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "offset": [
        1549,
        1576
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x12"
    },
    "2009": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2010": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x332"
    },
    "2013": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2014": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "2016": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "AND",
      "path": "8"
    },
    "2017": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2018": {
      "fn": "ERC20.transfer",
      "offset": [
        1549,
        1576
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2019": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        8947,
        9143
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2020": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        8947,
        9143
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "2023": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        8947,
        9143
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7F1"
    },
    "2026": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        8947,
        9143
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "2027": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        8947,
        9143
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2029": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        8947,
        9143
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F38"
    },
    "2032": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "jump": "i",
      "offset": [
        8947,
        9143
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2033": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        8947,
        9143
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2034": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        8947,
        9143
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1BC0"
    },
    "2037": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "jump": "i",
      "offset": [
        8947,
        9143
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2038": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20266,
        20363
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2039": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20266,
        20363
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "2040": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20266,
        20363
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2041": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20266,
        20363
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2042": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20266,
        20363
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x802"
    },
    "2045": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20266,
        20363
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2046": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20266,
        20363
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2048": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20266,
        20363
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2049": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20266,
        20363
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2050": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20266,
        20363
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2051": {
      "op": "POP"
    },
    "2052": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20335,
        20356
      ],
      "op": "SELFBALANCE",
      "path": "8",
      "statement": 7
    },
    "2053": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20266,
        20363
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "2056": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20266,
        20363
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2057": {
      "offset": [
        1503,
        1542
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2058": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "2059": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2060": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2061": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x815"
    },
    "2064": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2065": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2067": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2068": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2069": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2070": {
      "op": "POP"
    },
    "2071": {
      "offset": [
        1503,
        1542
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "2074": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x824"
    },
    "2077": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "2078": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2080": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x307E"
    },
    "2083": {
      "fn": "StakeFountain.bnbBalance",
      "jump": "i",
      "offset": [
        1503,
        1542
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2084": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2085": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x11"
    },
    "2087": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2089": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2090": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2092": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2093": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2094": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2095": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2097": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2098": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2099": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2100": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2101": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        1503,
        1542
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2102": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2103": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2104": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2105": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2106": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x842"
    },
    "2109": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2110": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2112": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2113": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2114": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2115": {
      "op": "POP"
    },
    "2116": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x362"
    },
    "2119": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x851"
    },
    "2122": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2123": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2125": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C5"
    },
    "2128": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2129": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2136": {
      "op": "SHL"
    },
    "2137": {
      "op": "SUB"
    },
    "2138": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 8
    },
    "2139": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2140": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "1"
    },
    "2141": {
      "fn": "ERC20.allowance",
      "offset": [
        4065,
        4072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2143": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2144": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2145": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2146": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2148": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2150": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2151": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2152": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2153": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2155": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2156": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2157": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2158": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2159": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2160": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2161": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "1"
    },
    "2162": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2163": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2164": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2165": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2166": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2167": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2168": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2169": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2170": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2171": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2172": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2173": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "2174": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2175": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2176": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x888"
    },
    "2179": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2180": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2182": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2183": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2184": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2185": {
      "op": "POP"
    },
    "2186": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x332"
    },
    "2189": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x897"
    },
    "2192": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "2193": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2195": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2FC5"
    },
    "2198": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "jump": "i",
      "offset": [
        4047,
        4363
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2199": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2200": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1BCE"
    },
    "2203": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "jump": "i",
      "offset": [
        4047,
        4363
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2204": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2205": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2206": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2207": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2208": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A8"
    },
    "2211": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2212": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2214": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2217": {
      "op": "POP"
    },
    "2218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60E"
    },
    "2221": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B7"
    },
    "2224": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2227": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x307E"
    },
    "2230": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2231": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2232": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C45"
    },
    "2235": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2236": {
      "offset": [
        1377,
        1401
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2237": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "2238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2239": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2240": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8C8"
    },
    "2243": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2244": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2246": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2247": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2248": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2249": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "POP",
      "path": "8"
    },
    "2250": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "2253": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE"
    },
    "2255": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2256": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2257": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1377,
        1401
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2258": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2259": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "2260": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2261": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2262": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8DE"
    },
    "2265": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2266": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2268": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2269": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2270": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2271": {
      "op": "POP"
    },
    "2272": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "2275": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8ED"
    },
    "2278": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "2279": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2281": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F51"
    },
    "2284": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "jump": "i",
      "offset": [
        13194,
        13391
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2285": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2286": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CE0"
    },
    "2289": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "jump": "i",
      "offset": [
        13194,
        13391
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2290": {
      "offset": [
        1207,
        1227
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2291": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1207,
        1227
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "2292": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2293": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1207,
        1227
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2294": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1207,
        1227
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8FE"
    },
    "2297": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1207,
        1227
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2298": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1207,
        1227
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2300": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2301": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1207,
        1227
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2302": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1207,
        1227
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2303": {
      "op": "POP"
    },
    "2304": {
      "offset": [
        1207,
        1227
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "2306": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1207,
        1227
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2307": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1207,
        1227
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x509"
    },
    "2310": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1207,
        1227
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2317": {
      "op": "SHL"
    },
    "2318": {
      "op": "SUB"
    },
    "2319": {
      "offset": [
        1207,
        1227
      ],
      "op": "AND",
      "path": "8"
    },
    "2320": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2321": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1207,
        1227
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2322": {
      "offset": [
        1075,
        1098
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2323": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1075,
        1098
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "2324": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1075,
        1098
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2325": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1075,
        1098
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2326": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1075,
        1098
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x91E"
    },
    "2329": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1075,
        1098
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2330": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1075,
        1098
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2332": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1075,
        1098
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2333": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1075,
        1098
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2334": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1075,
        1098
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2335": {
      "op": "POP"
    },
    "2336": {
      "offset": [
        1075,
        1098
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "2338": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1075,
        1098
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2339": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1075,
        1098
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x509"
    },
    "2342": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1075,
        1098
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2349": {
      "op": "SHL"
    },
    "2350": {
      "op": "SUB"
    },
    "2351": {
      "offset": [
        1075,
        1098
      ],
      "op": "AND",
      "path": "8"
    },
    "2352": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1075,
        1098
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2353": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1075,
        1098
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2354": {
      "offset": [
        1327,
        1371
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2355": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "2356": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2357": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2358": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x93E"
    },
    "2361": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2362": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2364": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2365": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2366": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2367": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "POP",
      "path": "8"
    },
    "2368": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "2371": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xD"
    },
    "2373": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2374": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2375": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        1327,
        1371
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2376": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2377": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "2378": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2379": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2380": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x954"
    },
    "2383": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2384": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2386": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2387": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2388": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2389": {
      "op": "POP"
    },
    "2390": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x362"
    },
    "2393": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x963"
    },
    "2396": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "2397": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2399": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3099"
    },
    "2402": {
      "fn": "StakeFountain.getOutputPrice",
      "jump": "i",
      "offset": [
        6696,
        7084
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2403": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2404": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CEE"
    },
    "2407": {
      "fn": "StakeFountain.getOutputPrice",
      "jump": "i",
      "offset": [
        6696,
        7084
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2408": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7478,
        8709
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2409": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7634,
        7641
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2411": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7673,
        7674
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 9
    },
    "2412": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7661,
        7670
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2413": {
      "branch": 169,
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7661,
        7674
      ],
      "op": "GT",
      "path": "8"
    },
    "2414": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7661,
        7693
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2415": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7661,
        7693
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2416": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7661,
        7693
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x979"
    },
    "2419": {
      "branch": 169,
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7661,
        7693
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2420": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7661,
        7693
      ],
      "op": "POP",
      "path": "8"
    },
    "2421": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7692,
        7693
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2423": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7678,
        7689
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2424": {
      "branch": 170,
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7678,
        7693
      ],
      "op": "GT",
      "path": "8"
    },
    "2425": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7661,
        7693
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2426": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9BB"
    },
    "2429": {
      "branch": 170,
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2430": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2432": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2433": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2439": {
      "op": "SHL"
    },
    "2440": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2441": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2444": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2446": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2447": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "ADD",
      "path": "8"
    },
    "2448": {
      "op": "MSTORE"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2453": {
      "op": "DUP3"
    },
    "2454": {
      "op": "ADD"
    },
    "2455": {
      "op": "MSTORE"
    },
    "2456": {
      "op": "PUSH14",
      "value": "0x736F6C6420616E64206D696E203"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "2473": {
      "op": "SHL"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2476": {
      "op": "DUP3"
    },
    "2477": {
      "op": "ADD"
    },
    "2478": {
      "op": "MSTORE"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2481": {
      "op": "ADD"
    },
    "2482": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2483": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2485": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2486": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2487": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2488": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "SUB",
      "path": "8"
    },
    "2489": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2490": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "8"
    },
    "2491": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7653,
        7712
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2492": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7807
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "2494": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7807
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2495": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2497": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2498": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2505": {
      "op": "SHL"
    },
    "2506": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2507": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2508": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7826,
        7830
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "2509": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2511": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2512": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "ADD",
      "path": "8"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7722,
        7738
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2516": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7722,
        7738
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2517": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7722,
        7738
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2518": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7722,
        7738
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2519": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7722,
        7738
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2520": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7722,
        7738
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2527": {
      "op": "SHL"
    },
    "2528": {
      "op": "SUB"
    },
    "2529": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7807
      ],
      "op": "AND",
      "path": "8"
    },
    "2530": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7807
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2531": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7817
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "2536": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7817
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2539": {
      "op": "ADD"
    },
    "2540": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2542": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2544": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2545": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2546": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2547": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "SUB",
      "path": "8"
    },
    "2548": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2549": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "DUP7",
      "path": "8"
    },
    "2550": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "GAS",
      "path": "8"
    },
    "2551": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "2552": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2553": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2554": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2555": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA08"
    },
    "2558": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2559": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2560": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2562": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2563": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2564": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2565": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2567": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2568": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2569": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "POP",
      "path": "8"
    },
    "2570": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "POP",
      "path": "8"
    },
    "2571": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "POP",
      "path": "8"
    },
    "2572": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "POP",
      "path": "8"
    },
    "2573": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2575": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2576": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2577": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2579": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "NOT",
      "path": "8"
    },
    "2580": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2582": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2583": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "ADD",
      "path": "8"
    },
    "2584": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "AND",
      "path": "8"
    },
    "2585": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2586": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "ADD",
      "path": "8"
    },
    "2587": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2588": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2590": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2591": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "POP",
      "path": "8"
    },
    "2592": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2593": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "ADD",
      "path": "8"
    },
    "2594": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2595": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA2C"
    },
    "2598": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2599": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2600": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30F8"
    },
    "2603": {
      "fn": "StakeFountain.bnbToTokenInput",
      "jump": "i",
      "offset": [
        7802,
        7832
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2604": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7802,
        7832
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2611": {
      "op": "SHL"
    },
    "2612": {
      "op": "SUB"
    },
    "2613": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7917
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2614": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7917
      ],
      "op": "AND",
      "path": "8"
    },
    "2615": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7842,
        7861
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2617": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7917
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2618": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7917
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2619": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7917
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2620": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7909
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "2622": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7917
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2624": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7917
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2625": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7917
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2627": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7917
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2628": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7917
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2629": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7917
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2630": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7778,
        7832
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2631": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7778,
        7832
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2632": {
      "op": "POP"
    },
    "2633": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7864,
        7885
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "2634": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7864,
        7885
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2635": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7917
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "2637": {
      "branch": 171,
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7917
      ],
      "op": "AND",
      "path": "8"
    },
    "2638": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7942
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2639": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7942
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2640": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7942
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA71"
    },
    "2643": {
      "branch": 171,
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7942
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2644": {
      "op": "POP"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2651": {
      "op": "SHL"
    },
    "2652": {
      "op": "SUB"
    },
    "2653": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7942
      ],
      "op": "DUP7",
      "path": "8"
    },
    "2654": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7942
      ],
      "op": "AND",
      "path": "8"
    },
    "2655": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7942
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2657": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7942
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2658": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7942
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2659": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7942
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2660": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7930
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "2662": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7942
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2664": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7942
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2665": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7942
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2667": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7942
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2668": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7942
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2669": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7942
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2670": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7942
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "2672": {
      "branch": 172,
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7921,
        7942
      ],
      "op": "AND",
      "path": "8"
    },
    "2673": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7900,
        7942
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2674": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7896,
        8104
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2675": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7896,
        8104
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA7E"
    },
    "2678": {
      "branch": 172,
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7896,
        8104
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2679": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7969,
        7978
      ],
      "op": "DUP9",
      "path": "8",
      "statement": 10
    },
    "2680": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7958,
        7978
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2681": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7958,
        7978
      ],
      "op": "POP",
      "path": "8"
    },
    "2682": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7896,
        8104
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAA4"
    },
    "2685": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7896,
        8104
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2686": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7896,
        8104
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2687": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8041,
        8044
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 11,
      "value": "0x64"
    },
    "2689": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8025,
        8037
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA8B"
    },
    "2692": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8029,
        8037
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2693": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8025,
        8026
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2695": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8025,
        8037
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "2698": {
      "fn": "StakeFountain.bnbToTokenInput",
      "jump": "i",
      "offset": [
        8025,
        8037
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2699": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8025,
        8037
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2700": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8024,
        8044
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA95"
    },
    "2703": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8024,
        8044
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2704": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8024,
        8044
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2705": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8024,
        8044
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "2708": {
      "fn": "StakeFountain.bnbToTokenInput",
      "jump": "i",
      "offset": [
        8024,
        8044
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2709": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8024,
        8044
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2710": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8009,
        8044
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2711": {
      "op": "POP"
    },
    "2712": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 12,
      "value": "0xAA1"
    },
    "2715": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8009,
        8044
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2716": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8069,
        8078
      ],
      "op": "DUP11",
      "path": "8"
    },
    "2717": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3168"
    },
    "2720": {
      "fn": "StakeFountain.bnbToTokenInput",
      "jump": "i",
      "offset": [
        8069,
        8093
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2721": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8069,
        8093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2722": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8058,
        8093
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2723": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8058,
        8093
      ],
      "op": "POP",
      "path": "8"
    },
    "2724": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7896,
        8104
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2725": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8113,
        8134
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2727": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8137,
        8245
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xABA"
    },
    "2730": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8164,
        8172
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2731": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8186,
        8208
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAB4"
    },
    "2734": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8164,
        8172
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2735": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8186,
        8197
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2736": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8186,
        8208
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3168"
    },
    "2739": {
      "fn": "StakeFountain.bnbToTokenInput",
      "jump": "i",
      "offset": [
        8186,
        8208
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2740": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8186,
        8208
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2741": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8222,
        8235
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2742": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8137,
        8150
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15B9"
    },
    "2745": {
      "fn": "StakeFountain.bnbToTokenInput",
      "jump": "i",
      "offset": [
        8137,
        8245
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2746": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8137,
        8245
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2747": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8113,
        8245
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2748": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8113,
        8245
      ],
      "op": "POP",
      "path": "8"
    },
    "2749": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8281,
        8292
      ],
      "op": "DUP9",
      "path": "8",
      "statement": 13
    },
    "2750": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8264,
        8277
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2751": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8264,
        8292
      ],
      "op": "LT",
      "path": "8"
    },
    "2752": {
      "branch": 173,
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8264,
        8292
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2753": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8256,
        8324
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB0C"
    },
    "2756": {
      "branch": 173,
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8256,
        8324
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2757": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8256,
        8324
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2759": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8256,
        8324
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2766": {
      "op": "SHL"
    },
    "2767": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8256,
        8324
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2768": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8256,
        8324
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2771": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8256,
        8324
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2773": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8256,
        8324
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2774": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8256,
        8324
      ],
      "op": "ADD",
      "path": "8"
    },
    "2775": {
      "op": "MSTORE"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2780": {
      "op": "DUP3"
    },
    "2781": {
      "op": "ADD"
    },
    "2782": {
      "op": "MSTORE"
    },
    "2783": {
      "op": "PUSH32",
      "value": "0x746F6B656E735F626F75676874203E3D206D696E5F746F6B656E730000000000"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2818": {
      "op": "DUP3"
    },
    "2819": {
      "op": "ADD"
    },
    "2820": {
      "op": "MSTORE"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2823": {
      "op": "ADD"
    },
    "2824": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8256,
        8324
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9B2"
    },
    "2827": {
      "op": "JUMP"
    },
    "2828": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8256,
        8324
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2829": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8413
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 14,
      "value": "0x6"
    },
    "2831": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8413
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2832": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2834": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2835": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2842": {
      "op": "SHL"
    },
    "2843": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2844": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2851": {
      "op": "SHL"
    },
    "2852": {
      "op": "SUB"
    },
    "2853": {
      "op": "DUP10"
    },
    "2854": {
      "op": "DUP2"
    },
    "2855": {
      "op": "AND"
    },
    "2856": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2858": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2859": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "ADD",
      "path": "8"
    },
    "2860": {
      "op": "MSTORE"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2863": {
      "op": "DUP3"
    },
    "2864": {
      "op": "ADD"
    },
    "2865": {
      "op": "DUP5"
    },
    "2866": {
      "op": "SWAP1"
    },
    "2867": {
      "op": "MSTORE"
    },
    "2868": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8413
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2869": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8413
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2870": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8413
      ],
      "op": "AND",
      "path": "8"
    },
    "2871": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8413
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2872": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8422
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "2877": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8422
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2880": {
      "op": "ADD"
    },
    "2881": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2883": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2885": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2886": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2887": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2888": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "SUB",
      "path": "8"
    },
    "2889": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2890": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2892": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2893": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "GAS",
      "path": "8"
    },
    "2894": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "CALL",
      "path": "8"
    },
    "2895": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2896": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2897": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2898": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB5F"
    },
    "2901": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2902": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2903": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2905": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2906": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2907": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2908": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2910": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2911": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2912": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "POP",
      "path": "8"
    },
    "2913": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "POP",
      "path": "8"
    },
    "2914": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "POP",
      "path": "8"
    },
    "2915": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "POP",
      "path": "8"
    },
    "2916": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2918": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2919": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2920": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2922": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "NOT",
      "path": "8"
    },
    "2923": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2925": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2926": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "ADD",
      "path": "8"
    },
    "2927": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "AND",
      "path": "8"
    },
    "2928": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2929": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "ADD",
      "path": "8"
    },
    "2930": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2931": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2933": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2934": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "POP",
      "path": "8"
    },
    "2935": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2936": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "ADD",
      "path": "8"
    },
    "2937": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2938": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB83"
    },
    "2941": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2942": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2943": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x317F"
    },
    "2946": {
      "fn": "StakeFountain.bnbToTokenInput",
      "jump": "i",
      "offset": [
        8408,
        8449
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2947": {
      "branch": 174,
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8408,
        8449
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2948": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8400,
        8466
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBBE"
    },
    "2951": {
      "branch": 174,
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8400,
        8466
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2952": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8400,
        8466
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2954": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8400,
        8466
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2955": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2961": {
      "op": "SHL"
    },
    "2962": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8400,
        8466
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2963": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8400,
        8466
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2966": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8400,
        8466
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2968": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8400,
        8466
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2969": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8400,
        8466
      ],
      "op": "ADD",
      "path": "8"
    },
    "2970": {
      "op": "MSTORE"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2975": {
      "op": "DUP3"
    },
    "2976": {
      "op": "ADD"
    },
    "2977": {
      "op": "MSTORE"
    },
    "2978": {
      "op": "PUSH12",
      "value": "0x3A3930B739B332B91032B939"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2993": {
      "op": "SHL"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2996": {
      "op": "DUP3"
    },
    "2997": {
      "op": "ADD"
    },
    "2998": {
      "op": "MSTORE"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3001": {
      "op": "ADD"
    },
    "3002": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8400,
        8466
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9B2"
    },
    "3005": {
      "op": "JUMP"
    },
    "3006": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8400,
        8466
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3007": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8480,
        8496
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3008": {
      "branch": 175,
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8480,
        8496
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3009": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8476,
        8531
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBCD"
    },
    "3012": {
      "branch": 175,
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8476,
        8531
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3013": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8498,
        8531
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 15,
      "value": "0xBCD"
    },
    "3016": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8518,
        8530
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3017": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8498,
        8517
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D39"
    },
    "3020": {
      "fn": "StakeFountain.bnbToTokenInput",
      "jump": "i",
      "offset": [
        8498,
        8531
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3021": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8498,
        8531
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3022": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8582,
        8595
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 16
    },
    "3023": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8571,
        8580
      ],
      "op": "DUP11",
      "path": "8"
    },
    "3024": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8563,
        8569
      ],
      "op": "DUP10",
      "path": "8"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3031": {
      "op": "SHL"
    },
    "3032": {
      "op": "SUB"
    },
    "3033": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8547,
        8596
      ],
      "op": "AND",
      "path": "8"
    },
    "3034": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8547,
        8596
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x7F743FB741E07B0C4DAEB2AF54FB3EBFA2BDB31D9913A0E555661C870411AAE5"
    },
    "3067": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8547,
        8596
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3069": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8547,
        8596
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3070": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8547,
        8596
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3072": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8547,
        8596
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3073": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8547,
        8596
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3074": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8547,
        8596
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3075": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8547,
        8596
      ],
      "op": "SUB",
      "path": "8"
    },
    "3076": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8547,
        8596
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3077": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8547,
        8596
      ],
      "op": "LOG4",
      "path": "8"
    },
    "3078": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8611,
        8642
      ],
      "op": "PUSH32",
      "path": "8",
      "statement": 17,
      "value": "0x75F52E89B275BDAED7CEB1586A0C5AC0503A27A09EA92F74DD81DB37FA840282"
    },
    "3111": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20335,
        20356
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "3112": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8611,
        8642
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3114": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8611,
        8642
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3115": {
      "op": "SWAP1"
    },
    "3116": {
      "op": "DUP2"
    },
    "3117": {
      "op": "MSTORE"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3120": {
      "op": "ADD"
    },
    "3121": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8611,
        8642
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3123": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8611,
        8642
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3124": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8611,
        8642
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3125": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8611,
        8642
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3126": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8611,
        8642
      ],
      "op": "SUB",
      "path": "8"
    },
    "3127": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8611,
        8642
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3128": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8611,
        8642
      ],
      "op": "LOG1",
      "path": "8"
    },
    "3129": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8653,
        8671
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 18,
      "value": "0xC40"
    },
    "3132": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8653,
        8669
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DDD"
    },
    "3135": {
      "fn": "StakeFountain.bnbToTokenInput",
      "jump": "i",
      "offset": [
        8653,
        8671
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3136": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8653,
        8671
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3137": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        8689,
        8702
      ],
      "op": "SWAP10",
      "path": "8",
      "statement": 19
    },
    "3138": {
      "fn": "StakeFountain.bnbToTokenInput",
      "offset": [
        7478,
        8709
      ],
      "op": "SWAP9",
      "path": "8"
    },
    "3139": {
      "op": "POP"
    },
    "3140": {
      "op": "POP"
    },
    "3141": {
      "op": "POP"
    },
    "3142": {
      "op": "POP"
    },
    "3143": {
      "op": "POP"
    },
    "3144": {
      "op": "POP"
    },
    "3145": {
      "op": "POP"
    },
    "3146": {
      "op": "POP"
    },
    "3147": {
      "op": "POP"
    },
    "3148": {
      "fn": "StakeFountain.bnbToTokenInput",
      "jump": "o",
      "offset": [
        7478,
        8709
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3149": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3150": {
      "fn": "ERC20.name",
      "offset": [
        2210,
        2223
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3152": {
      "fn": "ERC20.name",
      "offset": [
        2242,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 20,
      "value": "0x3"
    },
    "3154": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3155": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3156": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC5C"
    },
    "3159": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3160": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31A1"
    },
    "3163": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3164": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3165": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3166": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3168": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "3169": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3171": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3172": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3173": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "1"
    },
    "3174": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "1"
    },
    "3175": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3177": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "3178": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3180": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3181": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3182": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3183": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "3184": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3186": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3187": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3188": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3189": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3190": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3191": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3192": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3193": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3194": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3196": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "3197": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3198": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3199": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3200": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC88"
    },
    "3203": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3204": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31A1"
    },
    "3207": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3208": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3209": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3210": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3211": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCD5"
    },
    "3214": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3215": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3216": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3218": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "LT",
      "path": "1"
    },
    "3219": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCAA"
    },
    "3222": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3223": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3226": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3227": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3228": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3229": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "1"
    },
    "3230": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "1"
    },
    "3231": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3232": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3233": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3234": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3236": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "3237": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3238": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCD5"
    },
    "3241": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3242": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3243": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3244": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "3245": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3246": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3247": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3249": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3250": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3252": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3254": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3255": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3256": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3257": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3258": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3259": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3260": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3261": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3262": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3264": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "3265": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3266": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3268": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "3269": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3270": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3271": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "GT",
      "path": "1"
    },
    "3272": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCB8"
    },
    "3275": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3276": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3277": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3278": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SUB",
      "path": "1"
    },
    "3279": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3281": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "AND",
      "path": "1"
    },
    "3282": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3283": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "3284": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3285": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3286": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "1"
    },
    "3287": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "1"
    },
    "3288": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "1"
    },
    "3289": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "1"
    },
    "3290": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "1"
    },
    "3291": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3292": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "1"
    },
    "3293": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3294": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3295": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3296": {
      "fn": "ERC20.approve",
      "offset": [
        4516,
        4520
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3298": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 21
    },
    "3299": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 22,
      "value": "0xCED"
    },
    "3302": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3303": {
      "fn": "ERC20.approve",
      "offset": [
        4586,
        4593
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3304": {
      "fn": "ERC20.approve",
      "offset": [
        4595,
        4601
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3305": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4578
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EFA"
    },
    "3308": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3309": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3310": {
      "fn": "ERC20.approve",
      "offset": [
        4619,
        4623
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 23,
      "value": "0x1"
    },
    "3312": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3313": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "1"
    },
    "3314": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "1"
    },
    "3315": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3316": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3317": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3318": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "1"
    },
    "3319": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "1"
    },
    "3320": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3321": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3322": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18155,
        18162
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3324": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18197,
        18198
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 24
    },
    "3325": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18186,
        18194
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3326": {
      "branch": 176,
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18186,
        18198
      ],
      "op": "GT",
      "path": "8"
    },
    "3327": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18178,
        18199
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD07"
    },
    "3330": {
      "branch": 176,
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18178,
        18199
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3331": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18178,
        18199
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3333": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18178,
        18199
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3334": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18178,
        18199
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3335": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18178,
        18199
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3336": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18238
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "3338": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18238
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3339": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3341": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3342": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3349": {
      "op": "SHL"
    },
    "3350": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3351": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3352": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18257,
        18261
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "3353": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3355": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3356": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "ADD",
      "path": "8"
    },
    "3357": {
      "op": "MSTORE"
    },
    "3358": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18209,
        18230
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3360": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18209,
        18230
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3367": {
      "op": "SHL"
    },
    "3368": {
      "op": "SUB"
    },
    "3369": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18238
      ],
      "op": "AND",
      "path": "8"
    },
    "3370": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18238
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3371": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18248
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "3376": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18248
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3379": {
      "op": "ADD"
    },
    "3380": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3382": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3384": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3385": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3386": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3387": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "SUB",
      "path": "8"
    },
    "3388": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3389": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3390": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "GAS",
      "path": "8"
    },
    "3391": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "3392": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3393": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3394": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3395": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD50"
    },
    "3398": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3399": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3400": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3402": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3403": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "3404": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3405": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3407": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3408": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3409": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "POP",
      "path": "8"
    },
    "3410": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "POP",
      "path": "8"
    },
    "3411": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "POP",
      "path": "8"
    },
    "3412": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "POP",
      "path": "8"
    },
    "3413": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3415": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3416": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3417": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3419": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "NOT",
      "path": "8"
    },
    "3420": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3422": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3423": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "ADD",
      "path": "8"
    },
    "3424": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "AND",
      "path": "8"
    },
    "3425": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3426": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "ADD",
      "path": "8"
    },
    "3427": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3428": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3430": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3431": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "POP",
      "path": "8"
    },
    "3432": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3433": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "ADD",
      "path": "8"
    },
    "3434": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3435": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD74"
    },
    "3438": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3439": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3440": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30F8"
    },
    "3443": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "jump": "i",
      "offset": [
        18233,
        18263
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3444": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18233,
        18263
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3445": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18209,
        18263
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3446": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18209,
        18263
      ],
      "op": "POP",
      "path": "8"
    },
    "3447": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18280,
        18341
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 25,
      "value": "0xD81"
    },
    "3450": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18294,
        18302
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3451": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18304,
        18325
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "3452": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18327,
        18340
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3453": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18280,
        18293
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15B9"
    },
    "3456": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "jump": "i",
      "offset": [
        18280,
        18341
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3457": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18280,
        18341
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3458": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18273,
        18341
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3459": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "offset": [
        18059,
        18348
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3460": {
      "op": "POP"
    },
    "3461": {
      "op": "POP"
    },
    "3462": {
      "op": "POP"
    },
    "3463": {
      "fn": "StakeFountain.getBnbToTokenInputPrice",
      "jump": "o",
      "offset": [
        18059,
        18348
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3464": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14798,
        15001
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3465": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14900,
        14907
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3467": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14930,
        14994
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 26,
      "value": "0xD81"
    },
    "3470": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14947,
        14957
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3471": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14959,
        14969
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3472": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14971,
        14981
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3473": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14983,
        14993
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3474": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "offset": [
        14930,
        14946
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x201F"
    },
    "3477": {
      "fn": "StakeFountain.tokenToBnbSwapOutput",
      "jump": "i",
      "offset": [
        14930,
        14994
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3478": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3479": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20583,
        20590
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3481": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20625,
        20626
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 27
    },
    "3482": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20614,
        20622
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3483": {
      "branch": 177,
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20614,
        20626
      ],
      "op": "GT",
      "path": "8"
    },
    "3484": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20606,
        20627
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDA4"
    },
    "3487": {
      "branch": 177,
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20606,
        20627
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3488": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20606,
        20627
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3490": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20606,
        20627
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3491": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20606,
        20627
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3492": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20606,
        20627
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3493": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20637,
        20657
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3495": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20671,
        20694
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3496": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20697,
        20710
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDB0"
    },
    "3499": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3501": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3502": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3503": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3504": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20697,
        20710
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3505": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20802
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "3507": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20802
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3508": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3510": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3511": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3518": {
      "op": "SHL"
    },
    "3519": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3520": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3521": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20821,
        20825
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "3522": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3524": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3525": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "ADD",
      "path": "8"
    },
    "3526": {
      "op": "MSTORE"
    },
    "3527": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20671,
        20710
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3528": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20671,
        20710
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3529": {
      "op": "POP"
    },
    "3530": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20742,
        20763
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "3531": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20742,
        20763
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3532": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20720,
        20739
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3534": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20720,
        20739
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3541": {
      "op": "SHL"
    },
    "3542": {
      "op": "SUB"
    },
    "3543": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20802
      ],
      "op": "AND",
      "path": "8"
    },
    "3544": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20802
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3545": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20812
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "3550": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20812
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3553": {
      "op": "ADD"
    },
    "3554": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3556": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3558": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3559": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3560": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3561": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "SUB",
      "path": "8"
    },
    "3562": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3563": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3564": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "GAS",
      "path": "8"
    },
    "3565": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "3566": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3567": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3568": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3569": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDFE"
    },
    "3572": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3573": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3574": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3576": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3577": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "3578": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3579": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3581": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3582": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3583": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "POP",
      "path": "8"
    },
    "3584": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "POP",
      "path": "8"
    },
    "3585": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "POP",
      "path": "8"
    },
    "3586": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "POP",
      "path": "8"
    },
    "3587": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3589": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3590": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3591": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3593": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "NOT",
      "path": "8"
    },
    "3594": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3596": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3597": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "ADD",
      "path": "8"
    },
    "3598": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "AND",
      "path": "8"
    },
    "3599": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3600": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "ADD",
      "path": "8"
    },
    "3601": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3602": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3604": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3605": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "POP",
      "path": "8"
    },
    "3606": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3607": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "ADD",
      "path": "8"
    },
    "3608": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3609": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE22"
    },
    "3612": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3613": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3614": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30F8"
    },
    "3617": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "jump": "i",
      "offset": [
        20797,
        20827
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3618": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20797,
        20827
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3619": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20773,
        20827
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3620": {
      "op": "POP"
    },
    "3621": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20882,
        20893
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 28
    },
    "3622": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20854,
        20878
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE2F"
    },
    "3625": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20773,
        20827
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3626": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20854,
        20862
      ],
      "op": "DUP9",
      "path": "8"
    },
    "3627": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20854,
        20878
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "3630": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "jump": "i",
      "offset": [
        20854,
        20878
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3631": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20854,
        20878
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3632": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20853,
        20893
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE39"
    },
    "3635": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20853,
        20893
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3636": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20853,
        20893
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3637": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20853,
        20893
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "3640": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "jump": "i",
      "offset": [
        20853,
        20893
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3641": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20853,
        20893
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3642": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20852,
        20898
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE44"
    },
    "3645": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20852,
        20898
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3646": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20897,
        20898
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3648": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20852,
        20898
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31D6"
    },
    "3651": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "jump": "i",
      "offset": [
        20852,
        20898
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3652": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20852,
        20898
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3653": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20837,
        20898
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3654": {
      "op": "POP"
    },
    "3655": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20908,
        20932
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3657": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20966,
        20977
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3658": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20936,
        20962
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE53"
    },
    "3661": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20947,
        20962
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3662": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20936,
        20944
      ],
      "op": "DUP10",
      "path": "8"
    },
    "3663": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20936,
        20962
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "3666": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "jump": "i",
      "offset": [
        20936,
        20962
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3667": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20936,
        20962
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3668": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20935,
        20977
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE5D"
    },
    "3671": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20935,
        20977
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3672": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20935,
        20977
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3673": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20935,
        20977
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "3676": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "jump": "i",
      "offset": [
        20935,
        20977
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3677": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20935,
        20977
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3678": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20908,
        20977
      ],
      "op": "SWAP8",
      "path": "8"
    },
    "3679": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "offset": [
        20483,
        21018
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "3680": {
      "op": "POP"
    },
    "3681": {
      "op": "POP"
    },
    "3682": {
      "op": "POP"
    },
    "3683": {
      "op": "POP"
    },
    "3684": {
      "op": "POP"
    },
    "3685": {
      "op": "POP"
    },
    "3686": {
      "op": "POP"
    },
    "3687": {
      "fn": "StakeFountain.getBnbToLiquidityInputPrice",
      "jump": "o",
      "offset": [
        20483,
        21018
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3688": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        10993,
        11209
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3689": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        11094,
        11101
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3691": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        11136,
        11202
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 29,
      "value": "0xCF3"
    },
    "3694": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        11153,
        11166
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3695": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        11168,
        11177
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "3696": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        11179,
        11189
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3697": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        11191,
        11201
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3698": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "offset": [
        11136,
        11152
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2267"
    },
    "3701": {
      "fn": "StakeFountain.bnbToTokenSwapOutput",
      "jump": "i",
      "offset": [
        11136,
        11202
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3702": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3703": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5319,
        5323
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3705": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3706": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 30,
      "value": "0xE84"
    },
    "3709": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5391,
        5395
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3710": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3711": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5406,
        5412
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3712": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5390
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24EB"
    },
    "3715": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3716": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3717": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 31,
      "value": "0xE8F"
    },
    "3720": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5433,
        5437
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3721": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5439,
        5441
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3722": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5443,
        5449
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3723": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5432
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x257D"
    },
    "3726": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3727": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3728": {
      "op": "POP"
    },
    "3729": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 32,
      "value": "0x1"
    },
    "3731": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3732": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3733": {
      "op": "POP"
    },
    "3734": {
      "op": "POP"
    },
    "3735": {
      "op": "POP"
    },
    "3736": {
      "op": "POP"
    },
    "3737": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3738": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3739": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3741": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3742": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4978,
        4990
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3744": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4978,
        4990
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3751": {
      "op": "SHL"
    },
    "3752": {
      "op": "SUB"
    },
    "3753": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3754": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3755": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3756": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC7"
    },
    "3759": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3760": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3762": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3763": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3769": {
      "op": "SHL"
    },
    "3770": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3771": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3772": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3774": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3775": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B2"
    },
    "3778": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3779": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31EE"
    },
    "3782": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3783": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3784": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5011,
        5020
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3786": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5006,
        5162
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3787": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5030,
        5035
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3788": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5030,
        5042
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3789": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5026,
        5027
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3790": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5026,
        5042
      ],
      "op": "LT",
      "path": "8"
    },
    "3791": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5006,
        5162
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3792": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5006,
        5162
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF11"
    },
    "3795": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5006,
        5162
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3796": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5067,
        5103
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEF5"
    },
    "3799": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5099
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3800": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5100,
        5101
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3801": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3802": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3803": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3804": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "LT",
      "path": "8"
    },
    "3805": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEE8"
    },
    "3808": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3809": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEE8"
    },
    "3812": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3223"
    },
    "3815": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "jump": "i",
      "offset": [
        5094,
        5102
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3816": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3817": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3819": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "MUL",
      "path": "8"
    },
    "3820": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3822": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "ADD",
      "path": "8"
    },
    "3823": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "ADD",
      "path": "8"
    },
    "3824": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5094,
        5102
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3825": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5067,
        5093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF18"
    },
    "3828": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "jump": "i",
      "offset": [
        5067,
        5103
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3829": {
      "branch": 178,
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5067,
        5103
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3830": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5063,
        5152
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3831": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5063,
        5152
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEFF"
    },
    "3834": {
      "branch": 178,
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5063,
        5152
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3835": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5133,
        5137
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 33,
      "value": "0x1"
    },
    "3837": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5123,
        5137
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3838": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5123,
        5137
      ],
      "op": "POP",
      "path": "8"
    },
    "3839": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5063,
        5152
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3840": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5044,
        5047
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 34
    },
    "3841": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5044,
        5047
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF09"
    },
    "3844": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5044,
        5047
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3845": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5044,
        5047
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3239"
    },
    "3848": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "jump": "i",
      "offset": [
        5044,
        5047
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3849": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5044,
        5047
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3850": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5044,
        5047
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3851": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5044,
        5047
      ],
      "op": "POP",
      "path": "8"
    },
    "3852": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5044,
        5047
      ],
      "op": "POP",
      "path": "8"
    },
    "3853": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5006,
        5162
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xECA"
    },
    "3856": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5006,
        5162
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3857": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5006,
        5162
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3858": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        5006,
        5162
      ],
      "op": "POP",
      "path": "8"
    },
    "3859": {
      "offset": [
        1318,
        1319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3860": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3861": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3862": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "offset": [
        4866,
        5192
      ],
      "op": "POP",
      "path": "8"
    },
    "3863": {
      "fn": "StakeFountain.removeAddressesFromWhitelist",
      "jump": "o",
      "offset": [
        4866,
        5192
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3864": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3865": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3867": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3868": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4561,
        4573
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3870": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4561,
        4573
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3877": {
      "op": "SHL"
    },
    "3878": {
      "op": "SUB"
    },
    "3879": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3880": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3881": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3882": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF45"
    },
    "3885": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3886": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3888": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3889": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3895": {
      "op": "SHL"
    },
    "3896": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3897": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3898": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3900": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3901": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B2"
    },
    "3904": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3905": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31EE"
    },
    "3908": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3909": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3916": {
      "op": "SHL"
    },
    "3917": {
      "op": "SUB"
    },
    "3918": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4608
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3919": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4608
      ],
      "op": "AND",
      "path": "8"
    },
    "3920": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4608
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3922": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4608
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3923": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4608
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3924": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4608
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3925": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4602
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "3927": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4608
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3929": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4608
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3930": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4608
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3932": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4608
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3933": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4608
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3934": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4608
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3935": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4608
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "3937": {
      "branch": 179,
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4593,
        4608
      ],
      "op": "AND",
      "path": "8"
    },
    "3938": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4589,
        4736
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3939": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4589,
        4736
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF13"
    },
    "3942": {
      "branch": 179,
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4589,
        4736
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3949": {
      "op": "SHL"
    },
    "3950": {
      "op": "SUB"
    },
    "3951": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4639
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 35
    },
    "3952": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4639
      ],
      "op": "AND",
      "path": "8"
    },
    "3953": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4642,
        4647
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3955": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4639
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3956": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4639
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3957": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4639
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3958": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4633
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "3960": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3962": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4639
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3963": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4639
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3964": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4639
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3965": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3967": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4639
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3968": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4639
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3969": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4639
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3970": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4639
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3971": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4647
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3972": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4647
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3975": {
      "op": "NOT"
    },
    "3976": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4647
      ],
      "op": "AND",
      "path": "8"
    },
    "3977": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4647
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3978": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4624,
        4647
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3979": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4666,
        4697
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 36
    },
    "3980": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4666,
        4697
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3981": {
      "op": "SWAP2"
    },
    "3982": {
      "op": "DUP3"
    },
    "3983": {
      "op": "MSTORE"
    },
    "3984": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4666,
        4697
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xF1ABF01A1043B7C244D128E8595CF0C1D10743B022B03A02DFFD8CA3BF729F5A"
    },
    "4017": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4666,
        4697
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4018": {
      "op": "ADD"
    },
    "4019": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4666,
        4697
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4020": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4666,
        4697
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4022": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4666,
        4697
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4023": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4666,
        4697
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4024": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4666,
        4697
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4025": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4666,
        4697
      ],
      "op": "SUB",
      "path": "8"
    },
    "4026": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4666,
        4697
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4027": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4666,
        4697
      ],
      "op": "LOG1",
      "path": "8"
    },
    "4028": {
      "op": "POP"
    },
    "4029": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4721,
        4725
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 37,
      "value": "0x1"
    },
    "4031": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4032": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4033": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "offset": [
        4461,
        4766
      ],
      "op": "POP",
      "path": "8"
    },
    "4034": {
      "fn": "StakeFountain.removeAddressFromWhitelist",
      "jump": "o",
      "offset": [
        4461,
        4766
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4035": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19786,
        20083
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4036": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19885,
        19892
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4038": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19929,
        19930
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 38
    },
    "4039": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19916,
        19926
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4040": {
      "branch": 180,
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19916,
        19930
      ],
      "op": "GT",
      "path": "8"
    },
    "4041": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19908,
        19931
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFD1"
    },
    "4044": {
      "branch": 180,
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19908,
        19931
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4045": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19908,
        19931
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4047": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19908,
        19931
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4048": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19908,
        19931
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4049": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19908,
        19931
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4050": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19970
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "4052": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19970
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4053": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4055": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4056": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4063": {
      "op": "SHL"
    },
    "4064": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4065": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4066": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19989,
        19993
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "4067": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4069": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4070": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "ADD",
      "path": "8"
    },
    "4071": {
      "op": "MSTORE"
    },
    "4072": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19941,
        19962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4074": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19941,
        19962
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4081": {
      "op": "SHL"
    },
    "4082": {
      "op": "SUB"
    },
    "4083": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19970
      ],
      "op": "AND",
      "path": "8"
    },
    "4084": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19970
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4085": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19980
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "4090": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19980
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4091": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4093": {
      "op": "ADD"
    },
    "4094": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4096": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4098": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4099": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4100": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4101": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "SUB",
      "path": "8"
    },
    "4102": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4103": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4104": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "GAS",
      "path": "8"
    },
    "4105": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "4106": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4107": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4108": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4109": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x101A"
    },
    "4112": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4113": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4114": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4116": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4117": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "4118": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4119": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4121": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4122": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4123": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "POP",
      "path": "8"
    },
    "4124": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "POP",
      "path": "8"
    },
    "4125": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "POP",
      "path": "8"
    },
    "4126": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "POP",
      "path": "8"
    },
    "4127": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4129": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4130": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4131": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4133": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "NOT",
      "path": "8"
    },
    "4134": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4136": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4137": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "ADD",
      "path": "8"
    },
    "4138": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "AND",
      "path": "8"
    },
    "4139": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4140": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "ADD",
      "path": "8"
    },
    "4141": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4142": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4144": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4145": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "POP",
      "path": "8"
    },
    "4146": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4147": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "ADD",
      "path": "8"
    },
    "4148": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4149": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x103E"
    },
    "4152": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4153": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4154": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30F8"
    },
    "4157": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "jump": "i",
      "offset": [
        19965,
        19995
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4158": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19965,
        19995
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4159": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19941,
        19995
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4160": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        19941,
        19995
      ],
      "op": "POP",
      "path": "8"
    },
    "4161": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        20012,
        20076
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 39,
      "value": "0xD81"
    },
    "4164": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        20027,
        20037
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4165": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        20039,
        20052
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4166": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        20054,
        20075
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "4167": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "offset": [
        20012,
        20026
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CEE"
    },
    "4170": {
      "fn": "StakeFountain.getTokenToBnbOutputPrice",
      "jump": "i",
      "offset": [
        20012,
        20076
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4171": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4172": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18666,
        18673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4174": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18713,
        18714
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 40
    },
    "4175": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18697,
        18710
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4176": {
      "branch": 181,
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18697,
        18714
      ],
      "op": "GT",
      "path": "8"
    },
    "4177": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18689,
        18715
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1059"
    },
    "4180": {
      "branch": 181,
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18689,
        18715
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4181": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18689,
        18715
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4183": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18689,
        18715
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4184": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18689,
        18715
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4185": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18689,
        18715
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4186": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18754
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "4188": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18754
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4189": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4191": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4192": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4199": {
      "op": "SHL"
    },
    "4200": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4201": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4202": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18773,
        18777
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "4203": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4205": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4206": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "ADD",
      "path": "8"
    },
    "4207": {
      "op": "MSTORE"
    },
    "4208": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18725,
        18746
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4210": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18725,
        18746
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4217": {
      "op": "SHL"
    },
    "4218": {
      "op": "SUB"
    },
    "4219": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18754
      ],
      "op": "AND",
      "path": "8"
    },
    "4220": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18754
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4221": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18764
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "4226": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18764
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4229": {
      "op": "ADD"
    },
    "4230": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4232": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4234": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4235": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4236": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4237": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "SUB",
      "path": "8"
    },
    "4238": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4239": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4240": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "GAS",
      "path": "8"
    },
    "4241": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "4242": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4243": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4244": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4245": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10A2"
    },
    "4248": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4249": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4250": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4252": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4253": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "4254": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4255": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4257": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4258": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4259": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "POP",
      "path": "8"
    },
    "4260": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "POP",
      "path": "8"
    },
    "4261": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "POP",
      "path": "8"
    },
    "4262": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "POP",
      "path": "8"
    },
    "4263": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4265": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4266": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4267": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4269": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "NOT",
      "path": "8"
    },
    "4270": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4272": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4273": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "ADD",
      "path": "8"
    },
    "4274": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "AND",
      "path": "8"
    },
    "4275": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4276": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "ADD",
      "path": "8"
    },
    "4277": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4278": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4280": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4281": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "POP",
      "path": "8"
    },
    "4282": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4283": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "ADD",
      "path": "8"
    },
    "4284": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4285": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10C6"
    },
    "4288": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4289": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4290": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30F8"
    },
    "4293": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "jump": "i",
      "offset": [
        18749,
        18779
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4294": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18749,
        18779
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4295": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18725,
        18779
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4296": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18725,
        18779
      ],
      "op": "POP",
      "path": "8"
    },
    "4297": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18789,
        18805
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4299": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18808,
        18921
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10D5"
    },
    "4302": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18836,
        18849
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4303": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18863,
        18884
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "4304": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18898,
        18911
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4305": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18808,
        18822
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CEE"
    },
    "4308": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "jump": "i",
      "offset": [
        18808,
        18921
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4309": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18808,
        18921
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4310": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18789,
        18921
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "4311": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "offset": [
        18564,
        18953
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4312": {
      "op": "POP"
    },
    "4313": {
      "op": "POP"
    },
    "4314": {
      "op": "POP"
    },
    "4315": {
      "op": "POP"
    },
    "4316": {
      "fn": "StakeFountain.getBnbToTokenOutputPrice",
      "jump": "o",
      "offset": [
        18564,
        18953
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4317": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4318": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4319": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4321": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 41
    },
    "4322": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4323": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4324": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6051
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4326": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4328": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4329": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4330": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4331": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4333": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4334": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4335": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4342": {
      "op": "SHL"
    },
    "4343": {
      "op": "SUB"
    },
    "4344": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4345": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "AND",
      "path": "1"
    },
    "4346": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4347": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4348": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4349": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4350": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4351": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4352": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4353": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4354": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4355": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4356": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4357": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCED"
    },
    "4360": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4361": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4362": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4363": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4364": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4365": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1117"
    },
    "4368": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4369": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4370": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4371": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31D6"
    },
    "4374": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4375": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4376": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EFA"
    },
    "4379": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6015,
        6081
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4380": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4381": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21126,
        21133
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4383": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21135,
        21142
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4384": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21158,
        21181
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4386": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21184,
        21197
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x112A"
    },
    "4389": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4391": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4392": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4393": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4394": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21184,
        21197
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4395": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21158,
        21197
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4396": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21158,
        21197
      ],
      "op": "POP",
      "path": "8"
    },
    "4397": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21233,
        21234
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 42,
      "value": "0x0"
    },
    "4399": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21215,
        21230
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4400": {
      "branch": 182,
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21215,
        21234
      ],
      "op": "GT",
      "path": "8"
    },
    "4401": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21207,
        21235
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1139"
    },
    "4404": {
      "branch": 182,
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21207,
        21235
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4405": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21207,
        21235
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4407": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21207,
        21235
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4408": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21207,
        21235
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4409": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21207,
        21235
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4410": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21274
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "4412": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21274
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4413": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4415": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4416": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4423": {
      "op": "SHL"
    },
    "4424": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4425": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4426": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21293,
        21297
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "4427": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4429": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4430": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "ADD",
      "path": "8"
    },
    "4431": {
      "op": "MSTORE"
    },
    "4432": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21245,
        21266
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4434": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21245,
        21266
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4441": {
      "op": "SHL"
    },
    "4442": {
      "op": "SUB"
    },
    "4443": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21274
      ],
      "op": "AND",
      "path": "8"
    },
    "4444": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21274
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4445": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21284
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "4450": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21284
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4453": {
      "op": "ADD"
    },
    "4454": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4456": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4458": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4459": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4460": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4461": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "SUB",
      "path": "8"
    },
    "4462": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4463": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4464": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "GAS",
      "path": "8"
    },
    "4465": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "4466": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4467": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4468": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4469": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1182"
    },
    "4472": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4473": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4474": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4476": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4477": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "4478": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4479": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4481": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4482": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4483": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "POP",
      "path": "8"
    },
    "4484": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "POP",
      "path": "8"
    },
    "4485": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "POP",
      "path": "8"
    },
    "4486": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "POP",
      "path": "8"
    },
    "4487": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4489": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4490": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4491": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4493": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "NOT",
      "path": "8"
    },
    "4494": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4496": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4497": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "ADD",
      "path": "8"
    },
    "4498": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "AND",
      "path": "8"
    },
    "4499": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4500": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "ADD",
      "path": "8"
    },
    "4501": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4502": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4504": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4505": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "POP",
      "path": "8"
    },
    "4506": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4507": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "ADD",
      "path": "8"
    },
    "4508": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4509": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11A6"
    },
    "4512": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4513": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4514": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30F8"
    },
    "4517": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "jump": "i",
      "offset": [
        21269,
        21299
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4518": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21269,
        21299
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4519": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21245,
        21299
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4520": {
      "op": "POP"
    },
    "4521": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21309,
        21327
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4523": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21365,
        21380
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4524": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21331,
        21361
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11B5"
    },
    "4527": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21340,
        21361
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "4528": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21331,
        21337
      ],
      "op": "DUP9",
      "path": "8"
    },
    "4529": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21331,
        21361
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "4532": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "jump": "i",
      "offset": [
        21331,
        21361
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4533": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21331,
        21361
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4534": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21330,
        21380
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11BF"
    },
    "4537": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21330,
        21380
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4538": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21330,
        21380
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4539": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21330,
        21380
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "4542": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "jump": "i",
      "offset": [
        21330,
        21380
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4543": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21330,
        21380
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4544": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21309,
        21380
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4545": {
      "op": "POP"
    },
    "4546": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21390,
        21410
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4548": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21440,
        21455
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4549": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21414,
        21436
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11CE"
    },
    "4552": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21423,
        21436
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4553": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21414,
        21420
      ],
      "op": "DUP10",
      "path": "8"
    },
    "4554": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21414,
        21436
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "4557": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "jump": "i",
      "offset": [
        21414,
        21436
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4558": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21414,
        21436
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4559": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21413,
        21455
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11D8"
    },
    "4562": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21413,
        21455
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4563": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21413,
        21455
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4564": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21413,
        21455
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "4567": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "jump": "i",
      "offset": [
        21413,
        21455
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4568": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21413,
        21455
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4569": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21473,
        21483
      ],
      "op": "SWAP2",
      "path": "8",
      "statement": 43
    },
    "4570": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21473,
        21483
      ],
      "op": "SWAP8",
      "path": "8"
    },
    "4571": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21390,
        21455
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4572": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21390,
        21455
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "4573": {
      "op": "POP"
    },
    "4574": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4575": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "offset": [
        21024,
        21505
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "4576": {
      "op": "POP"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "op": "POP"
    },
    "4579": {
      "op": "POP"
    },
    "4580": {
      "op": "POP"
    },
    "4581": {
      "fn": "StakeFountain.getLiquidityToReserveInputPrice",
      "jump": "o",
      "offset": [
        21024,
        21505
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4582": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19173,
        19576
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4583": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19272,
        19279
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4585": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19317,
        19318
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 44
    },
    "4586": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19303,
        19314
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4587": {
      "branch": 183,
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19303,
        19318
      ],
      "op": "GT",
      "path": "8"
    },
    "4588": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19295,
        19337
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1228"
    },
    "4591": {
      "branch": 183,
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19295,
        19337
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4592": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19295,
        19337
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4594": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19295,
        19337
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4595": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4601": {
      "op": "SHL"
    },
    "4602": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19295,
        19337
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4603": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19295,
        19337
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4606": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19295,
        19337
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4608": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19295,
        19337
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4609": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19295,
        19337
      ],
      "op": "ADD",
      "path": "8"
    },
    "4610": {
      "op": "MSTORE"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4615": {
      "op": "DUP3"
    },
    "4616": {
      "op": "ADD"
    },
    "4617": {
      "op": "MSTORE"
    },
    "4618": {
      "op": "PUSH14",
      "value": "0x746F6B656E20736F6C64203C203"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "4635": {
      "op": "SHL"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4638": {
      "op": "DUP3"
    },
    "4639": {
      "op": "ADD"
    },
    "4640": {
      "op": "MSTORE"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4643": {
      "op": "ADD"
    },
    "4644": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19295,
        19337
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9B2"
    },
    "4647": {
      "op": "JUMP"
    },
    "4648": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19295,
        19337
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4649": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19376
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "4651": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19376
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4652": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4654": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4655": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4662": {
      "op": "SHL"
    },
    "4663": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4664": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4665": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19395,
        19399
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "4666": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4668": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4669": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "ADD",
      "path": "8"
    },
    "4670": {
      "op": "MSTORE"
    },
    "4671": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19347,
        19368
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4673": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19347,
        19368
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4680": {
      "op": "SHL"
    },
    "4681": {
      "op": "SUB"
    },
    "4682": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19376
      ],
      "op": "AND",
      "path": "8"
    },
    "4683": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19376
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4684": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19386
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "4689": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19386
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4692": {
      "op": "ADD"
    },
    "4693": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4695": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4697": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4698": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4699": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4700": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "SUB",
      "path": "8"
    },
    "4701": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4702": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4703": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "GAS",
      "path": "8"
    },
    "4704": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "4705": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4706": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4707": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4708": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1271"
    },
    "4711": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4712": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4713": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4715": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4716": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "4717": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4718": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4720": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4721": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4722": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "POP",
      "path": "8"
    },
    "4723": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "POP",
      "path": "8"
    },
    "4724": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "POP",
      "path": "8"
    },
    "4725": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "POP",
      "path": "8"
    },
    "4726": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4728": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4729": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4730": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4732": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "NOT",
      "path": "8"
    },
    "4733": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4735": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4736": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "ADD",
      "path": "8"
    },
    "4737": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "AND",
      "path": "8"
    },
    "4738": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4739": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "ADD",
      "path": "8"
    },
    "4740": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4741": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4743": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4744": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "POP",
      "path": "8"
    },
    "4745": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4746": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "ADD",
      "path": "8"
    },
    "4747": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4748": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1295"
    },
    "4751": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4752": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4753": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30F8"
    },
    "4756": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "jump": "i",
      "offset": [
        19371,
        19401
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4757": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19371,
        19401
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4758": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19347,
        19401
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4759": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19347,
        19401
      ],
      "op": "POP",
      "path": "8"
    },
    "4760": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19411,
        19429
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4762": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19432,
        19542
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10D5"
    },
    "4765": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19459,
        19470
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4766": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19484,
        19497
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4767": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19511,
        19532
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "4768": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "offset": [
        19432,
        19445
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15B9"
    },
    "4771": {
      "fn": "StakeFountain.getTokenToBnbInputPrice",
      "jump": "i",
      "offset": [
        19432,
        19542
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4772": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4773": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4775": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4782": {
      "op": "SHL"
    },
    "4783": {
      "op": "SUB"
    },
    "4784": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4785": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4786": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4787": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CE"
    },
    "4790": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4791": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4793": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4794": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4800": {
      "op": "SHL"
    },
    "4801": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4802": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4803": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4805": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4806": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B2"
    },
    "4809": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4810": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31EE"
    },
    "4813": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4814": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4815": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 45,
      "value": "0x12D8"
    },
    "4818": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4820": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2739"
    },
    "4823": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4824": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4825": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4826": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3678,
        3952
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4827": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4829": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4830": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3773,
        3785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4832": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3773,
        3785
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4839": {
      "op": "SHL"
    },
    "4840": {
      "op": "SUB"
    },
    "4841": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4842": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4843": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4844": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1307"
    },
    "4847": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4848": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4850": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4851": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4857": {
      "op": "SHL"
    },
    "4858": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4859": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4860": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4862": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4863": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B2"
    },
    "4866": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4867": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31EE"
    },
    "4870": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4871": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4878": {
      "op": "SHL"
    },
    "4879": {
      "op": "SUB"
    },
    "4880": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3821
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4881": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3821
      ],
      "op": "AND",
      "path": "8"
    },
    "4882": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3821
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4884": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3821
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4885": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3821
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4886": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3821
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4887": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3815
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "4889": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3821
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4891": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3821
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4892": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3821
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4894": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3821
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4895": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3821
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4896": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3821
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4897": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3821
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "4899": {
      "branch": 184,
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3806,
        3821
      ],
      "op": "AND",
      "path": "8"
    },
    "4900": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3801,
        3946
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF13"
    },
    "4903": {
      "branch": 184,
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3801,
        3946
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4910": {
      "op": "SHL"
    },
    "4911": {
      "op": "SUB"
    },
    "4912": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 46
    },
    "4913": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "AND",
      "path": "8"
    },
    "4914": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4916": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4917": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4918": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4919": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3846
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "4921": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4923": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4924": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4925": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4926": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4928": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4929": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4930": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4931": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3852
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4932": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4933": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3859
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4934": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4936": {
      "op": "NOT"
    },
    "4937": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3859
      ],
      "op": "AND",
      "path": "8"
    },
    "4938": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3855,
        3859
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "4940": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3859
      ],
      "op": "OR",
      "path": "8"
    },
    "4941": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3859
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4942": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3837,
        3859
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4943": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3878,
        3907
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 47
    },
    "4944": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3878,
        3907
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4945": {
      "op": "SWAP2"
    },
    "4946": {
      "op": "DUP3"
    },
    "4947": {
      "op": "MSTORE"
    },
    "4948": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3878,
        3907
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xD1BBA68C128CC3F427E5831B3C6F99F480B6EFA6B9E80C757768F6124158CC3F"
    },
    "4981": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3878,
        3907
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4982": {
      "op": "ADD"
    },
    "4983": {
      "fn": "StakeFountain.addAddressToWhitelist",
      "offset": [
        3878,
        3907
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFB3"
    },
    "4986": {
      "op": "JUMP"
    },
    "4987": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4988": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24469,
        24476
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4990": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24478,
        24485
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4991": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24514,
        24515
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 48,
      "value": "0x0"
    },
    "4993": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24505,
        24511
      ],
      "op": "DUP6",
      "path": "8"
    },
    "4994": {
      "branch": 185,
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24505,
        24515
      ],
      "op": "GT",
      "path": "8"
    },
    "4995": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24505,
        24530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4996": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24505,
        24530
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4997": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24505,
        24530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x138E"
    },
    "5000": {
      "branch": 185,
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24505,
        24530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5001": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24505,
        24530
      ],
      "op": "POP",
      "path": "8"
    },
    "5002": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24529,
        24530
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5004": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24519,
        24526
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5005": {
      "branch": 186,
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24519,
        24530
      ],
      "op": "GT",
      "path": "8"
    },
    "5006": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24505,
        24530
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5007": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24505,
        24548
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5008": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24505,
        24548
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5009": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24505,
        24548
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x139A"
    },
    "5012": {
      "branch": 186,
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24505,
        24548
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5013": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24505,
        24548
      ],
      "op": "POP",
      "path": "8"
    },
    "5014": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24547,
        24548
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5016": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24534,
        24544
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5017": {
      "branch": 187,
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24534,
        24548
      ],
      "op": "GT",
      "path": "8"
    },
    "5018": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24505,
        24548
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5019": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24497,
        24549
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13A3"
    },
    "5022": {
      "branch": 187,
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24497,
        24549
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5023": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24497,
        24549
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5025": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24497,
        24549
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5026": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24497,
        24549
      ],
      "op": "REVERT",
      "path": "8"
    },
    "5027": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24497,
        24549
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5028": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24559,
        24582
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5030": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24585,
        24598
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13AE"
    },
    "5033": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5035": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5036": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5037": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5038": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24585,
        24598
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5039": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24559,
        24598
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5040": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24559,
        24598
      ],
      "op": "POP",
      "path": "8"
    },
    "5041": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24634,
        24635
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 49,
      "value": "0x0"
    },
    "5043": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24616,
        24631
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5044": {
      "branch": 188,
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24616,
        24635
      ],
      "op": "GT",
      "path": "8"
    },
    "5045": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24608,
        24636
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13BD"
    },
    "5048": {
      "branch": 188,
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24608,
        24636
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5049": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24608,
        24636
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5051": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24608,
        24636
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5052": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24608,
        24636
      ],
      "op": "REVERT",
      "path": "8"
    },
    "5053": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24608,
        24636
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5054": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24675
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "5056": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24675
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5057": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5059": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5060": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5067": {
      "op": "SHL"
    },
    "5068": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5069": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5070": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24694,
        24698
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "5071": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5073": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5074": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "ADD",
      "path": "8"
    },
    "5075": {
      "op": "MSTORE"
    },
    "5076": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24646,
        24667
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5078": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24646,
        24667
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5085": {
      "op": "SHL"
    },
    "5086": {
      "op": "SUB"
    },
    "5087": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24675
      ],
      "op": "AND",
      "path": "8"
    },
    "5088": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24675
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5089": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24685
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "5094": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24685
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5097": {
      "op": "ADD"
    },
    "5098": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5100": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5102": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5103": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5104": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5105": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "SUB",
      "path": "8"
    },
    "5106": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5107": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "DUP7",
      "path": "8"
    },
    "5108": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "GAS",
      "path": "8"
    },
    "5109": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "5110": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5111": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5112": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5113": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1406"
    },
    "5116": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5117": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "5118": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5120": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5121": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "5122": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "5123": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5125": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "REVERT",
      "path": "8"
    },
    "5126": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5127": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "POP",
      "path": "8"
    },
    "5128": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "POP",
      "path": "8"
    },
    "5129": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "POP",
      "path": "8"
    },
    "5130": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "POP",
      "path": "8"
    },
    "5131": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5133": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5134": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "5135": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "5137": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "NOT",
      "path": "8"
    },
    "5138": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "5140": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5141": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "ADD",
      "path": "8"
    },
    "5142": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "AND",
      "path": "8"
    },
    "5143": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5144": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "ADD",
      "path": "8"
    },
    "5145": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5146": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5148": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5149": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "POP",
      "path": "8"
    },
    "5150": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5151": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "ADD",
      "path": "8"
    },
    "5152": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5153": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x142A"
    },
    "5156": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5157": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5158": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30F8"
    },
    "5161": {
      "fn": "StakeFountain.removeLiquidity",
      "jump": "i",
      "offset": [
        24670,
        24700
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5162": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24670,
        24700
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5163": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24646,
        24700
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5164": {
      "op": "POP"
    },
    "5165": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24710,
        24728
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5167": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24766,
        24781
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5168": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24732,
        24762
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1439"
    },
    "5171": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24741,
        24762
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "5172": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24732,
        24738
      ],
      "op": "DUP11",
      "path": "8"
    },
    "5173": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24732,
        24762
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "5176": {
      "fn": "StakeFountain.removeLiquidity",
      "jump": "i",
      "offset": [
        24732,
        24762
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5177": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24732,
        24762
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5178": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24731,
        24781
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1443"
    },
    "5181": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24731,
        24781
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5182": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24731,
        24781
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5183": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24731,
        24781
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "5186": {
      "fn": "StakeFountain.removeLiquidity",
      "jump": "i",
      "offset": [
        24731,
        24781
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5187": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24731,
        24781
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5188": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24710,
        24781
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5189": {
      "op": "POP"
    },
    "5190": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24792,
        24812
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5192": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24844,
        24859
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5193": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24816,
        24840
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1452"
    },
    "5196": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24826,
        24839
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5197": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24816,
        24822
      ],
      "op": "DUP12",
      "path": "8"
    },
    "5198": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24816,
        24840
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "5201": {
      "fn": "StakeFountain.removeLiquidity",
      "jump": "i",
      "offset": [
        24816,
        24840
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5202": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24816,
        24840
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5203": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24815,
        24859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x145C"
    },
    "5206": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24815,
        24859
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5207": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24815,
        24859
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5208": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24815,
        24859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "5211": {
      "fn": "StakeFountain.removeLiquidity",
      "jump": "i",
      "offset": [
        24815,
        24859
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5212": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24815,
        24859
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5213": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24792,
        24859
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5214": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24792,
        24859
      ],
      "op": "POP",
      "path": "8"
    },
    "5215": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24891,
        24898
      ],
      "op": "DUP8",
      "path": "8",
      "statement": 50
    },
    "5216": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24877,
        24887
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5217": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24877,
        24898
      ],
      "op": "LT",
      "path": "8"
    },
    "5218": {
      "branch": 189,
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24877,
        24898
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5219": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24877,
        24928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5220": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24877,
        24928
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5221": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24877,
        24928
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x146E"
    },
    "5224": {
      "branch": 189,
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24877,
        24928
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5225": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24877,
        24928
      ],
      "op": "POP",
      "path": "8"
    },
    "5226": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24918,
        24928
      ],
      "op": "DUP7",
      "path": "8"
    },
    "5227": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24902,
        24914
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5228": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24902,
        24928
      ],
      "op": "LT",
      "path": "8"
    },
    "5229": {
      "branch": 190,
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24902,
        24928
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5230": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24877,
        24928
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5231": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24869,
        24929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1477"
    },
    "5234": {
      "branch": 190,
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24869,
        24929
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5235": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24869,
        24929
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5237": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24869,
        24929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5238": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24869,
        24929
      ],
      "op": "REVERT",
      "path": "8"
    },
    "5239": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24869,
        24929
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5240": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24939,
        24964
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 51,
      "value": "0x1481"
    },
    "5243": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24945,
        24955
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5244": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24957,
        24963
      ],
      "op": "DUP11",
      "path": "8"
    },
    "5245": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24939,
        24944
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x278B"
    },
    "5248": {
      "fn": "StakeFountain.removeLiquidity",
      "jump": "i",
      "offset": [
        24939,
        24964
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5249": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24939,
        24964
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5250": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 52,
      "value": "0x40"
    },
    "5252": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5253": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24982,
        24992
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5254": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24982,
        24992
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5255": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5256": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5257": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8FC"
    },
    "5260": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "MUL",
      "path": "8"
    },
    "5261": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5262": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25003,
        25013
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5263": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25003,
        25013
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5264": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5266": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5267": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5268": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5269": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25003,
        25013
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5270": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24982,
        24992
      ],
      "op": "DUP9",
      "path": "8"
    },
    "5271": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "DUP9",
      "path": "8"
    },
    "5272": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "CALL",
      "path": "8"
    },
    "5273": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "5274": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "POP",
      "path": "8"
    },
    "5275": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "POP",
      "path": "8"
    },
    "5276": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "POP",
      "path": "8"
    },
    "5277": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "POP",
      "path": "8"
    },
    "5278": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5279": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5280": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5281": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14AE"
    },
    "5284": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5285": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "5286": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5288": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5289": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "5290": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "5291": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5293": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "REVERT",
      "path": "8"
    },
    "5294": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24974,
        25014
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5295": {
      "op": "POP"
    },
    "5296": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25037
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 53,
      "value": "0x6"
    },
    "5298": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25037
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5299": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5301": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5302": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5307": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5309": {
      "op": "SHL"
    },
    "5310": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5311": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5312": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25047,
        25057
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5313": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5315": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5316": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "ADD",
      "path": "8"
    },
    "5317": {
      "op": "MSTORE"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5320": {
      "op": "DUP2"
    },
    "5321": {
      "op": "ADD"
    },
    "5322": {
      "op": "DUP4"
    },
    "5323": {
      "op": "SWAP1"
    },
    "5324": {
      "op": "MSTORE"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5331": {
      "op": "SHL"
    },
    "5332": {
      "op": "SUB"
    },
    "5333": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25037
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5334": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25037
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5335": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25037
      ],
      "op": "AND",
      "path": "8"
    },
    "5336": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25037
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5337": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25046
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "5342": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25046
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5345": {
      "op": "ADD"
    },
    "5346": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5348": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5350": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5351": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5352": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5353": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "SUB",
      "path": "8"
    },
    "5354": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5355": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5357": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "DUP8",
      "path": "8"
    },
    "5358": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "GAS",
      "path": "8"
    },
    "5359": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "CALL",
      "path": "8"
    },
    "5360": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5361": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5362": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5363": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1500"
    },
    "5366": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5367": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "5368": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5370": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5371": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "5372": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "5373": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5375": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "REVERT",
      "path": "8"
    },
    "5376": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5377": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "POP",
      "path": "8"
    },
    "5378": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "POP",
      "path": "8"
    },
    "5379": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "POP",
      "path": "8"
    },
    "5380": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "POP",
      "path": "8"
    },
    "5381": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5383": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5384": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "5385": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "5387": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "NOT",
      "path": "8"
    },
    "5388": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "5390": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5391": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "ADD",
      "path": "8"
    },
    "5392": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "AND",
      "path": "8"
    },
    "5393": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5394": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "ADD",
      "path": "8"
    },
    "5395": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5396": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5398": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5399": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "POP",
      "path": "8"
    },
    "5400": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5401": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "ADD",
      "path": "8"
    },
    "5402": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5403": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1524"
    },
    "5406": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5407": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5408": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x317F"
    },
    "5411": {
      "fn": "StakeFountain.removeLiquidity",
      "jump": "i",
      "offset": [
        25032,
        25072
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5412": {
      "branch": 191,
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25032,
        25072
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5413": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25024,
        25073
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x152D"
    },
    "5416": {
      "branch": 191,
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25024,
        25073
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5417": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25024,
        25073
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5419": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25024,
        25073
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5420": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25024,
        25073
      ],
      "op": "REVERT",
      "path": "8"
    },
    "5421": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25024,
        25073
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5422": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25088,
        25143
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 54,
      "value": "0x40"
    },
    "5424": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25088,
        25143
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5425": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25130,
        25142
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5426": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25130,
        25142
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5427": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25118,
        25128
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5428": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25118,
        25128
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5429": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25106,
        25116
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5430": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25106,
        25116
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5431": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25088,
        25143
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x9985886FA2F848BE5F83E79DF7592ADEBCE0C554283252F12B1C6CA0C1E35093"
    },
    "5464": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25088,
        25143
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5465": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25088,
        25143
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5467": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25088,
        25143
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5468": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25088,
        25143
      ],
      "op": "LOG4",
      "path": "8"
    },
    "5469": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25192,
        25202
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 55
    },
    "5470": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5472": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5473": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5474": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5475": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5477": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5478": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5479": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5480": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5482": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5483": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5484": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5485": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25158,
        25204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5487": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25158,
        25204
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5488": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25170,
        25180
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5489": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25170,
        25180
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5492": {
      "op": "DUP1"
    },
    "5493": {
      "op": "MLOAD"
    },
    "5494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5496": {
      "op": "PUSH2",
      "value": "0x3279"
    },
    "5499": {
      "op": "DUP4"
    },
    "5500": {
      "op": "CODECOPY"
    },
    "5501": {
      "op": "DUP2"
    },
    "5502": {
      "op": "MLOAD"
    },
    "5503": {
      "op": "SWAP2"
    },
    "5504": {
      "op": "MSTORE"
    },
    "5505": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25158,
        25204
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5506": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25158,
        25204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5508": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25158,
        25204
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5509": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25158,
        25204
      ],
      "op": "LOG3",
      "path": "8"
    },
    "5510": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25219,
        25259
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 56,
      "value": "0x40"
    },
    "5512": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25219,
        25259
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5513": {
      "op": "DUP10"
    },
    "5514": {
      "op": "DUP2"
    },
    "5515": {
      "op": "MSTORE"
    },
    "5516": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25248,
        25249
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5518": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25248,
        25249
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5519": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25228,
        25238
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5520": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25228,
        25238
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5523": {
      "op": "DUP1"
    },
    "5524": {
      "op": "MLOAD"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5527": {
      "op": "PUSH2",
      "value": "0x3299"
    },
    "5530": {
      "op": "DUP4"
    },
    "5531": {
      "op": "CODECOPY"
    },
    "5532": {
      "op": "DUP2"
    },
    "5533": {
      "op": "MLOAD"
    },
    "5534": {
      "op": "SWAP2"
    },
    "5535": {
      "op": "MSTORE"
    },
    "5536": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25219,
        25259
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5539": {
      "op": "ADD"
    },
    "5540": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25219,
        25259
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5542": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25219,
        25259
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5543": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25219,
        25259
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5544": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25219,
        25259
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5545": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25219,
        25259
      ],
      "op": "SUB",
      "path": "8"
    },
    "5546": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25219,
        25259
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5547": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25219,
        25259
      ],
      "op": "LOG3",
      "path": "8"
    },
    "5548": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25277,
        25287
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 57
    },
    "5549": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25277,
        25287
      ],
      "op": "SWAP9",
      "path": "8"
    },
    "5550": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25277,
        25287
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5551": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        25277,
        25287
      ],
      "op": "SWAP8",
      "path": "8"
    },
    "5552": {
      "op": "POP"
    },
    "5553": {
      "fn": "StakeFountain.removeLiquidity",
      "offset": [
        24345,
        25309
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "5554": {
      "op": "POP"
    },
    "5555": {
      "op": "POP"
    },
    "5556": {
      "op": "POP"
    },
    "5557": {
      "op": "POP"
    },
    "5558": {
      "op": "POP"
    },
    "5559": {
      "op": "POP"
    },
    "5560": {
      "fn": "StakeFountain.removeLiquidity",
      "jump": "o",
      "offset": [
        24345,
        25309
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5561": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5562": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6058,
        6065
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5564": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6101,
        6102
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 58
    },
    "5565": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6085,
        6098
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5566": {
      "branch": 192,
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6085,
        6102
      ],
      "op": "GT",
      "path": "8"
    },
    "5567": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6085,
        6124
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5568": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6085,
        6124
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5569": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6085,
        6124
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15CA"
    },
    "5572": {
      "branch": 192,
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6085,
        6124
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5573": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6085,
        6124
      ],
      "op": "POP",
      "path": "8"
    },
    "5574": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6123,
        6124
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5576": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6106,
        6120
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5577": {
      "branch": 193,
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6106,
        6124
      ],
      "op": "GT",
      "path": "8"
    },
    "5578": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6085,
        6124
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5579": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6077,
        6142
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1606"
    },
    "5582": {
      "branch": 193,
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6077,
        6142
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5583": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6077,
        6142
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5585": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6077,
        6142
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5586": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5590": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5592": {
      "op": "SHL"
    },
    "5593": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6077,
        6142
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5594": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6077,
        6142
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5597": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6077,
        6142
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5599": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6077,
        6142
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5600": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6077,
        6142
      ],
      "op": "ADD",
      "path": "8"
    },
    "5601": {
      "op": "MSTORE"
    },
    "5602": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5606": {
      "op": "DUP3"
    },
    "5607": {
      "op": "ADD"
    },
    "5608": {
      "op": "MSTORE"
    },
    "5609": {
      "op": "PUSH13",
      "value": "0x494E56414C49445F56414C5545"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "5625": {
      "op": "SHL"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5628": {
      "op": "DUP3"
    },
    "5629": {
      "op": "ADD"
    },
    "5630": {
      "op": "MSTORE"
    },
    "5631": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5633": {
      "op": "ADD"
    },
    "5634": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6077,
        6142
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9B2"
    },
    "5637": {
      "op": "JUMP"
    },
    "5638": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6077,
        6142
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5639": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6152,
        6169
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5641": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6172,
        6201
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1612"
    },
    "5644": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6187,
        6201
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5645": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6172,
        6184
      ],
      "op": "DUP7",
      "path": "8"
    },
    "5646": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6172,
        6201
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "5649": {
      "fn": "StakeFountain.getInputPrice",
      "jump": "i",
      "offset": [
        6172,
        6201
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5650": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6172,
        6201
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5651": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6152,
        6201
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5652": {
      "op": "POP"
    },
    "5653": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6211,
        6230
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5655": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6233,
        6261
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1620"
    },
    "5658": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6249,
        6261
      ],
      "op": "DUP7",
      "path": "8"
    },
    "5659": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6233,
        6246
      ],
      "op": "DUP7",
      "path": "8"
    },
    "5660": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6233,
        6261
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31D6"
    },
    "5663": {
      "fn": "StakeFountain.getInputPrice",
      "jump": "i",
      "offset": [
        6233,
        6261
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5664": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6233,
        6261
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5665": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6211,
        6261
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5666": {
      "op": "POP"
    },
    "5667": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6278,
        6301
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 59,
      "value": "0x162C"
    },
    "5670": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6211,
        6261
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5671": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6278,
        6287
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5672": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6278,
        6301
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "5675": {
      "fn": "StakeFountain.getInputPrice",
      "jump": "i",
      "offset": [
        6278,
        6301
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5676": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6278,
        6301
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5677": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        6271,
        6301
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "5678": {
      "fn": "StakeFountain.getInputPrice",
      "offset": [
        5915,
        6308
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "5679": {
      "op": "POP"
    },
    "5680": {
      "op": "POP"
    },
    "5681": {
      "op": "POP"
    },
    "5682": {
      "op": "POP"
    },
    "5683": {
      "op": "POP"
    },
    "5684": {
      "op": "POP"
    },
    "5685": {
      "fn": "StakeFountain.getInputPrice",
      "jump": "o",
      "offset": [
        5915,
        6308
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5686": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5687": {
      "fn": "ERC20.symbol",
      "offset": [
        2423,
        2436
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "5689": {
      "fn": "ERC20.symbol",
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 60,
      "value": "0x4"
    },
    "5691": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5692": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5693": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC5C"
    },
    "5696": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5697": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31A1"
    },
    "5700": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2448,
        2462
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5701": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22077,
        24056
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5702": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22190,
        22197
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5704": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22247,
        22248
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 61
    },
    "5705": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22234,
        22244
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5706": {
      "branch": 194,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22234,
        22248
      ],
      "op": "GT",
      "path": "8"
    },
    "5707": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22234,
        22265
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5708": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22234,
        22265
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5709": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22234,
        22265
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1656"
    },
    "5712": {
      "branch": 194,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22234,
        22265
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5713": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22234,
        22265
      ],
      "op": "POP",
      "path": "8"
    },
    "5714": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22264,
        22265
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5716": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22252,
        22261
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "5717": {
      "branch": 195,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22252,
        22265
      ],
      "op": "GT",
      "path": "8"
    },
    "5718": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22234,
        22265
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5719": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22213,
        22326
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16AE"
    },
    "5722": {
      "branch": 195,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22213,
        22326
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5723": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22213,
        22326
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5725": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22213,
        22326
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5726": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5732": {
      "op": "SHL"
    },
    "5733": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22213,
        22326
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5734": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22213,
        22326
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5737": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22213,
        22326
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5739": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22213,
        22326
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5740": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22213,
        22326
      ],
      "op": "ADD",
      "path": "8"
    },
    "5741": {
      "op": "MSTORE"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5746": {
      "op": "DUP3"
    },
    "5747": {
      "op": "ADD"
    },
    "5748": {
      "op": "MSTORE"
    },
    "5749": {
      "op": "PUSH32",
      "value": "0x53776170236164644C69717569646974793A20494E56414C49445F415247554D"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5784": {
      "op": "DUP3"
    },
    "5785": {
      "op": "ADD"
    },
    "5786": {
      "op": "MSTORE"
    },
    "5787": {
      "op": "PUSH3",
      "value": "0x115395"
    },
    "5791": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "5793": {
      "op": "SHL"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5796": {
      "op": "DUP3"
    },
    "5797": {
      "op": "ADD"
    },
    "5798": {
      "op": "MSTORE"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5801": {
      "op": "ADD"
    },
    "5802": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22213,
        22326
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9B2"
    },
    "5805": {
      "op": "JUMP"
    },
    "5806": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22213,
        22326
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5807": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22336,
        22359
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5809": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22362,
        22375
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16B9"
    },
    "5812": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5814": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5815": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5816": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5817": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22362,
        22375
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5818": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22436,
        22446
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5819": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22386,
        22406
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5821": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22425,
        22447
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5822": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22425,
        22447
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5823": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22425,
        22447
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5824": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22425,
        22435
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x10"
    },
    "5826": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22425,
        22447
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5828": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22425,
        22447
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5829": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22425,
        22447
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5831": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22425,
        22447
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5832": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22425,
        22447
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5833": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22425,
        22447
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5834": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22336,
        22375
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5835": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22336,
        22375
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5836": {
      "op": "POP"
    },
    "5837": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22386,
        22406
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5838": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22425,
        22447
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "5840": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22425,
        22447
      ],
      "op": "AND",
      "path": "8"
    },
    "5841": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22421,
        22540
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x170A"
    },
    "5844": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22421,
        22540
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5845": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22483,
        22493
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 62
    },
    "5846": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22494
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5848": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22494
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5849": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22494
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5850": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22494
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5851": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22482
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x10"
    },
    "5853": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22494
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5855": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22494
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5856": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22494
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5858": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22494
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5859": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22494
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5860": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22501
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5861": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22501
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5864": {
      "op": "NOT"
    },
    "5865": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22501
      ],
      "op": "AND",
      "path": "8"
    },
    "5866": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22497,
        22501
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5868": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22501
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5869": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22501
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5870": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22501
      ],
      "op": "OR",
      "path": "8"
    },
    "5871": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22501
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5872": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22501
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5873": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22472,
        22501
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5874": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22515,
        22524
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 63,
      "value": "0xE"
    },
    "5876": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22515,
        22529
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5877": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22515,
        22529
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5878": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22497,
        22501
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5879": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22497,
        22501
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5880": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22515,
        22524
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5881": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22515,
        22524
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5882": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22515,
        22529
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1704"
    },
    "5885": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22515,
        22529
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5886": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22497,
        22501
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5887": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22497,
        22501
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5888": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22515,
        22529
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31D6"
    },
    "5891": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        22515,
        22529
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5892": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22515,
        22529
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5893": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22515,
        22529
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5894": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22515,
        22529
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5895": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22515,
        22529
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5896": {
      "op": "POP"
    },
    "5897": {
      "op": "POP"
    },
    "5898": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22421,
        22540
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5899": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22554,
        22573
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5900": {
      "branch": 196,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22554,
        22573
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5901": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22550,
        24050
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1905"
    },
    "5904": {
      "branch": 196,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22550,
        24050
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5905": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22613,
        22614
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 64,
      "value": "0x0"
    },
    "5907": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22597,
        22610
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5908": {
      "branch": 197,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22597,
        22614
      ],
      "op": "GT",
      "path": "8"
    },
    "5909": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22589,
        22615
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x171D"
    },
    "5912": {
      "branch": 197,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22589,
        22615
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5913": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22589,
        22615
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5915": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22589,
        22615
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5916": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22589,
        22615
      ],
      "op": "REVERT",
      "path": "8"
    },
    "5917": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22589,
        22615
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5918": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22629,
        22648
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5920": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22651,
        22684
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1729"
    },
    "5923": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22675,
        22684
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "5924": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22651,
        22672
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "5925": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22651,
        22684
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3168"
    },
    "5928": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        22651,
        22684
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5929": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22651,
        22684
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5930": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22727
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "5932": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22727
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5933": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5935": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5936": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5941": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5943": {
      "op": "SHL"
    },
    "5944": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5945": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5946": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22746,
        22750
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "5947": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5949": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5950": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "ADD",
      "path": "8"
    },
    "5951": {
      "op": "MSTORE"
    },
    "5952": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22629,
        22684
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5953": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22629,
        22684
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5954": {
      "op": "POP"
    },
    "5955": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22698,
        22719
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5957": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22698,
        22719
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5964": {
      "op": "SHL"
    },
    "5965": {
      "op": "SUB"
    },
    "5966": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22727
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5967": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22727
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5968": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22727
      ],
      "op": "AND",
      "path": "8"
    },
    "5969": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22727
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5970": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22737
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "5975": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22737
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5976": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5978": {
      "op": "ADD"
    },
    "5979": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5981": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5983": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5984": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5985": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5986": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "SUB",
      "path": "8"
    },
    "5987": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5988": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "DUP7",
      "path": "8"
    },
    "5989": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "GAS",
      "path": "8"
    },
    "5990": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "5991": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5992": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5993": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5994": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1777"
    },
    "5997": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5998": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "5999": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6001": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6002": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "6003": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "6004": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6006": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "REVERT",
      "path": "8"
    },
    "6007": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6008": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "POP",
      "path": "8"
    },
    "6009": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "POP",
      "path": "8"
    },
    "6010": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "POP",
      "path": "8"
    },
    "6011": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "POP",
      "path": "8"
    },
    "6012": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6014": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6015": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "6016": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "6018": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "NOT",
      "path": "8"
    },
    "6019": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "6021": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6022": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "ADD",
      "path": "8"
    },
    "6023": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "AND",
      "path": "8"
    },
    "6024": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6025": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "ADD",
      "path": "8"
    },
    "6026": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6027": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6029": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6030": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "POP",
      "path": "8"
    },
    "6031": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6032": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "ADD",
      "path": "8"
    },
    "6033": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6034": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x179B"
    },
    "6037": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6038": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6039": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30F8"
    },
    "6042": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        22722,
        22752
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6043": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22722,
        22752
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6044": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22698,
        22752
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6045": {
      "op": "POP"
    },
    "6046": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22812,
        22823
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 65
    },
    "6047": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22783,
        22808
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17A8"
    },
    "6050": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22698,
        22752
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6051": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22783,
        22792
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6052": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22783,
        22808
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "6055": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        22783,
        22808
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6056": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22783,
        22808
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6057": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22782,
        22823
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17B2"
    },
    "6060": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22782,
        22823
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6061": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22782,
        22823
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6062": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22782,
        22823
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "6065": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        22782,
        22823
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6066": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22782,
        22823
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6067": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22781,
        22828
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17BD"
    },
    "6070": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22781,
        22828
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6071": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22827,
        22828
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6073": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22781,
        22828
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31D6"
    },
    "6076": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        22781,
        22828
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6077": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22781,
        22828
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6078": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22766,
        22828
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6079": {
      "op": "POP"
    },
    "6080": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22842,
        22866
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6082": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22917,
        22928
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6083": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22870,
        22897
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17CC"
    },
    "6086": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22882,
        22897
      ],
      "op": "DUP7",
      "path": "8"
    },
    "6087": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22870,
        22879
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6088": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22870,
        22897
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "6091": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        22870,
        22897
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6092": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22870,
        22897
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6093": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22869,
        22928
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17D6"
    },
    "6096": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22869,
        22928
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6097": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22869,
        22928
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6098": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22869,
        22928
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "6101": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        22869,
        22928
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6102": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22869,
        22928
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6103": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22842,
        22928
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6104": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22842,
        22928
      ],
      "op": "POP",
      "path": "8"
    },
    "6105": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22982,
        22994
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 66
    },
    "6106": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22968,
        22978
      ],
      "op": "DUP8",
      "path": "8"
    },
    "6107": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22968,
        22994
      ],
      "op": "LT",
      "path": "8"
    },
    "6108": {
      "branch": 198,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22968,
        22994
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6109": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22968,
        23031
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6110": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22968,
        23031
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6111": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22968,
        23031
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17E8"
    },
    "6114": {
      "branch": 198,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22968,
        23031
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6115": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22968,
        23031
      ],
      "op": "POP",
      "path": "8"
    },
    "6116": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23018,
        23031
      ],
      "op": "DUP8",
      "path": "8"
    },
    "6117": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22998,
        23014
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6118": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22998,
        23031
      ],
      "op": "LT",
      "path": "8"
    },
    "6119": {
      "branch": 199,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22998,
        23031
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6120": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22968,
        23031
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6121": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22943,
        23045
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17F1"
    },
    "6124": {
      "branch": 199,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22943,
        23045
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6125": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22943,
        23045
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6127": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22943,
        23045
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6128": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22943,
        23045
      ],
      "op": "REVERT",
      "path": "8"
    },
    "6129": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22943,
        23045
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6130": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23059,
        23094
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 67,
      "value": "0x17FB"
    },
    "6133": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23065,
        23075
      ],
      "op": "CALLER",
      "path": "8"
    },
    "6134": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23077,
        23093
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6135": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23059,
        23064
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x28BF"
    },
    "6138": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        23059,
        23094
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6139": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23059,
        23094
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6140": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23138
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 68,
      "value": "0x6"
    },
    "6142": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23138
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6143": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6145": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6146": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6151": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6153": {
      "op": "SHL"
    },
    "6154": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6155": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6162": {
      "op": "SHL"
    },
    "6163": {
      "op": "SUB"
    },
    "6164": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23138
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6165": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23138
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6166": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23138
      ],
      "op": "AND",
      "path": "8"
    },
    "6167": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23138
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6168": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23151
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "6173": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23151
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6174": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x182F"
    },
    "6177": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6178": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23152,
        23162
      ],
      "op": "CALLER",
      "path": "8"
    },
    "6179": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23152,
        23162
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6180": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23172,
        23176
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "6181": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23172,
        23176
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6182": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23179,
        23191
      ],
      "op": "DUP10",
      "path": "8"
    },
    "6183": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23179,
        23191
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6184": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6186": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "ADD",
      "path": "8"
    },
    "6187": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3254"
    },
    "6190": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        23133,
        23192
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6191": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6192": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6194": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6196": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6197": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6198": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6199": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "SUB",
      "path": "8"
    },
    "6200": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6201": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6203": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "DUP8",
      "path": "8"
    },
    "6204": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "GAS",
      "path": "8"
    },
    "6205": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "CALL",
      "path": "8"
    },
    "6206": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6207": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6208": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6209": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x184E"
    },
    "6212": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6213": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "6214": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6216": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6217": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "6218": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "6219": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6221": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "REVERT",
      "path": "8"
    },
    "6222": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6223": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "POP",
      "path": "8"
    },
    "6224": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "POP",
      "path": "8"
    },
    "6225": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "POP",
      "path": "8"
    },
    "6226": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "POP",
      "path": "8"
    },
    "6227": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6229": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6230": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "6231": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "6233": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "NOT",
      "path": "8"
    },
    "6234": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "6236": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6237": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "ADD",
      "path": "8"
    },
    "6238": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "AND",
      "path": "8"
    },
    "6239": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6240": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "ADD",
      "path": "8"
    },
    "6241": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6242": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6244": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6245": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "POP",
      "path": "8"
    },
    "6246": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6247": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "ADD",
      "path": "8"
    },
    "6248": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6249": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1872"
    },
    "6252": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6253": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6254": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x317F"
    },
    "6257": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        23133,
        23192
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6258": {
      "branch": 200,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23133,
        23192
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6259": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23108,
        23206
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x187B"
    },
    "6262": {
      "branch": 200,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23108,
        23206
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6263": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23108,
        23206
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6265": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23108,
        23206
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6266": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23108,
        23206
      ],
      "op": "REVERT",
      "path": "8"
    },
    "6267": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23108,
        23206
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6268": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23226,
        23277
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 69,
      "value": "0x40"
    },
    "6270": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23226,
        23277
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6271": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23264,
        23276
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6272": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23264,
        23276
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6273": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23253,
        23262
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6274": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23253,
        23262
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6275": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23241,
        23251
      ],
      "op": "CALLER",
      "path": "8"
    },
    "6276": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23241,
        23251
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6277": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23226,
        23277
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x6059FEE843FF0198392EEF05D3FD97A79C42B66D197DBFC62EBDF25CF1698444"
    },
    "6310": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23226,
        23277
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6311": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23226,
        23277
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6313": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23226,
        23277
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6314": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23226,
        23277
      ],
      "op": "LOG4",
      "path": "8"
    },
    "6315": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23330,
        23340
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 70
    },
    "6316": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6319": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6321": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6323": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6325": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6326": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6328": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6329": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6330": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6331": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23296,
        23342
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6333": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23296,
        23342
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6334": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23308,
        23318
      ],
      "op": "CALLER",
      "path": "8"
    },
    "6335": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23308,
        23318
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6338": {
      "op": "DUP1"
    },
    "6339": {
      "op": "MLOAD"
    },
    "6340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6342": {
      "op": "PUSH2",
      "value": "0x3279"
    },
    "6345": {
      "op": "DUP4"
    },
    "6346": {
      "op": "CODECOPY"
    },
    "6347": {
      "op": "DUP2"
    },
    "6348": {
      "op": "MLOAD"
    },
    "6349": {
      "op": "SWAP2"
    },
    "6350": {
      "op": "MSTORE"
    },
    "6351": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23296,
        23342
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6352": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23296,
        23342
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6354": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23296,
        23342
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6355": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23296,
        23342
      ],
      "op": "LOG3",
      "path": "8"
    },
    "6356": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23361,
        23411
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 71,
      "value": "0x40"
    },
    "6358": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23361,
        23411
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6359": {
      "op": "DUP2"
    },
    "6360": {
      "op": "DUP2"
    },
    "6361": {
      "op": "MSTORE"
    },
    "6362": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23382,
        23392
      ],
      "op": "CALLER",
      "path": "8"
    },
    "6363": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23382,
        23392
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6364": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23378,
        23379
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6366": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23378,
        23379
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6369": {
      "op": "DUP1"
    },
    "6370": {
      "op": "MLOAD"
    },
    "6371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6373": {
      "op": "PUSH2",
      "value": "0x3299"
    },
    "6376": {
      "op": "DUP4"
    },
    "6377": {
      "op": "CODECOPY"
    },
    "6378": {
      "op": "DUP2"
    },
    "6379": {
      "op": "MLOAD"
    },
    "6380": {
      "op": "SWAP2"
    },
    "6381": {
      "op": "MSTORE"
    },
    "6382": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23361,
        23411
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6385": {
      "op": "ADD"
    },
    "6386": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23361,
        23411
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6388": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23361,
        23411
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6389": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23361,
        23411
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6390": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23361,
        23411
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6391": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23361,
        23411
      ],
      "op": "SUB",
      "path": "8"
    },
    "6392": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23361,
        23411
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6393": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23361,
        23411
      ],
      "op": "LOG3",
      "path": "8"
    },
    "6394": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23432,
        23448
      ],
      "op": "SWAP5",
      "path": "8",
      "statement": 72
    },
    "6395": {
      "op": "POP"
    },
    "6396": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23425,
        23448
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCF3"
    },
    "6399": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23425,
        23448
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "6400": {
      "op": "POP"
    },
    "6401": {
      "op": "POP"
    },
    "6402": {
      "op": "POP"
    },
    "6403": {
      "op": "POP"
    },
    "6404": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23425,
        23448
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6405": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        22550,
        24050
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6406": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23500,
        23507
      ],
      "op": "PUSH8",
      "path": "8",
      "statement": 73,
      "value": "0xDE0B6B3A7640000"
    },
    "6415": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23487,
        23496
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6416": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23487,
        23507
      ],
      "op": "LT",
      "path": "8"
    },
    "6417": {
      "branch": 201,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23487,
        23507
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6418": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23479,
        23525
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x194D"
    },
    "6421": {
      "branch": 201,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23479,
        23525
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6422": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23479,
        23525
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6424": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23479,
        23525
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6425": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6429": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6431": {
      "op": "SHL"
    },
    "6432": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23479,
        23525
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6433": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23479,
        23525
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6436": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23479,
        23525
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6438": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23479,
        23525
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6439": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23479,
        23525
      ],
      "op": "ADD",
      "path": "8"
    },
    "6440": {
      "op": "MSTORE"
    },
    "6441": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "6443": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6445": {
      "op": "DUP3"
    },
    "6446": {
      "op": "ADD"
    },
    "6447": {
      "op": "MSTORE"
    },
    "6448": {
      "op": "PUSH13",
      "value": "0x494E56414C49445F56414C5545"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "6464": {
      "op": "SHL"
    },
    "6465": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6467": {
      "op": "DUP3"
    },
    "6468": {
      "op": "ADD"
    },
    "6469": {
      "op": "MSTORE"
    },
    "6470": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6472": {
      "op": "ADD"
    },
    "6473": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23479,
        23525
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9B2"
    },
    "6476": {
      "op": "JUMP"
    },
    "6477": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23479,
        23525
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6478": {
      "op": "POP"
    },
    "6479": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23554,
        23564
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 74
    },
    "6480": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23606,
        23627
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "6481": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23641,
        23683
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 75,
      "value": "0x195A"
    },
    "6484": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23653,
        23663
      ],
      "op": "CALLER",
      "path": "8"
    },
    "6485": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23606,
        23627
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6486": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23641,
        23652
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x28BF"
    },
    "6489": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        23641,
        23683
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6490": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23641,
        23683
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6491": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23727
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 76,
      "value": "0x6"
    },
    "6493": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23727
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6494": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6496": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6497": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6504": {
      "op": "SHL"
    },
    "6505": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6506": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6513": {
      "op": "SHL"
    },
    "6514": {
      "op": "SUB"
    },
    "6515": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23727
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6516": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23727
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6517": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23727
      ],
      "op": "AND",
      "path": "8"
    },
    "6518": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23727
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6519": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23740
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "6524": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23740
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6525": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x198E"
    },
    "6528": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6529": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23741,
        23751
      ],
      "op": "CALLER",
      "path": "8"
    },
    "6530": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23741,
        23751
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6531": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23761,
        23765
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "6532": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23761,
        23765
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6533": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23768,
        23780
      ],
      "op": "DUP8",
      "path": "8"
    },
    "6534": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23768,
        23780
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6535": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6537": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "ADD",
      "path": "8"
    },
    "6538": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3254"
    },
    "6541": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        23722,
        23781
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6542": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6543": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6545": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6547": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6548": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6549": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6550": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "SUB",
      "path": "8"
    },
    "6551": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6552": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6554": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "DUP8",
      "path": "8"
    },
    "6555": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "GAS",
      "path": "8"
    },
    "6556": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "CALL",
      "path": "8"
    },
    "6557": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6558": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6559": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6560": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x19AD"
    },
    "6563": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6564": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "6565": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6567": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6568": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "6569": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "6570": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6572": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "REVERT",
      "path": "8"
    },
    "6573": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6574": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "POP",
      "path": "8"
    },
    "6575": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "POP",
      "path": "8"
    },
    "6576": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "POP",
      "path": "8"
    },
    "6577": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "POP",
      "path": "8"
    },
    "6578": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6580": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6581": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "6582": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "6584": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "NOT",
      "path": "8"
    },
    "6585": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "6587": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6588": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "ADD",
      "path": "8"
    },
    "6589": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "AND",
      "path": "8"
    },
    "6590": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6591": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "ADD",
      "path": "8"
    },
    "6592": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6593": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6595": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6596": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "POP",
      "path": "8"
    },
    "6597": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6598": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "ADD",
      "path": "8"
    },
    "6599": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6600": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x19D1"
    },
    "6603": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6604": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6605": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x317F"
    },
    "6608": {
      "fn": "StakeFountain.addLiquidity",
      "jump": "i",
      "offset": [
        23722,
        23781
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6609": {
      "branch": 202,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23722,
        23781
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6610": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23697,
        23795
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x19DA"
    },
    "6613": {
      "branch": 202,
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23697,
        23795
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6614": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23697,
        23795
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6616": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23697,
        23795
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6617": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23697,
        23795
      ],
      "op": "REVERT",
      "path": "8"
    },
    "6618": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23697,
        23795
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6619": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23815,
        23866
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 77,
      "value": "0x40"
    },
    "6621": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23815,
        23866
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6622": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23853,
        23865
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6623": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23853,
        23865
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6624": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23842,
        23851
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6625": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23842,
        23851
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6626": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23830,
        23840
      ],
      "op": "CALLER",
      "path": "8"
    },
    "6627": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23830,
        23840
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6628": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23815,
        23866
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x6059FEE843FF0198392EEF05D3FD97A79C42B66D197DBFC62EBDF25CF1698444"
    },
    "6661": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23815,
        23866
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6662": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23815,
        23866
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6664": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23815,
        23866
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6665": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23815,
        23866
      ],
      "op": "LOG4",
      "path": "8"
    },
    "6666": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23919,
        23929
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 78
    },
    "6667": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6669": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6670": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6671": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6672": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6674": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6675": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6676": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6677": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6679": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6680": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6681": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6682": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23885,
        23931
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6684": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23885,
        23931
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6685": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23897,
        23907
      ],
      "op": "CALLER",
      "path": "8"
    },
    "6686": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23897,
        23907
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6689": {
      "op": "DUP1"
    },
    "6690": {
      "op": "MLOAD"
    },
    "6691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6693": {
      "op": "PUSH2",
      "value": "0x3279"
    },
    "6696": {
      "op": "DUP4"
    },
    "6697": {
      "op": "CODECOPY"
    },
    "6698": {
      "op": "DUP2"
    },
    "6699": {
      "op": "MLOAD"
    },
    "6700": {
      "op": "SWAP2"
    },
    "6701": {
      "op": "MSTORE"
    },
    "6702": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23885,
        23931
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6703": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23885,
        23931
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6705": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23885,
        23931
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6706": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23885,
        23931
      ],
      "op": "LOG3",
      "path": "8"
    },
    "6707": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23950,
        24001
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 79,
      "value": "0x40"
    },
    "6709": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23950,
        24001
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6710": {
      "op": "DUP2"
    },
    "6711": {
      "op": "DUP2"
    },
    "6712": {
      "op": "MSTORE"
    },
    "6713": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23971,
        23981
      ],
      "op": "CALLER",
      "path": "8"
    },
    "6714": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23971,
        23981
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6715": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23967,
        23968
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6717": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23967,
        23968
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6720": {
      "op": "DUP1"
    },
    "6721": {
      "op": "MLOAD"
    },
    "6722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6724": {
      "op": "PUSH2",
      "value": "0x3299"
    },
    "6727": {
      "op": "DUP4"
    },
    "6728": {
      "op": "CODECOPY"
    },
    "6729": {
      "op": "DUP2"
    },
    "6730": {
      "op": "MLOAD"
    },
    "6731": {
      "op": "SWAP2"
    },
    "6732": {
      "op": "MSTORE"
    },
    "6733": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23950,
        24001
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6736": {
      "op": "ADD"
    },
    "6737": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23950,
        24001
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6739": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23950,
        24001
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6740": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23950,
        24001
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6741": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23950,
        24001
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6742": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23950,
        24001
      ],
      "op": "SUB",
      "path": "8"
    },
    "6743": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23950,
        24001
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6744": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        23950,
        24001
      ],
      "op": "LOG3",
      "path": "8"
    },
    "6745": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        24022,
        24039
      ],
      "op": "SWAP3",
      "path": "8",
      "statement": 80
    },
    "6746": {
      "op": "POP"
    },
    "6747": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        24015,
        24039
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCF3"
    },
    "6750": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        24015,
        24039
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6751": {
      "op": "POP"
    },
    "6752": {
      "op": "POP"
    },
    "6753": {
      "fn": "StakeFountain.addLiquidity",
      "offset": [
        24015,
        24039
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6754": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6755": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20445
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 81,
      "value": "0x6"
    },
    "6757": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20445
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6758": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6760": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6761": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6766": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6768": {
      "op": "SHL"
    },
    "6769": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6770": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6771": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20464,
        20468
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "6772": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6774": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6775": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "ADD",
      "path": "8"
    },
    "6776": {
      "op": "MSTORE"
    },
    "6777": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20414,
        20421
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6779": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20414,
        20421
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6786": {
      "op": "SHL"
    },
    "6787": {
      "op": "SUB"
    },
    "6788": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20445
      ],
      "op": "AND",
      "path": "8"
    },
    "6789": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20445
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6790": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20455
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "6795": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20455
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6798": {
      "op": "ADD"
    },
    "6799": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6801": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6803": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6804": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6805": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6806": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "SUB",
      "path": "8"
    },
    "6807": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6808": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "DUP7",
      "path": "8"
    },
    "6809": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "GAS",
      "path": "8"
    },
    "6810": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "6811": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6812": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6813": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6814": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1AAB"
    },
    "6817": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6818": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "6819": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6821": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6822": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "6823": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "6824": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6826": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "REVERT",
      "path": "8"
    },
    "6827": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6828": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "POP",
      "path": "8"
    },
    "6829": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "POP",
      "path": "8"
    },
    "6830": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "POP",
      "path": "8"
    },
    "6831": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "POP",
      "path": "8"
    },
    "6832": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6834": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6835": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "6836": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "6838": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "NOT",
      "path": "8"
    },
    "6839": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "6841": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6842": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "ADD",
      "path": "8"
    },
    "6843": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "AND",
      "path": "8"
    },
    "6844": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6845": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "ADD",
      "path": "8"
    },
    "6846": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6847": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6849": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6850": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "POP",
      "path": "8"
    },
    "6851": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6852": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "ADD",
      "path": "8"
    },
    "6853": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6854": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1ACF"
    },
    "6857": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6858": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6859": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30F8"
    },
    "6862": {
      "fn": "StakeFountain.tokenBalance",
      "jump": "i",
      "offset": [
        20440,
        20470
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6863": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20440,
        20470
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6864": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20433,
        20470
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6865": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20433,
        20470
      ],
      "op": "POP",
      "path": "8"
    },
    "6866": {
      "fn": "StakeFountain.tokenBalance",
      "offset": [
        20369,
        20477
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6867": {
      "fn": "StakeFountain.tokenBalance",
      "jump": "o",
      "offset": [
        20369,
        20477
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6868": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3307,
        3404
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6869": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "6871": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6878": {
      "op": "SHL"
    },
    "6879": {
      "op": "SUB"
    },
    "6880": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6881": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "6882": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6883": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AFE"
    },
    "6886": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6887": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6889": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6896": {
      "op": "SHL"
    },
    "6897": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6898": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6899": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6901": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6902": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B2"
    },
    "6905": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6906": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31EE"
    },
    "6909": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6910": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6911": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3366,
        3376
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 82,
      "value": "0x7"
    },
    "6913": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3366,
        3397
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6914": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3366,
        3397
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6921": {
      "op": "SHL"
    },
    "6922": {
      "op": "SUB"
    },
    "6923": {
      "op": "NOT"
    },
    "6924": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3366,
        3397
      ],
      "op": "AND",
      "path": "8"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6931": {
      "op": "SHL"
    },
    "6932": {
      "op": "SUB"
    },
    "6933": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3366,
        3397
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6934": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3366,
        3397
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6935": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3366,
        3397
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6936": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3366,
        3397
      ],
      "op": "AND",
      "path": "8"
    },
    "6937": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3366,
        3397
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6938": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3366,
        3397
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6939": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3366,
        3397
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6940": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3366,
        3397
      ],
      "op": "OR",
      "path": "8"
    },
    "6941": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3366,
        3397
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6942": {
      "fn": "StakeFountain.setLock",
      "offset": [
        3366,
        3397
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "6943": {
      "fn": "StakeFountain.setLock",
      "jump": "o",
      "offset": [
        3307,
        3404
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6944": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6945": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "6946": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6948": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6949": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6950": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6951": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6781
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6953": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6955": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6956": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6957": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6958": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6960": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6961": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6962": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6969": {
      "op": "SHL"
    },
    "6970": {
      "op": "SUB"
    },
    "6971": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP8",
      "path": "1"
    },
    "6972": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "AND",
      "path": "1"
    },
    "6973": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6974": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6975": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6976": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6977": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6978": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6979": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6980": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6981": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6982": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6983": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6984": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 83
    },
    "6985": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6986": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "LT",
      "path": "1"
    },
    "6987": {
      "branch": 227,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6988": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BA5"
    },
    "6991": {
      "branch": 227,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6992": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6994": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6995": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6999": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7001": {
      "op": "SHL"
    },
    "7002": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7003": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7006": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7008": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7009": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "ADD",
      "path": "1"
    },
    "7010": {
      "op": "MSTORE"
    },
    "7011": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7013": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7015": {
      "op": "DUP3"
    },
    "7016": {
      "op": "ADD"
    },
    "7017": {
      "op": "MSTORE"
    },
    "7018": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "7051": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7053": {
      "op": "DUP3"
    },
    "7054": {
      "op": "ADD"
    },
    "7055": {
      "op": "MSTORE"
    },
    "7056": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "7062": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7064": {
      "op": "SHL"
    },
    "7065": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7067": {
      "op": "DUP3"
    },
    "7068": {
      "op": "ADD"
    },
    "7069": {
      "op": "MSTORE"
    },
    "7070": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7072": {
      "op": "ADD"
    },
    "7073": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B2"
    },
    "7076": {
      "op": "JUMP"
    },
    "7077": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7078": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6986
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 84,
      "value": "0xE8F"
    },
    "7081": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6935,
        6940
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7082": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6942,
        6949
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7083": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6970,
        6985
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7084": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6967
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7085": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6985
      ],
      "op": "SUB",
      "path": "1"
    },
    "7086": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6934
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EFA"
    },
    "7089": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6926,
        6986
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7090": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7091": {
      "fn": "ERC20.transfer",
      "offset": [
        3808,
        3812
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7093": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "7094": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3890
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 85,
      "value": "0xCED"
    },
    "7097": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7098": {
      "fn": "ERC20.transfer",
      "offset": [
        3879,
        3881
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7099": {
      "fn": "ERC20.transfer",
      "offset": [
        3883,
        3889
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7100": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3871
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x257D"
    },
    "7103": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3862,
        3890
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7104": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        8947,
        9143
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7105": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        9044,
        9051
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7107": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        9074,
        9136
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 86,
      "value": "0xCF3"
    },
    "7110": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        9090,
        9099
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "7111": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        9101,
        9111
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7112": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        9113,
        9123
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7113": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        9125,
        9135
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7114": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "offset": [
        9074,
        9089
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x968"
    },
    "7117": {
      "fn": "StakeFountain.bnbToTokenSwapInput",
      "jump": "i",
      "offset": [
        9074,
        9136
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7118": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4047,
        4363
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7119": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "7121": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7122": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4154,
        4166
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7124": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4154,
        4166
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7131": {
      "op": "SHL"
    },
    "7132": {
      "op": "SUB"
    },
    "7133": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7134": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "7135": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7136": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BFB"
    },
    "7139": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7140": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7142": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7143": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7149": {
      "op": "SHL"
    },
    "7150": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7151": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7152": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7154": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7155": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B2"
    },
    "7158": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7159": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31EE"
    },
    "7162": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7163": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7164": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4187,
        4196
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7166": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4182,
        4333
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7167": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4206,
        4211
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7168": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4206,
        4218
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7169": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4202,
        4203
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7170": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4202,
        4218
      ],
      "op": "LT",
      "path": "8"
    },
    "7171": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4182,
        4333
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7172": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4182,
        4333
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF11"
    },
    "7175": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4182,
        4333
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7176": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4243,
        4274
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C29"
    },
    "7179": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4270
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7180": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4271,
        4272
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7181": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7182": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7183": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7184": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "LT",
      "path": "8"
    },
    "7185": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C1C"
    },
    "7188": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7189": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C1C"
    },
    "7192": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3223"
    },
    "7195": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "jump": "i",
      "offset": [
        4265,
        4273
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7196": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7197": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7199": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "MUL",
      "path": "8"
    },
    "7200": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7202": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "ADD",
      "path": "8"
    },
    "7203": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "ADD",
      "path": "8"
    },
    "7204": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4265,
        4273
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7205": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4243,
        4264
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12DA"
    },
    "7208": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "jump": "i",
      "offset": [
        4243,
        4274
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7209": {
      "branch": 203,
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4243,
        4274
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7210": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4239,
        4323
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7211": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4239,
        4323
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C33"
    },
    "7214": {
      "branch": 203,
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4239,
        4323
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7215": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4304,
        4308
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 87,
      "value": "0x1"
    },
    "7217": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4294,
        4308
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7218": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4294,
        4308
      ],
      "op": "POP",
      "path": "8"
    },
    "7219": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4239,
        4323
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7220": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4220,
        4223
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 88
    },
    "7221": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4220,
        4223
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C3D"
    },
    "7224": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4220,
        4223
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7225": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4220,
        4223
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3239"
    },
    "7228": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "jump": "i",
      "offset": [
        4220,
        4223
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7229": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4220,
        4223
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7230": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4220,
        4223
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7231": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4220,
        4223
      ],
      "op": "POP",
      "path": "8"
    },
    "7232": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4220,
        4223
      ],
      "op": "POP",
      "path": "8"
    },
    "7233": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4182,
        4333
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1BFE"
    },
    "7236": {
      "fn": "StakeFountain.addAddressesToWhitelist",
      "offset": [
        4182,
        4333
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7237": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7238": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "7240": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7247": {
      "op": "SHL"
    },
    "7248": {
      "op": "SUB"
    },
    "7249": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7250": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "7251": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7252": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6F"
    },
    "7255": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7256": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7258": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7259": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7263": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7265": {
      "op": "SHL"
    },
    "7266": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7267": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7268": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7270": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7271": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B2"
    },
    "7274": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7275": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31EE"
    },
    "7278": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7279": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7286": {
      "op": "SHL"
    },
    "7287": {
      "op": "SUB"
    },
    "7288": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 89
    },
    "7289": {
      "branch": 238,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "7290": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CD4"
    },
    "7293": {
      "branch": 238,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7294": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7296": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7297": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7301": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7303": {
      "op": "SHL"
    },
    "7304": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7305": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7308": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7310": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7311": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "7312": {
      "op": "MSTORE"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7315": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7317": {
      "op": "DUP3"
    },
    "7318": {
      "op": "ADD"
    },
    "7319": {
      "op": "MSTORE"
    },
    "7320": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "7353": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7355": {
      "op": "DUP3"
    },
    "7356": {
      "op": "ADD"
    },
    "7357": {
      "op": "MSTORE"
    },
    "7358": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "7365": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7367": {
      "op": "SHL"
    },
    "7368": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7370": {
      "op": "DUP3"
    },
    "7371": {
      "op": "ADD"
    },
    "7372": {
      "op": "MSTORE"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7375": {
      "op": "ADD"
    },
    "7376": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B2"
    },
    "7379": {
      "op": "JUMP"
    },
    "7380": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7381": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 90,
      "value": "0x1CDD"
    },
    "7384": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7385": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2739"
    },
    "7388": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7389": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7390": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "7391": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7392": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13194,
        13391
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7393": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13293,
        13300
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7395": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13323,
        13384
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 91,
      "value": "0xD81"
    },
    "7398": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13339,
        13350
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7399": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13352,
        13359
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7400": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13361,
        13371
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7401": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13373,
        13383
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7402": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "offset": [
        13323,
        13338
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x298C"
    },
    "7405": {
      "fn": "StakeFountain.tokenToBnbSwapInput",
      "jump": "i",
      "offset": [
        13323,
        13384
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7406": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6696,
        7084
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7407": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6841,
        6848
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7409": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6884,
        6885
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 92
    },
    "7410": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6868,
        6881
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7411": {
      "branch": 204,
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6868,
        6885
      ],
      "op": "GT",
      "path": "8"
    },
    "7412": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6868,
        6907
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7413": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6868,
        6907
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7414": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6868,
        6907
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CFF"
    },
    "7417": {
      "branch": 204,
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6868,
        6907
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7418": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6868,
        6907
      ],
      "op": "POP",
      "path": "8"
    },
    "7419": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6906,
        6907
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7421": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6889,
        6903
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7422": {
      "branch": 205,
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6889,
        6907
      ],
      "op": "GT",
      "path": "8"
    },
    "7423": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6868,
        6907
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7424": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6860,
        6908
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D08"
    },
    "7427": {
      "branch": 205,
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6860,
        6908
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7428": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6860,
        6908
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7430": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6860,
        6908
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7431": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6860,
        6908
      ],
      "op": "REVERT",
      "path": "8"
    },
    "7432": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6860,
        6908
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7433": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6918,
        6935
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7435": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6938,
        6967
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D14"
    },
    "7438": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6954,
        6967
      ],
      "op": "DUP6",
      "path": "8"
    },
    "7439": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6938,
        6951
      ],
      "op": "DUP6",
      "path": "8"
    },
    "7440": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6938,
        6967
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "7443": {
      "fn": "StakeFountain.getOutputPrice",
      "jump": "i",
      "offset": [
        6938,
        6967
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7444": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6938,
        6967
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7445": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6918,
        6967
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7446": {
      "op": "POP"
    },
    "7447": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6977,
        6996
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7449": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        7000,
        7030
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D22"
    },
    "7452": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        7017,
        7030
      ],
      "op": "DUP7",
      "path": "8"
    },
    "7453": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        7000,
        7014
      ],
      "op": "DUP6",
      "path": "8"
    },
    "7454": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        7000,
        7030
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3168"
    },
    "7457": {
      "fn": "StakeFountain.getOutputPrice",
      "jump": "i",
      "offset": [
        7000,
        7030
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7458": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        7000,
        7030
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7459": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6977,
        7031
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7460": {
      "op": "POP"
    },
    "7461": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        7049,
        7072
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 93,
      "value": "0x1D2E"
    },
    "7464": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        6977,
        7031
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7465": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        7049,
        7058
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7466": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        7049,
        7072
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "7469": {
      "fn": "StakeFountain.getOutputPrice",
      "jump": "i",
      "offset": [
        7049,
        7072
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7470": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        7049,
        7072
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7471": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        7048,
        7077
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x162C"
    },
    "7474": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        7048,
        7077
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7475": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        7076,
        7077
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "7477": {
      "fn": "StakeFountain.getOutputPrice",
      "offset": [
        7048,
        7077
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31D6"
    },
    "7480": {
      "fn": "StakeFountain.getOutputPrice",
      "jump": "i",
      "offset": [
        7048,
        7077
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7481": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15595,
        15873
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7482": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15730,
        15731
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 94,
      "value": "0x0"
    },
    "7484": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15714,
        15727
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7485": {
      "branch": 206,
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15714,
        15731
      ],
      "op": "GT",
      "path": "8"
    },
    "7486": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15706,
        15732
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D46"
    },
    "7489": {
      "branch": 206,
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15706,
        15732
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7490": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15706,
        15732
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7492": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15706,
        15732
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7493": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15706,
        15732
      ],
      "op": "REVERT",
      "path": "8"
    },
    "7494": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15706,
        15732
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7495": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15764,
        15772
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "7497": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15764,
        15772
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7498": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7500": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7501": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15743,
        15750
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7503": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15743,
        15750
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7510": {
      "op": "SHL"
    },
    "7511": {
      "op": "SUB"
    },
    "7512": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15764,
        15772
      ],
      "op": "AND",
      "path": "8"
    },
    "7513": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15764,
        15772
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7514": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15786,
        15799
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7515": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15786,
        15799
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7516": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15743,
        15750
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7517": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7518": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15743,
        15750
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7519": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7520": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15786,
        15799
      ],
      "op": "DUP6",
      "path": "8"
    },
    "7521": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15764,
        15772
      ],
      "op": "DUP8",
      "path": "8"
    },
    "7522": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "GAS",
      "path": "8"
    },
    "7523": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "CALL",
      "path": "8"
    },
    "7524": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7525": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "POP",
      "path": "8"
    },
    "7526": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "POP",
      "path": "8"
    },
    "7527": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "POP",
      "path": "8"
    },
    "7528": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "7529": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7530": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7532": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7533": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "EQ",
      "path": "8"
    },
    "7534": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D93"
    },
    "7537": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7538": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7540": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7541": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7542": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "POP",
      "path": "8"
    },
    "7543": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "7545": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "NOT",
      "path": "8"
    },
    "7546": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3F"
    },
    "7548": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "7549": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "ADD",
      "path": "8"
    },
    "7550": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "AND",
      "path": "8"
    },
    "7551": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7552": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "ADD",
      "path": "8"
    },
    "7553": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7555": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7556": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "7557": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7558": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7559": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "7560": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7562": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7564": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7565": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "ADD",
      "path": "8"
    },
    "7566": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "7567": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D98"
    },
    "7570": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7571": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7572": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "7574": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7575": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "POP",
      "path": "8"
    },
    "7576": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7577": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15756,
        15804
      ],
      "op": "POP",
      "path": "8"
    },
    "7578": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15742,
        15804
      ],
      "op": "POP",
      "path": "8"
    },
    "7579": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15742,
        15804
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7580": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15742,
        15804
      ],
      "op": "POP",
      "path": "8"
    },
    "7581": {
      "branch": 207,
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15822,
        15824
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 95
    },
    "7582": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15814,
        15825
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DA6"
    },
    "7585": {
      "branch": 207,
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15814,
        15825
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7586": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15814,
        15825
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7588": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15814,
        15825
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7589": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15814,
        15825
      ],
      "op": "REVERT",
      "path": "8"
    },
    "7590": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15814,
        15825
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7591": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15840,
        15866
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 96,
      "value": "0x40"
    },
    "7593": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15840,
        15866
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7594": {
      "op": "DUP3"
    },
    "7595": {
      "op": "DUP2"
    },
    "7596": {
      "op": "MSTORE"
    },
    "7597": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15840,
        15866
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xC328594CAB3A117E8DDF861647E12C326EB6FA98AB8F707982AD7A13E8264C7C"
    },
    "7630": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15840,
        15866
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7633": {
      "op": "ADD"
    },
    "7634": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15840,
        15866
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7636": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15840,
        15866
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7637": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15840,
        15866
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7638": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15840,
        15866
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7639": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15840,
        15866
      ],
      "op": "SUB",
      "path": "8"
    },
    "7640": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15840,
        15866
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7641": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15840,
        15866
      ],
      "op": "LOG1",
      "path": "8"
    },
    "7642": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15656,
        15873
      ],
      "op": "POP",
      "path": "8"
    },
    "7643": {
      "fn": "StakeFountain.transferTreasuryFee",
      "offset": [
        15595,
        15873
      ],
      "op": "POP",
      "path": "8"
    },
    "7644": {
      "fn": "StakeFountain.transferTreasuryFee",
      "jump": "o",
      "offset": [
        15595,
        15873
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7645": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15007,
        15441
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7646": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15053,
        15066
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7648": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15069,
        15099
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DF0"
    },
    "7651": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15094,
        15098
      ],
      "op": "PUSH8",
      "path": "8",
      "value": "0xDE0B6B3A7640000"
    },
    "7660": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15069,
        15093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x104B"
    },
    "7663": {
      "fn": "StakeFountain.trackGlobalStats",
      "jump": "i",
      "offset": [
        15069,
        15099
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7664": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15069,
        15099
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7665": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15187,
        15204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xD"
    },
    "7667": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15187,
        15204
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7668": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15172,
        15184
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xC"
    },
    "7670": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15172,
        15184
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7671": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15053,
        15099
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7672": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15053,
        15099
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7673": {
      "op": "POP"
    },
    "7674": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20335,
        20356
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "7675": {
      "fn": "StakeFountain.bnbBalance",
      "offset": [
        20335,
        20356
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7676": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15154,
        15184
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E05"
    },
    "7679": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15154,
        15184
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7680": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15154,
        15169
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "7681": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15154,
        15184
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3168"
    },
    "7684": {
      "fn": "StakeFountain.trackGlobalStats",
      "jump": "i",
      "offset": [
        15154,
        15184
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7685": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15154,
        15184
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7686": {
      "branch": 208,
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15154,
        15204
      ],
      "op": "GT",
      "path": "8"
    },
    "7687": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15150,
        15309
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7688": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15150,
        15309
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E53"
    },
    "7691": {
      "branch": 208,
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15150,
        15309
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7692": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15225,
        15254
      ],
      "op": "PUSH32",
      "path": "8",
      "statement": 97,
      "value": "0xAFFEBBDD31C6253AE2EA132D4A132D79B3AD07ED2720B51749AA97330A7BDB13"
    },
    "7725": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15235,
        15246
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E37"
    },
    "7728": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15235,
        15242
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7729": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15245,
        15246
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "7731": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15235,
        15246
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "7734": {
      "fn": "StakeFountain.trackGlobalStats",
      "jump": "i",
      "offset": [
        15235,
        15246
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7735": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15235,
        15246
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7736": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15225,
        15254
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7738": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15225,
        15254
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7739": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15225,
        15254
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7740": {
      "op": "SWAP2"
    },
    "7741": {
      "op": "DUP3"
    },
    "7742": {
      "op": "MSTORE"
    },
    "7743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7745": {
      "op": "DUP3"
    },
    "7746": {
      "op": "ADD"
    },
    "7747": {
      "op": "DUP6"
    },
    "7748": {
      "op": "SWAP1"
    },
    "7749": {
      "op": "MSTORE"
    },
    "7750": {
      "op": "ADD"
    },
    "7751": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15225,
        15254
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7753": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15225,
        15254
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7754": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15225,
        15254
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7755": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15225,
        15254
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7756": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15225,
        15254
      ],
      "op": "SUB",
      "path": "8"
    },
    "7757": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15225,
        15254
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7758": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15225,
        15254
      ],
      "op": "LOG1",
      "path": "8"
    },
    "7759": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15283,
        15298
      ],
      "op": "TIMESTAMP",
      "path": "8",
      "statement": 98
    },
    "7760": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15268,
        15280
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xC"
    },
    "7762": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15268,
        15298
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7763": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15150,
        15309
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7764": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15324,
        15350
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 99,
      "value": "0x40"
    },
    "7766": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15324,
        15350
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7767": {
      "op": "DUP2"
    },
    "7768": {
      "op": "DUP2"
    },
    "7769": {
      "op": "MSTORE"
    },
    "7770": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15324,
        15350
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x75F52E89B275BDAED7CEB1586A0C5AC0503A27A09EA92F74DD81DB37FA840282"
    },
    "7803": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15324,
        15350
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7806": {
      "op": "ADD"
    },
    "7807": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15324,
        15350
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7809": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15324,
        15350
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7810": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15324,
        15350
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7811": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15324,
        15350
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7812": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15324,
        15350
      ],
      "op": "SUB",
      "path": "8"
    },
    "7813": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15324,
        15350
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7814": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15324,
        15350
      ],
      "op": "LOG1",
      "path": "8"
    },
    "7815": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15365,
        15379
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 100,
      "value": "0x40"
    },
    "7817": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15365,
        15379
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7818": {
      "op": "DUP3"
    },
    "7819": {
      "op": "DUP2"
    },
    "7820": {
      "op": "MSTORE"
    },
    "7821": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15365,
        15379
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x26632EDB369F47EB451A281FAD73CA0A52CFA3109E457A64524535839486AC6D"
    },
    "7854": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15365,
        15379
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7857": {
      "op": "ADD"
    },
    "7858": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15365,
        15379
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7860": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15365,
        15379
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7861": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15365,
        15379
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7862": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15365,
        15379
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7863": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15365,
        15379
      ],
      "op": "SUB",
      "path": "8"
    },
    "7864": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15365,
        15379
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7865": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15365,
        15379
      ],
      "op": "LOG1",
      "path": "8"
    },
    "7866": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15402,
        15403
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 101,
      "value": "0x1"
    },
    "7868": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15390,
        15398
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xB"
    },
    "7870": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15390,
        15398
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7872": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15390,
        15403
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7873": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15390,
        15403
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7874": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15390,
        15403
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7875": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15390,
        15403
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1ECC"
    },
    "7878": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15390,
        15403
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7879": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15390,
        15403
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7880": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15390,
        15403
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31D6"
    },
    "7883": {
      "fn": "StakeFountain.trackGlobalStats",
      "jump": "i",
      "offset": [
        15390,
        15403
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7884": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15390,
        15403
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7885": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15390,
        15403
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7886": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15390,
        15403
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7887": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15390,
        15403
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7888": {
      "op": "POP"
    },
    "7889": {
      "op": "POP"
    },
    "7890": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15418,
        15428
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 102
    },
    "7891": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15429
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7893": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15429
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7894": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15429
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7895": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15429
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7896": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15417
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x11"
    },
    "7898": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15429
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7900": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15429
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7901": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15429
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7903": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15429
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7904": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15429
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7905": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15434
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7906": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15434
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7907": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15433,
        15434
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "7909": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15433,
        15434
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7910": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15429
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7911": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15434
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1EF1"
    },
    "7914": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15434
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7915": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15433,
        15434
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7916": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15433,
        15434
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7917": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15434
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31D6"
    },
    "7920": {
      "fn": "StakeFountain.trackGlobalStats",
      "jump": "i",
      "offset": [
        15413,
        15434
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7921": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15434
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7922": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15434
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7923": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15434
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7924": {
      "fn": "StakeFountain.trackGlobalStats",
      "offset": [
        15413,
        15434
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7925": {
      "op": "POP"
    },
    "7926": {
      "op": "POP"
    },
    "7927": {
      "op": "POP"
    },
    "7928": {
      "op": "POP"
    },
    "7929": {
      "fn": "StakeFountain.trackGlobalStats",
      "jump": "o",
      "offset": [
        15007,
        15441
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7930": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7937": {
      "op": "SHL"
    },
    "7938": {
      "op": "SUB"
    },
    "7939": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 103
    },
    "7940": {
      "branch": 228,
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "AND",
      "path": "1"
    },
    "7941": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F5C"
    },
    "7944": {
      "branch": 228,
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7945": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7947": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7948": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7952": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7954": {
      "op": "SHL"
    },
    "7955": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7956": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7959": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7961": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7962": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "ADD",
      "path": "1"
    },
    "7963": {
      "op": "MSTORE"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7966": {
      "op": "DUP1"
    },
    "7967": {
      "op": "DUP3"
    },
    "7968": {
      "op": "ADD"
    },
    "7969": {
      "op": "MSTORE"
    },
    "7970": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "8003": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8005": {
      "op": "DUP3"
    },
    "8006": {
      "op": "ADD"
    },
    "8007": {
      "op": "MSTORE"
    },
    "8008": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8015": {
      "op": "SHL"
    },
    "8016": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8018": {
      "op": "DUP3"
    },
    "8019": {
      "op": "ADD"
    },
    "8020": {
      "op": "MSTORE"
    },
    "8021": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8023": {
      "op": "ADD"
    },
    "8024": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B2"
    },
    "8027": {
      "op": "JUMP"
    },
    "8028": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8035": {
      "op": "SHL"
    },
    "8036": {
      "op": "SUB"
    },
    "8037": {
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 104
    },
    "8038": {
      "branch": 229,
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "AND",
      "path": "1"
    },
    "8039": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FBD"
    },
    "8042": {
      "branch": 229,
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8043": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8045": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8046": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8050": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8052": {
      "op": "SHL"
    },
    "8053": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8054": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8057": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8059": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8060": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "ADD",
      "path": "1"
    },
    "8061": {
      "op": "MSTORE"
    },
    "8062": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8064": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8066": {
      "op": "DUP3"
    },
    "8067": {
      "op": "ADD"
    },
    "8068": {
      "op": "MSTORE"
    },
    "8069": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "8102": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8104": {
      "op": "DUP3"
    },
    "8105": {
      "op": "ADD"
    },
    "8106": {
      "op": "MSTORE"
    },
    "8107": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "8110": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8112": {
      "op": "SHL"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8115": {
      "op": "DUP3"
    },
    "8116": {
      "op": "ADD"
    },
    "8117": {
      "op": "MSTORE"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8120": {
      "op": "ADD"
    },
    "8121": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B2"
    },
    "8124": {
      "op": "JUMP"
    },
    "8125": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8132": {
      "op": "SHL"
    },
    "8133": {
      "op": "SUB"
    },
    "8134": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 105
    },
    "8135": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8136": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "AND",
      "path": "1"
    },
    "8137": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8139": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8140": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8141": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8142": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8144": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8146": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8147": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8148": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8149": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8151": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8152": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8153": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8154": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "8155": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8156": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "AND",
      "path": "1"
    },
    "8157": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8158": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8159": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8160": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "8161": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8162": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8163": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8164": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8165": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8166": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8167": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8168": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8169": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8170": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 106
    },
    "8171": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8172": {
      "op": "DUP5"
    },
    "8173": {
      "op": "DUP2"
    },
    "8174": {
      "op": "MSTORE"
    },
    "8175": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "8208": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8209": {
      "op": "ADD"
    },
    "8210": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8211": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8213": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8214": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8215": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8216": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SUB",
      "path": "1"
    },
    "8217": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8218": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "LOG3",
      "path": "1"
    },
    "8219": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "1"
    },
    "8220": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "1"
    },
    "8221": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "1"
    },
    "8222": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8223": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13397,
        14546
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8224": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13552,
        13559
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8226": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13592,
        13593
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 107
    },
    "8227": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13579,
        13589
      ],
      "op": "DUP6",
      "path": "8"
    },
    "8228": {
      "branch": 209,
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13579,
        13593
      ],
      "op": "GT",
      "path": "8"
    },
    "8229": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13571,
        13594
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x202D"
    },
    "8232": {
      "branch": 209,
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13571,
        13594
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8233": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13571,
        13594
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8235": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13571,
        13594
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8236": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13571,
        13594
      ],
      "op": "REVERT",
      "path": "8"
    },
    "8237": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13571,
        13594
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8238": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13633
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "8240": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13633
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8241": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8243": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8244": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "8249": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8251": {
      "op": "SHL"
    },
    "8252": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8253": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8254": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13652,
        13656
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "8255": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "8257": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8258": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "ADD",
      "path": "8"
    },
    "8259": {
      "op": "MSTORE"
    },
    "8260": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13604,
        13625
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8262": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13604,
        13625
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8269": {
      "op": "SHL"
    },
    "8270": {
      "op": "SUB"
    },
    "8271": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13633
      ],
      "op": "AND",
      "path": "8"
    },
    "8272": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13633
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8273": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13643
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "8278": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13643
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8279": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8281": {
      "op": "ADD"
    },
    "8282": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8284": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8286": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8287": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8288": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "DUP4",
      "path": "8"
    },
    "8289": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "SUB",
      "path": "8"
    },
    "8290": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8291": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "DUP7",
      "path": "8"
    },
    "8292": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "GAS",
      "path": "8"
    },
    "8293": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "8294": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8295": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8296": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8297": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2076"
    },
    "8300": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8301": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "8302": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8304": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8305": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "8306": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "8307": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8309": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "REVERT",
      "path": "8"
    },
    "8310": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8311": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "POP",
      "path": "8"
    },
    "8312": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "POP",
      "path": "8"
    },
    "8313": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "POP",
      "path": "8"
    },
    "8314": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "POP",
      "path": "8"
    },
    "8315": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8317": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8318": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "8319": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "8321": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "NOT",
      "path": "8"
    },
    "8322": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "8324": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8325": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "ADD",
      "path": "8"
    },
    "8326": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "AND",
      "path": "8"
    },
    "8327": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8328": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "ADD",
      "path": "8"
    },
    "8329": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8330": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8332": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8333": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "POP",
      "path": "8"
    },
    "8334": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8335": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "ADD",
      "path": "8"
    },
    "8336": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8337": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x209A"
    },
    "8340": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8341": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8342": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30F8"
    },
    "8345": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "jump": "i",
      "offset": [
        13628,
        13658
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8346": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13628,
        13658
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8347": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13604,
        13658
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8348": {
      "op": "POP"
    },
    "8349": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13690,
        13711
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "8350": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13668,
        13687
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8352": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13743,
        13843
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x20AA"
    },
    "8355": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13771,
        13781
      ],
      "op": "DUP9",
      "path": "8"
    },
    "8356": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13604,
        13658
      ],
      "op": "DUP5",
      "path": "8"
    },
    "8357": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13690,
        13711
      ],
      "op": "DUP5",
      "path": "8"
    },
    "8358": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13743,
        13757
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CEE"
    },
    "8361": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "jump": "i",
      "offset": [
        13743,
        13843
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8362": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13743,
        13843
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8363": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13721,
        13843
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8364": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13721,
        13843
      ],
      "op": "POP",
      "path": "8"
    },
    "8365": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13853,
        13878
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8367": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13952,
        13963
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 108
    },
    "8368": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13938,
        13948
      ],
      "op": "DUP9",
      "path": "8"
    },
    "8369": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13938,
        13963
      ],
      "op": "LT",
      "path": "8"
    },
    "8370": {
      "branch": 210,
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13938,
        13963
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8371": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13930,
        13987
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x20F4"
    },
    "8374": {
      "branch": 210,
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13930,
        13987
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8375": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13930,
        13987
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8377": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13930,
        13987
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8378": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8384": {
      "op": "SHL"
    },
    "8385": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13930,
        13987
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8386": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13930,
        13987
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8389": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13930,
        13987
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "8391": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13930,
        13987
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8392": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13930,
        13987
      ],
      "op": "ADD",
      "path": "8"
    },
    "8393": {
      "op": "MSTORE"
    },
    "8394": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "8396": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8398": {
      "op": "DUP3"
    },
    "8399": {
      "op": "ADD"
    },
    "8400": {
      "op": "MSTORE"
    },
    "8401": {
      "op": "PUSH19",
      "value": "0x1B585E081D1BDAD95B9CC8195E18D959591959"
    },
    "8421": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "8423": {
      "op": "SHL"
    },
    "8424": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8426": {
      "op": "DUP3"
    },
    "8427": {
      "op": "ADD"
    },
    "8428": {
      "op": "MSTORE"
    },
    "8429": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8431": {
      "op": "ADD"
    },
    "8432": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13930,
        13987
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9B2"
    },
    "8435": {
      "op": "JUMP"
    },
    "8436": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13930,
        13987
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8443": {
      "op": "SHL"
    },
    "8444": {
      "op": "SUB"
    },
    "8445": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14017
      ],
      "op": "DUP8",
      "path": "8"
    },
    "8446": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14017
      ],
      "op": "AND",
      "path": "8"
    },
    "8447": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14017
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8449": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14017
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8450": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14017
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8451": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14017
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8452": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14010
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "8454": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14017
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8456": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14017
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8457": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14017
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8459": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14017
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8460": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14017
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "8461": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14017
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8462": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14017
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "8464": {
      "branch": 211,
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14017
      ],
      "op": "AND",
      "path": "8"
    },
    "8465": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14041
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8466": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14041
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8467": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14041
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2134"
    },
    "8470": {
      "branch": 211,
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14041
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8471": {
      "op": "POP"
    },
    "8472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8478": {
      "op": "SHL"
    },
    "8479": {
      "op": "SUB"
    },
    "8480": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14041
      ],
      "op": "DUP7",
      "path": "8"
    },
    "8481": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14041
      ],
      "op": "AND",
      "path": "8"
    },
    "8482": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8484": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14041
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8485": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14041
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8486": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14041
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8487": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14030
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "8489": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8491": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14041
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8492": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8494": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14041
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8495": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14041
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "8496": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14041
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8497": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "8499": {
      "branch": 212,
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14021,
        14041
      ],
      "op": "AND",
      "path": "8"
    },
    "8500": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14001,
        14041
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8501": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13997,
        14246
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8502": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13997,
        14246
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2140"
    },
    "8505": {
      "branch": 212,
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13997,
        14246
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8506": {
      "op": "POP"
    },
    "8507": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14077,
        14088
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 109
    },
    "8508": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13997,
        14246
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2164"
    },
    "8511": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13997,
        14246
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8512": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13997,
        14246
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8513": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14161,
        14163
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 110,
      "value": "0x52"
    },
    "8515": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14140,
        14157
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x214D"
    },
    "8518": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14146,
        14157
      ],
      "op": "DUP4",
      "path": "8"
    },
    "8519": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14140,
        14143
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "8521": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14140,
        14157
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "8524": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "jump": "i",
      "offset": [
        14140,
        14157
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8525": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14140,
        14157
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8526": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14139,
        14163
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2157"
    },
    "8529": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14139,
        14163
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8530": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14139,
        14163
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8531": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14139,
        14163
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "8534": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "jump": "i",
      "offset": [
        14139,
        14163
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8535": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14139,
        14163
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8536": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14119,
        14163
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8537": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14119,
        14163
      ],
      "op": "POP",
      "path": "8"
    },
    "8538": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14177,
        14235
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 111,
      "value": "0x2164"
    },
    "8541": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14192,
        14202
      ],
      "op": "DUP10",
      "path": "8"
    },
    "8542": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14204,
        14221
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8543": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14223,
        14234
      ],
      "op": "DUP6",
      "path": "8"
    },
    "8544": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14177,
        14191
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2BA7"
    },
    "8547": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "jump": "i",
      "offset": [
        14177,
        14235
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8548": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14177,
        14235
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8549": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 112,
      "value": "0x40"
    },
    "8551": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8558": {
      "op": "SHL"
    },
    "8559": {
      "op": "SUB"
    },
    "8560": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14320
      ],
      "op": "DUP8",
      "path": "8"
    },
    "8561": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14320
      ],
      "op": "AND",
      "path": "8"
    },
    "8562": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14320
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8563": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "DUP11",
      "path": "8"
    },
    "8564": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8565": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8FC"
    },
    "8568": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "MUL",
      "path": "8"
    },
    "8569": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8570": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14321,
        14331
      ],
      "op": "DUP12",
      "path": "8"
    },
    "8571": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14321,
        14331
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8572": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8574": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8575": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8576": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8577": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14321,
        14331
      ],
      "op": "DUP6",
      "path": "8"
    },
    "8578": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14320
      ],
      "op": "DUP9",
      "path": "8"
    },
    "8579": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "DUP9",
      "path": "8"
    },
    "8580": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "CALL",
      "path": "8"
    },
    "8581": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "8582": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "POP",
      "path": "8"
    },
    "8583": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "POP",
      "path": "8"
    },
    "8584": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "POP",
      "path": "8"
    },
    "8585": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "POP",
      "path": "8"
    },
    "8586": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8587": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8588": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8589": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x219A"
    },
    "8592": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8593": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "8594": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8596": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8597": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "8598": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "8599": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8601": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "REVERT",
      "path": "8"
    },
    "8602": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14293,
        14332
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8603": {
      "op": "POP"
    },
    "8604": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14355
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 113,
      "value": "0x6"
    },
    "8606": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14355
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8607": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8609": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8610": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "8615": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8617": {
      "op": "SHL"
    },
    "8618": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8619": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8626": {
      "op": "SHL"
    },
    "8627": {
      "op": "SUB"
    },
    "8628": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14355
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8629": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14355
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8630": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14355
      ],
      "op": "AND",
      "path": "8"
    },
    "8631": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14355
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8632": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14368
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "8637": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14368
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8638": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x21CF"
    },
    "8641": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8642": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14369,
        14374
      ],
      "op": "DUP11",
      "path": "8"
    },
    "8643": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14369,
        14374
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8644": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14384,
        14388
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "8645": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14384,
        14388
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8646": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14391,
        14408
      ],
      "op": "DUP7",
      "path": "8"
    },
    "8647": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14391,
        14408
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8648": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "8650": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "ADD",
      "path": "8"
    },
    "8651": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3254"
    },
    "8654": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "jump": "i",
      "offset": [
        14350,
        14409
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8655": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8656": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8658": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8660": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8661": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8662": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "DUP4",
      "path": "8"
    },
    "8663": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "SUB",
      "path": "8"
    },
    "8664": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8665": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8667": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "DUP8",
      "path": "8"
    },
    "8668": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "GAS",
      "path": "8"
    },
    "8669": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "CALL",
      "path": "8"
    },
    "8670": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8671": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8672": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8673": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x21EE"
    },
    "8676": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8677": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "8678": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8680": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8681": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "8682": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "8683": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8685": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "REVERT",
      "path": "8"
    },
    "8686": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8687": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "POP",
      "path": "8"
    },
    "8688": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "POP",
      "path": "8"
    },
    "8689": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "POP",
      "path": "8"
    },
    "8690": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "POP",
      "path": "8"
    },
    "8691": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8693": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8694": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "8695": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "8697": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "NOT",
      "path": "8"
    },
    "8698": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "8700": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8701": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "ADD",
      "path": "8"
    },
    "8702": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "AND",
      "path": "8"
    },
    "8703": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8704": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "ADD",
      "path": "8"
    },
    "8705": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8706": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8708": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8709": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "POP",
      "path": "8"
    },
    "8710": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8711": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "ADD",
      "path": "8"
    },
    "8712": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8713": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2212"
    },
    "8716": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8717": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8718": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x317F"
    },
    "8721": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "jump": "i",
      "offset": [
        14350,
        14409
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8722": {
      "branch": 213,
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14350,
        14409
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8723": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14342,
        14410
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x221B"
    },
    "8726": {
      "branch": 213,
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14342,
        14410
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8727": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14342,
        14410
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8729": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14342,
        14410
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8730": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14342,
        14410
      ],
      "op": "REVERT",
      "path": "8"
    },
    "8731": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14342,
        14410
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8732": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14465,
        14475
      ],
      "op": "DUP9",
      "path": "8",
      "statement": 114
    },
    "8733": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14446,
        14463
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8734": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14439,
        14444
      ],
      "op": "DUP9",
      "path": "8"
    },
    "8735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8741": {
      "op": "SHL"
    },
    "8742": {
      "op": "SUB"
    },
    "8743": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14425,
        14476
      ],
      "op": "AND",
      "path": "8"
    },
    "8744": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14425,
        14476
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x3CC32B807E0E6ADE29DEFE751A1339A43C1E45D7D18ECA93A916CA060EBE89EA"
    },
    "8777": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14425,
        14476
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8779": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14425,
        14476
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8780": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14425,
        14476
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8782": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14425,
        14476
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8783": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14425,
        14476
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8784": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14425,
        14476
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8785": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14425,
        14476
      ],
      "op": "SUB",
      "path": "8"
    },
    "8786": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14425,
        14476
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8787": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14425,
        14476
      ],
      "op": "LOG4",
      "path": "8"
    },
    "8788": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14486,
        14504
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 115,
      "value": "0x225B"
    },
    "8791": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14486,
        14502
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DDD"
    },
    "8794": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "jump": "i",
      "offset": [
        14486,
        14504
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8795": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14486,
        14504
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8796": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        14522,
        14539
      ],
      "op": "SWAP9",
      "path": "8",
      "statement": 116
    },
    "8797": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "offset": [
        13397,
        14546
      ],
      "op": "SWAP8",
      "path": "8"
    },
    "8798": {
      "op": "POP"
    },
    "8799": {
      "op": "POP"
    },
    "8800": {
      "op": "POP"
    },
    "8801": {
      "op": "POP"
    },
    "8802": {
      "op": "POP"
    },
    "8803": {
      "op": "POP"
    },
    "8804": {
      "op": "POP"
    },
    "8805": {
      "op": "POP"
    },
    "8806": {
      "fn": "StakeFountain.tokenToBnbOutput",
      "jump": "o",
      "offset": [
        13397,
        14546
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8807": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9521,
        10775
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8808": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9676,
        9683
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8810": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9719,
        9720
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 117
    },
    "8811": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9703,
        9716
      ],
      "op": "DUP6",
      "path": "8"
    },
    "8812": {
      "branch": 214,
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9703,
        9720
      ],
      "op": "GT",
      "path": "8"
    },
    "8813": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9703,
        9735
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8814": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9703,
        9735
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8815": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9703,
        9735
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2278"
    },
    "8818": {
      "branch": 214,
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9703,
        9735
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8819": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9703,
        9735
      ],
      "op": "POP",
      "path": "8"
    },
    "8820": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9734,
        9735
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8822": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9724,
        9731
      ],
      "op": "DUP5",
      "path": "8"
    },
    "8823": {
      "branch": 215,
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9724,
        9735
      ],
      "op": "GT",
      "path": "8"
    },
    "8824": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9703,
        9735
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8825": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9695,
        9736
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2281"
    },
    "8828": {
      "branch": 215,
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9695,
        9736
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8829": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9695,
        9736
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8831": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9695,
        9736
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8832": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9695,
        9736
      ],
      "op": "REVERT",
      "path": "8"
    },
    "8833": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9695,
        9736
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8834": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9837
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "8836": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9837
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8837": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8839": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8840": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "8845": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8847": {
      "op": "SHL"
    },
    "8848": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8849": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8850": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9856,
        9860
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "8851": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "8853": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8854": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "ADD",
      "path": "8"
    },
    "8855": {
      "op": "MSTORE"
    },
    "8856": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9746,
        9768
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8858": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9746,
        9768
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8859": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9746,
        9768
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8860": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9746,
        9768
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8861": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9746,
        9768
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8862": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9746,
        9768
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8869": {
      "op": "SHL"
    },
    "8870": {
      "op": "SUB"
    },
    "8871": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9837
      ],
      "op": "AND",
      "path": "8"
    },
    "8872": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9837
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8873": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "8878": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9847
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8879": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8881": {
      "op": "ADD"
    },
    "8882": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8884": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8886": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8887": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8888": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "DUP4",
      "path": "8"
    },
    "8889": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "SUB",
      "path": "8"
    },
    "8890": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8891": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "DUP7",
      "path": "8"
    },
    "8892": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "GAS",
      "path": "8"
    },
    "8893": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "8894": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8895": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8896": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8897": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x22CE"
    },
    "8900": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8901": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "8902": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8904": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8905": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "8906": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "8907": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8909": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "REVERT",
      "path": "8"
    },
    "8910": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8911": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "POP",
      "path": "8"
    },
    "8912": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "POP",
      "path": "8"
    },
    "8913": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "POP",
      "path": "8"
    },
    "8914": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "POP",
      "path": "8"
    },
    "8915": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8917": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8918": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "8919": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "8921": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "NOT",
      "path": "8"
    },
    "8922": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "8924": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8925": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "ADD",
      "path": "8"
    },
    "8926": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "AND",
      "path": "8"
    },
    "8927": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8928": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "ADD",
      "path": "8"
    },
    "8929": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8930": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8932": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8933": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "POP",
      "path": "8"
    },
    "8934": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8935": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "ADD",
      "path": "8"
    },
    "8936": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8937": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x22F2"
    },
    "8940": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8941": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8942": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30F8"
    },
    "8945": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "jump": "i",
      "offset": [
        9832,
        9862
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8946": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9832,
        9862
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8947": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9808,
        9862
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8948": {
      "op": "POP"
    },
    "8949": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9894,
        9915
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "8950": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9872,
        9891
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8952": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9944,
        10057
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x230B"
    },
    "8955": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9972,
        9985
      ],
      "op": "DUP11",
      "path": "8"
    },
    "8956": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9999,
        10020
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2305"
    },
    "8959": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10013,
        10020
      ],
      "op": "DUP12",
      "path": "8"
    },
    "8960": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9894,
        9915
      ],
      "op": "DUP6",
      "path": "8"
    },
    "8961": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9999,
        10020
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3168"
    },
    "8964": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "jump": "i",
      "offset": [
        9999,
        10020
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8965": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9999,
        10020
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8966": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10034,
        10047
      ],
      "op": "DUP6",
      "path": "8"
    },
    "8967": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9944,
        9958
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CEE"
    },
    "8970": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "jump": "i",
      "offset": [
        9944,
        10057
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8971": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9944,
        10057
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8978": {
      "op": "SHL"
    },
    "8979": {
      "op": "SUB"
    },
    "8980": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10087
      ],
      "op": "DUP10",
      "path": "8"
    },
    "8981": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10087
      ],
      "op": "AND",
      "path": "8"
    },
    "8982": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10087
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8984": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10087
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8985": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10087
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8986": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10087
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8987": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "8989": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10087
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8991": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10087
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8992": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10087
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8994": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10087
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8995": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10087
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "8996": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10087
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8997": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9925,
        10057
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8998": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9925,
        10057
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8999": {
      "op": "POP"
    },
    "9000": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10087
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "9002": {
      "branch": 216,
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10087
      ],
      "op": "AND",
      "path": "8"
    },
    "9003": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10111
      ],
      "op": "DUP1",
      "path": "8"
    },
    "9004": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10111
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "9005": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10111
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x234E"
    },
    "9008": {
      "branch": 216,
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10111
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "9009": {
      "op": "POP"
    },
    "9010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9016": {
      "op": "SHL"
    },
    "9017": {
      "op": "SUB"
    },
    "9018": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10111
      ],
      "op": "DUP8",
      "path": "8"
    },
    "9019": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10111
      ],
      "op": "AND",
      "path": "8"
    },
    "9020": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10111
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "9022": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10111
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9023": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10111
      ],
      "op": "DUP2",
      "path": "8"
    },
    "9024": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10111
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "9025": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10100
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "9027": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10111
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "9029": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10111
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "9030": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10111
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "9032": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10111
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9033": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10111
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "9034": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10111
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "9035": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10111
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "9037": {
      "branch": 217,
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10091,
        10111
      ],
      "op": "AND",
      "path": "8"
    },
    "9038": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10071,
        10111
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9039": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10067,
        10287
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "9040": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10067,
        10287
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x235B"
    },
    "9043": {
      "branch": 217,
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10067,
        10287
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "9044": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10144,
        10152
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 118
    },
    "9045": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10127,
        10152
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "9046": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10127,
        10152
      ],
      "op": "POP",
      "path": "8"
    },
    "9047": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10067,
        10287
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238E"
    },
    "9050": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10067,
        10287
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9051": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10067,
        10287
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9052": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10219,
        10221
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 119,
      "value": "0x61"
    },
    "9054": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10201,
        10215
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2368"
    },
    "9057": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10207,
        10215
      ],
      "op": "DUP3",
      "path": "8"
    },
    "9058": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10201,
        10204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "9060": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10201,
        10215
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "9063": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "jump": "i",
      "offset": [
        10201,
        10215
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9064": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10201,
        10215
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9065": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10200,
        10221
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2372"
    },
    "9068": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10200,
        10221
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "9069": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10200,
        10221
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9070": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10200,
        10221
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "9073": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "jump": "i",
      "offset": [
        10200,
        10221
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9074": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10200,
        10221
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9075": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10183,
        10221
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "9076": {
      "op": "POP"
    },
    "9077": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10273,
        10276
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 120,
      "value": "0x64"
    },
    "9079": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10251,
        10269
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2381"
    },
    "9082": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10183,
        10221
      ],
      "op": "DUP7",
      "path": "8"
    },
    "9083": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10251,
        10252
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "9085": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10251,
        10269
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "9088": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "jump": "i",
      "offset": [
        10251,
        10269
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9089": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10251,
        10269
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9090": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10250,
        10276
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238B"
    },
    "9093": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10250,
        10276
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "9094": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10250,
        10276
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9095": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10250,
        10276
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "9098": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "jump": "i",
      "offset": [
        10250,
        10276
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9099": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10250,
        10276
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9100": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10235,
        10276
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "9101": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10235,
        10276
      ],
      "op": "POP",
      "path": "8"
    },
    "9102": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10067,
        10287
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9103": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10343,
        10361
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "9105": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10364,
        10388
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x239A"
    },
    "9108": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10374,
        10388
      ],
      "op": "DUP7",
      "path": "8"
    },
    "9109": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10364,
        10371
      ],
      "op": "DUP12",
      "path": "8"
    },
    "9110": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10364,
        10388
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3168"
    },
    "9113": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "jump": "i",
      "offset": [
        10364,
        10388
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9114": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10364,
        10388
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9115": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10343,
        10388
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9116": {
      "op": "POP"
    },
    "9117": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10402,
        10416
      ],
      "op": "DUP1",
      "path": "8"
    },
    "9118": {
      "branch": 218,
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10402,
        10416
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "9119": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10398,
        10478
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x23DA"
    },
    "9122": {
      "branch": 218,
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10398,
        10478
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "9123": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 121,
      "value": "0x40"
    },
    "9125": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "9126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9132": {
      "op": "SHL"
    },
    "9133": {
      "op": "SUB"
    },
    "9134": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10455
      ],
      "op": "DUP11",
      "path": "8"
    },
    "9135": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10455
      ],
      "op": "AND",
      "path": "8"
    },
    "9136": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10455
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9137": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "DUP3",
      "path": "8"
    },
    "9138": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "9139": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8FC"
    },
    "9142": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "MUL",
      "path": "8"
    },
    "9143": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9144": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10456,
        10466
      ],
      "op": "DUP4",
      "path": "8"
    },
    "9145": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10456,
        10466
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9146": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "9148": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "DUP2",
      "path": "8"
    },
    "9149": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "DUP2",
      "path": "8"
    },
    "9150": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "DUP2",
      "path": "8"
    },
    "9151": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10456,
        10466
      ],
      "op": "DUP6",
      "path": "8"
    },
    "9152": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10455
      ],
      "op": "DUP9",
      "path": "8"
    },
    "9153": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "DUP9",
      "path": "8"
    },
    "9154": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "CALL",
      "path": "8"
    },
    "9155": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "9156": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "POP",
      "path": "8"
    },
    "9157": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "POP",
      "path": "8"
    },
    "9158": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "POP",
      "path": "8"
    },
    "9159": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "POP",
      "path": "8"
    },
    "9160": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "9161": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "DUP1",
      "path": "8"
    },
    "9162": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "9163": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x23D8"
    },
    "9166": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "9167": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "9168": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "9170": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "DUP1",
      "path": "8"
    },
    "9171": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "9172": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "9173": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "9175": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "REVERT",
      "path": "8"
    },
    "9176": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9177": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10432,
        10467
      ],
      "op": "POP",
      "path": "8"
    },
    "9178": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10398,
        10478
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9179": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10500
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 122,
      "value": "0x6"
    },
    "9181": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10500
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "9182": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "9184": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "9185": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "9190": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9192": {
      "op": "SHL"
    },
    "9193": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "DUP2",
      "path": "8"
    },
    "9194": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "9195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9201": {
      "op": "SHL"
    },
    "9202": {
      "op": "SUB"
    },
    "9203": {
      "op": "DUP11"
    },
    "9204": {
      "op": "DUP2"
    },
    "9205": {
      "op": "AND"
    },
    "9206": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "9208": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "DUP4",
      "path": "8"
    },
    "9209": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "ADD",
      "path": "8"
    },
    "9210": {
      "op": "MSTORE"
    },
    "9211": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9213": {
      "op": "DUP3"
    },
    "9214": {
      "op": "ADD"
    },
    "9215": {
      "op": "DUP15"
    },
    "9216": {
      "op": "SWAP1"
    },
    "9217": {
      "op": "MSTORE"
    },
    "9218": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10500
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9219": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10500
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "9220": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10500
      ],
      "op": "AND",
      "path": "8"
    },
    "9221": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10500
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9222": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10509
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "9227": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10509
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9228": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9230": {
      "op": "ADD"
    },
    "9231": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "9233": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "9235": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "9236": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "DUP1",
      "path": "8"
    },
    "9237": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "DUP4",
      "path": "8"
    },
    "9238": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "SUB",
      "path": "8"
    },
    "9239": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "DUP2",
      "path": "8"
    },
    "9240": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "9242": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "DUP8",
      "path": "8"
    },
    "9243": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "GAS",
      "path": "8"
    },
    "9244": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "CALL",
      "path": "8"
    },
    "9245": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "9246": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "DUP1",
      "path": "8"
    },
    "9247": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "9248": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x242D"
    },
    "9251": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "9252": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "9253": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "9255": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "DUP1",
      "path": "8"
    },
    "9256": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "9257": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "9258": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "9260": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "REVERT",
      "path": "8"
    },
    "9261": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9262": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "POP",
      "path": "8"
    },
    "9263": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "POP",
      "path": "8"
    },
    "9264": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "POP",
      "path": "8"
    },
    "9265": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "POP",
      "path": "8"
    },
    "9266": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "9268": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "9269": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "9270": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "9272": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "NOT",
      "path": "8"
    },
    "9273": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "9275": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "DUP3",
      "path": "8"
    },
    "9276": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "ADD",
      "path": "8"
    },
    "9277": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "AND",
      "path": "8"
    },
    "9278": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "DUP3",
      "path": "8"
    },
    "9279": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "ADD",
      "path": "8"
    },
    "9280": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "DUP1",
      "path": "8"
    },
    "9281": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "9283": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "9284": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "POP",
      "path": "8"
    },
    "9285": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "DUP2",
      "path": "8"
    },
    "9286": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "ADD",
      "path": "8"
    },
    "9287": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9288": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2451"
    },
    "9291": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "9292": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9293": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x317F"
    },
    "9296": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "jump": "i",
      "offset": [
        10495,
        10535
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9297": {
      "branch": 219,
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10495,
        10535
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9298": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10487,
        10536
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x245A"
    },
    "9301": {
      "branch": 219,
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10487,
        10536
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "9302": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10487,
        10536
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "9304": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10487,
        10536
      ],
      "op": "DUP1",
      "path": "8"
    },
    "9305": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10487,
        10536
      ],
      "op": "REVERT",
      "path": "8"
    },
    "9306": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10487,
        10536
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9307": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10550,
        10566
      ],
      "op": "DUP5",
      "path": "8"
    },
    "9308": {
      "branch": 220,
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10550,
        10566
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "9309": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10546,
        10601
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2469"
    },
    "9312": {
      "branch": 220,
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10546,
        10601
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "9313": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10568,
        10601
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 123,
      "value": "0x2469"
    },
    "9316": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10588,
        10600
      ],
      "op": "DUP6",
      "path": "8"
    },
    "9317": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10568,
        10587
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D39"
    },
    "9320": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "jump": "i",
      "offset": [
        10568,
        10601
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9321": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10568,
        10601
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9322": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10655,
        10668
      ],
      "op": "DUP11",
      "path": "8",
      "statement": 124
    },
    "9323": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10639,
        10653
      ],
      "op": "DUP7",
      "path": "8"
    },
    "9324": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10632,
        10637
      ],
      "op": "DUP11",
      "path": "8"
    },
    "9325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9331": {
      "op": "SHL"
    },
    "9332": {
      "op": "SUB"
    },
    "9333": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10616,
        10669
      ],
      "op": "AND",
      "path": "8"
    },
    "9334": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10616,
        10669
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x7F743FB741E07B0C4DAEB2AF54FB3EBFA2BDB31D9913A0E555661C870411AAE5"
    },
    "9367": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10616,
        10669
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "9369": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10616,
        10669
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "9370": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10616,
        10669
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "9372": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10616,
        10669
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "9373": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10616,
        10669
      ],
      "op": "DUP1",
      "path": "8"
    },
    "9374": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10616,
        10669
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "9375": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10616,
        10669
      ],
      "op": "SUB",
      "path": "8"
    },
    "9376": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10616,
        10669
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9377": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10616,
        10669
      ],
      "op": "LOG4",
      "path": "8"
    },
    "9378": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10684,
        10709
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 125,
      "value": "0x40"
    },
    "9380": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10684,
        10709
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "9381": {
      "op": "DUP6"
    },
    "9382": {
      "op": "DUP2"
    },
    "9383": {
      "op": "MSTORE"
    },
    "9384": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10684,
        10709
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xC328594CAB3A117E8DDF861647E12C326EB6FA98AB8F707982AD7A13E8264C7C"
    },
    "9417": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10684,
        10709
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9420": {
      "op": "ADD"
    },
    "9421": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10684,
        10709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "9423": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10684,
        10709
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "9424": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10684,
        10709
      ],
      "op": "DUP1",
      "path": "8"
    },
    "9425": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10684,
        10709
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "9426": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10684,
        10709
      ],
      "op": "SUB",
      "path": "8"
    },
    "9427": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10684,
        10709
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9428": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10684,
        10709
      ],
      "op": "LOG1",
      "path": "8"
    },
    "9429": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10719,
        10737
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 126,
      "value": "0x24DC"
    },
    "9432": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10719,
        10735
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DDD"
    },
    "9435": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "jump": "i",
      "offset": [
        10719,
        10737
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9436": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10719,
        10737
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9437": {
      "op": "POP"
    },
    "9438": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10754,
        10768
      ],
      "op": "SWAP4",
      "path": "8",
      "statement": 127
    },
    "9439": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        10754,
        10768
      ],
      "op": "SWAP10",
      "path": "8"
    },
    "9440": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "offset": [
        9521,
        10775
      ],
      "op": "SWAP9",
      "path": "8"
    },
    "9441": {
      "op": "POP"
    },
    "9442": {
      "op": "POP"
    },
    "9443": {
      "op": "POP"
    },
    "9444": {
      "op": "POP"
    },
    "9445": {
      "op": "POP"
    },
    "9446": {
      "op": "POP"
    },
    "9447": {
      "op": "POP"
    },
    "9448": {
      "op": "POP"
    },
    "9449": {
      "op": "POP"
    },
    "9450": {
      "fn": "StakeFountain.bnbToTokenOutput",
      "jump": "o",
      "offset": [
        9521,
        10775
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9451": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9458": {
      "op": "SHL"
    },
    "9459": {
      "op": "SUB"
    },
    "9460": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9461": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9462": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "1"
    },
    "9463": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10924
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9465": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9466": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9467": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9468": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "9470": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9472": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9473": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9474": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9475": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9477": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9478": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9479": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "9480": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "9481": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP7",
      "path": "1"
    },
    "9482": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "1"
    },
    "9483": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9484": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9485": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9486": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9487": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9488": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "9489": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9492": {
      "op": "NOT"
    },
    "9493": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9494": {
      "branch": 230,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "EQ",
      "path": "1"
    },
    "9495": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2577"
    },
    "9498": {
      "branch": 230,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9499": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11047,
        11053
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 128
    },
    "9500": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11043
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9501": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "LT",
      "path": "1"
    },
    "9502": {
      "branch": 231,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9503": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x256A"
    },
    "9506": {
      "branch": 231,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9507": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9509": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9510": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9516": {
      "op": "SHL"
    },
    "9517": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9518": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9521": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9523": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9524": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "ADD",
      "path": "1"
    },
    "9525": {
      "op": "MSTORE"
    },
    "9526": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "9528": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9530": {
      "op": "DUP3"
    },
    "9531": {
      "op": "ADD"
    },
    "9532": {
      "op": "MSTORE"
    },
    "9533": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "9566": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9568": {
      "op": "DUP3"
    },
    "9569": {
      "op": "ADD"
    },
    "9570": {
      "op": "MSTORE"
    },
    "9571": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9573": {
      "op": "ADD"
    },
    "9574": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B2"
    },
    "9577": {
      "op": "JUMP"
    },
    "9578": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9579": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 129,
      "value": "0x2577"
    },
    "9582": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11138,
        11143
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9583": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11145,
        11152
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9584": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11173,
        11179
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9585": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11170
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9586": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11179
      ],
      "op": "SUB",
      "path": "1"
    },
    "9587": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11137
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EFA"
    },
    "9590": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9591": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9592": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10890,
        11211
      ],
      "op": "POP",
      "path": "1"
    },
    "9593": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "1"
    },
    "9594": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "1"
    },
    "9595": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "1"
    },
    "9596": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9597": {
      "fn": "ERC20._transfer",
      "offset": [
        7488,
        8139
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9604": {
      "op": "SHL"
    },
    "9605": {
      "op": "SUB"
    },
    "9606": {
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 130
    },
    "9607": {
      "branch": 232,
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "AND",
      "path": "1"
    },
    "9608": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25E1"
    },
    "9611": {
      "branch": 232,
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9612": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9614": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9615": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9619": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9621": {
      "op": "SHL"
    },
    "9622": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9623": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9626": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9628": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9629": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "ADD",
      "path": "1"
    },
    "9630": {
      "op": "MSTORE"
    },
    "9631": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "9633": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9635": {
      "op": "DUP3"
    },
    "9636": {
      "op": "ADD"
    },
    "9637": {
      "op": "MSTORE"
    },
    "9638": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "9671": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9673": {
      "op": "DUP3"
    },
    "9674": {
      "op": "ADD"
    },
    "9675": {
      "op": "MSTORE"
    },
    "9676": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "9682": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "9684": {
      "op": "SHL"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9687": {
      "op": "DUP3"
    },
    "9688": {
      "op": "ADD"
    },
    "9689": {
      "op": "MSTORE"
    },
    "9690": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9692": {
      "op": "ADD"
    },
    "9693": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B2"
    },
    "9696": {
      "op": "JUMP"
    },
    "9697": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9704": {
      "op": "SHL"
    },
    "9705": {
      "op": "SUB"
    },
    "9706": {
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 131
    },
    "9707": {
      "branch": 233,
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "1"
    },
    "9708": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2643"
    },
    "9711": {
      "branch": 233,
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9712": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9714": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9715": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9719": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9721": {
      "op": "SHL"
    },
    "9722": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9723": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9726": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9728": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9729": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "ADD",
      "path": "1"
    },
    "9730": {
      "op": "MSTORE"
    },
    "9731": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "9733": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9735": {
      "op": "DUP3"
    },
    "9736": {
      "op": "ADD"
    },
    "9737": {
      "op": "MSTORE"
    },
    "9738": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "9771": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9773": {
      "op": "DUP3"
    },
    "9774": {
      "op": "ADD"
    },
    "9775": {
      "op": "MSTORE"
    },
    "9776": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "9780": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "9782": {
      "op": "SHL"
    },
    "9783": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9785": {
      "op": "DUP3"
    },
    "9786": {
      "op": "ADD"
    },
    "9787": {
      "op": "MSTORE"
    },
    "9788": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9790": {
      "op": "ADD"
    },
    "9791": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B2"
    },
    "9794": {
      "op": "JUMP"
    },
    "9795": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9802": {
      "op": "SHL"
    },
    "9803": {
      "op": "SUB"
    },
    "9804": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9805": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "AND",
      "path": "1"
    },
    "9806": {
      "fn": "ERC20._transfer",
      "offset": [
        7808,
        7827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9808": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9809": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9810": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9811": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9813": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9814": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9815": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9816": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9818": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9819": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "9820": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9821": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 132
    },
    "9822": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9823": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "LT",
      "path": "1"
    },
    "9824": {
      "branch": 234,
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9825": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26BB"
    },
    "9828": {
      "branch": 234,
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9829": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9831": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9832": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9836": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9838": {
      "op": "SHL"
    },
    "9839": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9840": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9843": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9845": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9846": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "ADD",
      "path": "1"
    },
    "9847": {
      "op": "MSTORE"
    },
    "9848": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9850": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9852": {
      "op": "DUP3"
    },
    "9853": {
      "op": "ADD"
    },
    "9854": {
      "op": "MSTORE"
    },
    "9855": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "9888": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9890": {
      "op": "DUP3"
    },
    "9891": {
      "op": "ADD"
    },
    "9892": {
      "op": "MSTORE"
    },
    "9893": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "9900": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9902": {
      "op": "SHL"
    },
    "9903": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9905": {
      "op": "DUP3"
    },
    "9906": {
      "op": "ADD"
    },
    "9907": {
      "op": "MSTORE"
    },
    "9908": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9910": {
      "op": "ADD"
    },
    "9911": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B2"
    },
    "9914": {
      "op": "JUMP"
    },
    "9915": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9922": {
      "op": "SHL"
    },
    "9923": {
      "op": "SUB"
    },
    "9924": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 133
    },
    "9925": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP6",
      "path": "1"
    },
    "9926": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "AND",
      "path": "1"
    },
    "9927": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9929": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9930": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9931": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9932": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9934": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9935": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9936": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9937": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9939": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9940": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9941": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "9942": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "1"
    },
    "9943": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "1"
    },
    "9944": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "SUB",
      "path": "1"
    },
    "9945": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9946": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9947": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 134
    },
    "9948": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP6",
      "path": "1"
    },
    "9949": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "AND",
      "path": "1"
    },
    "9950": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9951": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9952": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9953": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9954": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "9955": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9956": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9957": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9958": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9959": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9960": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26F2"
    },
    "9963": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9964": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9965": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9966": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31D6"
    },
    "9969": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9970": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9971": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9972": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "1"
    },
    "9973": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "1"
    },
    "9974": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9975": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9976": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9977": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "1"
    },
    "9978": {
      "fn": "ERC20._transfer",
      "offset": [
        8073,
        8075
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 135
    },
    "9979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9985": {
      "op": "SHL"
    },
    "9986": {
      "op": "SUB"
    },
    "9987": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "1"
    },
    "9988": {
      "fn": "ERC20._transfer",
      "offset": [
        8067,
        8071
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9995": {
      "op": "SHL"
    },
    "9996": {
      "op": "SUB"
    },
    "9997": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "1"
    },
    "9998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10000": {
      "op": "DUP1"
    },
    "10001": {
      "op": "MLOAD"
    },
    "10002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10004": {
      "op": "PUSH2",
      "value": "0x3299"
    },
    "10007": {
      "op": "DUP4"
    },
    "10008": {
      "op": "CODECOPY"
    },
    "10009": {
      "op": "DUP2"
    },
    "10010": {
      "op": "MLOAD"
    },
    "10011": {
      "op": "SWAP2"
    },
    "10012": {
      "op": "MSTORE"
    },
    "10013": {
      "fn": "ERC20._transfer",
      "offset": [
        8077,
        8083
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10014": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10016": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10017": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x272C"
    },
    "10020": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10021": {
      "op": "DUP2"
    },
    "10022": {
      "op": "MSTORE"
    },
    "10023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10025": {
      "op": "ADD"
    },
    "10026": {
      "op": "SWAP1"
    },
    "10027": {
      "op": "JUMP"
    },
    "10028": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10029": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10031": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10032": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10033": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10034": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SUB",
      "path": "1"
    },
    "10035": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10036": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "LOG3",
      "path": "1"
    },
    "10037": {
      "fn": "ERC20._transfer",
      "offset": [
        8095,
        8132
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 136,
      "value": "0x2577"
    },
    "10040": {
      "fn": "ERC20._burn",
      "offset": [
        9124,
        9700
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10041": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10042": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "10044": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10045": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10052": {
      "op": "SHL"
    },
    "10053": {
      "op": "SUB"
    },
    "10054": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 137
    },
    "10055": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10056": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "10057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10063": {
      "op": "SHL"
    },
    "10064": {
      "op": "SUB"
    },
    "10065": {
      "op": "NOT"
    },
    "10066": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10067": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "10068": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10069": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "10070": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10071": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10072": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10073": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 138,
      "value": "0x40"
    },
    "10075": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10076": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10077": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "10078": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10079": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10080": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10081": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10082": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "10115": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10116": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10118": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10119": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "10120": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "10121": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "10122": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10123": {
      "fn": "ERC20._burn",
      "offset": [
        9124,
        9700
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10130": {
      "op": "SHL"
    },
    "10131": {
      "op": "SUB"
    },
    "10132": {
      "fn": "ERC20._burn",
      "offset": [
        9207,
        9228
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 139
    },
    "10133": {
      "branch": 235,
      "fn": "ERC20._burn",
      "offset": [
        9207,
        9228
      ],
      "op": "AND",
      "path": "1"
    },
    "10134": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27EB"
    },
    "10137": {
      "branch": 235,
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10138": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10140": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10141": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10145": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10147": {
      "op": "SHL"
    },
    "10148": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10149": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10152": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10154": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10155": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "ADD",
      "path": "1"
    },
    "10156": {
      "op": "MSTORE"
    },
    "10157": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10159": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10161": {
      "op": "DUP3"
    },
    "10162": {
      "op": "ADD"
    },
    "10163": {
      "op": "MSTORE"
    },
    "10164": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "10197": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10199": {
      "op": "DUP3"
    },
    "10200": {
      "op": "ADD"
    },
    "10201": {
      "op": "MSTORE"
    },
    "10202": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "10204": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10206": {
      "op": "SHL"
    },
    "10207": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10209": {
      "op": "DUP3"
    },
    "10210": {
      "op": "ADD"
    },
    "10211": {
      "op": "MSTORE"
    },
    "10212": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10214": {
      "op": "ADD"
    },
    "10215": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B2"
    },
    "10218": {
      "op": "JUMP"
    },
    "10219": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10226": {
      "op": "SHL"
    },
    "10227": {
      "op": "SUB"
    },
    "10228": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10229": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "AND",
      "path": "1"
    },
    "10230": {
      "fn": "ERC20._burn",
      "offset": [
        9337,
        9359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10232": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10233": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10234": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10235": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10237": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10238": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10239": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10240": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10242": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10243": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10244": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10245": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 140
    },
    "10246": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10247": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "LT",
      "path": "1"
    },
    "10248": {
      "branch": 236,
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10249": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x285F"
    },
    "10252": {
      "branch": 236,
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10253": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10255": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10256": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10260": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10262": {
      "op": "SHL"
    },
    "10263": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10264": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10267": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10269": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10270": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "ADD",
      "path": "1"
    },
    "10271": {
      "op": "MSTORE"
    },
    "10272": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10274": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10276": {
      "op": "DUP3"
    },
    "10277": {
      "op": "ADD"
    },
    "10278": {
      "op": "MSTORE"
    },
    "10279": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "10312": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10314": {
      "op": "DUP3"
    },
    "10315": {
      "op": "ADD"
    },
    "10316": {
      "op": "MSTORE"
    },
    "10317": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "10320": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "10322": {
      "op": "SHL"
    },
    "10323": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10325": {
      "op": "DUP3"
    },
    "10326": {
      "op": "ADD"
    },
    "10327": {
      "op": "MSTORE"
    },
    "10328": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10330": {
      "op": "ADD"
    },
    "10331": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B2"
    },
    "10334": {
      "op": "JUMP"
    },
    "10335": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10342": {
      "op": "SHL"
    },
    "10343": {
      "op": "SUB"
    },
    "10344": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 141
    },
    "10345": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "AND",
      "path": "1"
    },
    "10346": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10348": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10349": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10350": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10351": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10353": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10354": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10355": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10356": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10358": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10359": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10360": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10361": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10362": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "SUB",
      "path": "1"
    },
    "10363": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9539
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10364": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9539
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10365": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9571
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 142,
      "value": "0x2"
    },
    "10367": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10368": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10369": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10370": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10371": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9504
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10372": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x288E"
    },
    "10375": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10376": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10377": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10378": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3168"
    },
    "10381": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9559,
        9581
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10382": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10383": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10384": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10385": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10386": {
      "op": "POP"
    },
    "10387": {
      "op": "POP"
    },
    "10388": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 143,
      "value": "0x40"
    },
    "10390": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10391": {
      "op": "DUP3"
    },
    "10392": {
      "op": "DUP2"
    },
    "10393": {
      "op": "MSTORE"
    },
    "10394": {
      "fn": "ERC20._burn",
      "offset": [
        9623,
        9624
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10396": {
      "fn": "ERC20._burn",
      "offset": [
        9623,
        9624
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10403": {
      "op": "SHL"
    },
    "10404": {
      "op": "SUB"
    },
    "10405": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10406": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "AND",
      "path": "1"
    },
    "10407": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10410": {
      "op": "DUP1"
    },
    "10411": {
      "op": "MLOAD"
    },
    "10412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10414": {
      "op": "PUSH2",
      "value": "0x3299"
    },
    "10417": {
      "op": "DUP4"
    },
    "10418": {
      "op": "CODECOPY"
    },
    "10419": {
      "op": "DUP2"
    },
    "10420": {
      "op": "MLOAD"
    },
    "10421": {
      "op": "SWAP2"
    },
    "10422": {
      "op": "MSTORE"
    },
    "10423": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10426": {
      "op": "ADD"
    },
    "10427": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2012"
    },
    "10430": {
      "op": "JUMP"
    },
    "10431": {
      "fn": "ERC20._mint",
      "offset": [
        8415,
        8804
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10438": {
      "op": "SHL"
    },
    "10439": {
      "op": "SUB"
    },
    "10440": {
      "fn": "ERC20._mint",
      "offset": [
        8498,
        8519
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 144
    },
    "10441": {
      "branch": 237,
      "fn": "ERC20._mint",
      "offset": [
        8498,
        8519
      ],
      "op": "AND",
      "path": "1"
    },
    "10442": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2915"
    },
    "10445": {
      "branch": 237,
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10446": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10448": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10449": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10453": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10455": {
      "op": "SHL"
    },
    "10456": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10457": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10460": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10462": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10463": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "ADD",
      "path": "1"
    },
    "10464": {
      "op": "MSTORE"
    },
    "10465": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10467": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10469": {
      "op": "DUP3"
    },
    "10470": {
      "op": "ADD"
    },
    "10471": {
      "op": "MSTORE"
    },
    "10472": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "10505": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10507": {
      "op": "DUP3"
    },
    "10508": {
      "op": "ADD"
    },
    "10509": {
      "op": "MSTORE"
    },
    "10510": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10512": {
      "op": "ADD"
    },
    "10513": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B2"
    },
    "10516": {
      "op": "JUMP"
    },
    "10517": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10518": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8648
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 145
    },
    "10519": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "10521": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10523": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10524": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10525": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10526": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2927"
    },
    "10529": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10530": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10531": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31D6"
    },
    "10534": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8626,
        8648
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10535": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10536": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10537": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10538": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10539": {
      "op": "POP"
    },
    "10540": {
      "op": "POP"
    },
    "10541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10547": {
      "op": "SHL"
    },
    "10548": {
      "op": "SUB"
    },
    "10549": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 146
    },
    "10550": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "AND",
      "path": "1"
    },
    "10551": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8667
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10553": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10554": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10555": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10556": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10558": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10559": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10560": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10561": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10563": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10564": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10565": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10566": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10567": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10568": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10569": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8667
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10570": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2954"
    },
    "10573": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10574": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10575": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10576": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31D6"
    },
    "10579": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8658,
        8686
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10580": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10581": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10582": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10583": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10584": {
      "op": "POP"
    },
    "10585": {
      "op": "POP"
    },
    "10586": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 147,
      "value": "0x40"
    },
    "10588": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10589": {
      "op": "DUP2"
    },
    "10590": {
      "op": "DUP2"
    },
    "10591": {
      "op": "MSTORE"
    },
    "10592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10598": {
      "op": "SHL"
    },
    "10599": {
      "op": "SUB"
    },
    "10600": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10601": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "AND",
      "path": "1"
    },
    "10602": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10603": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10605": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8719
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10608": {
      "op": "DUP1"
    },
    "10609": {
      "op": "MLOAD"
    },
    "10610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10612": {
      "op": "PUSH2",
      "value": "0x3299"
    },
    "10615": {
      "op": "DUP4"
    },
    "10616": {
      "op": "CODECOPY"
    },
    "10617": {
      "op": "DUP2"
    },
    "10618": {
      "op": "MLOAD"
    },
    "10619": {
      "op": "SWAP2"
    },
    "10620": {
      "op": "MSTORE"
    },
    "10621": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10624": {
      "op": "ADD"
    },
    "10625": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10627": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10628": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10629": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10630": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SUB",
      "path": "1"
    },
    "10631": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10632": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "LOG3",
      "path": "1"
    },
    "10633": {
      "fn": "ERC20._mint",
      "offset": [
        8415,
        8804
      ],
      "op": "POP",
      "path": "1"
    },
    "10634": {
      "fn": "ERC20._mint",
      "offset": [
        8415,
        8804
      ],
      "op": "POP",
      "path": "1"
    },
    "10635": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8415,
        8804
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10636": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        11904,
        12945
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10637": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12056,
        12063
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "10639": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12097,
        12098
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 148
    },
    "10640": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12083,
        12094
      ],
      "op": "DUP6",
      "path": "8"
    },
    "10641": {
      "branch": 221,
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12083,
        12098
      ],
      "op": "GT",
      "path": "8"
    },
    "10642": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12083,
        12113
      ],
      "op": "DUP1",
      "path": "8"
    },
    "10643": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12083,
        12113
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "10644": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12083,
        12113
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x299D"
    },
    "10647": {
      "branch": 221,
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12083,
        12113
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "10648": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12083,
        12113
      ],
      "op": "POP",
      "path": "8"
    },
    "10649": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12112,
        12113
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "10651": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12102,
        12109
      ],
      "op": "DUP5",
      "path": "8"
    },
    "10652": {
      "branch": 222,
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12102,
        12113
      ],
      "op": "GT",
      "path": "8"
    },
    "10653": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12083,
        12113
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10654": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12075,
        12114
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x29A6"
    },
    "10657": {
      "branch": 222,
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12075,
        12114
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "10658": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12075,
        12114
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "10660": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12075,
        12114
      ],
      "op": "DUP1",
      "path": "8"
    },
    "10661": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12075,
        12114
      ],
      "op": "REVERT",
      "path": "8"
    },
    "10662": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12075,
        12114
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10663": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12153
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "10665": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12153
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "10666": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "10668": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "10669": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "10674": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10676": {
      "op": "SHL"
    },
    "10677": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10678": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "10679": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12172,
        12176
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "10680": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "10682": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "DUP3",
      "path": "8"
    },
    "10683": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "ADD",
      "path": "8"
    },
    "10684": {
      "op": "MSTORE"
    },
    "10685": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12124,
        12145
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "10687": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12124,
        12145
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "10688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10694": {
      "op": "SHL"
    },
    "10695": {
      "op": "SUB"
    },
    "10696": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12153
      ],
      "op": "AND",
      "path": "8"
    },
    "10697": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12153
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10698": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12163
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "10703": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12163
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10704": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10706": {
      "op": "ADD"
    },
    "10707": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "10709": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "10711": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "10712": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "DUP1",
      "path": "8"
    },
    "10713": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "DUP4",
      "path": "8"
    },
    "10714": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "SUB",
      "path": "8"
    },
    "10715": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10716": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "DUP7",
      "path": "8"
    },
    "10717": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "GAS",
      "path": "8"
    },
    "10718": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "10719": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "10720": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "DUP1",
      "path": "8"
    },
    "10721": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "10722": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x29EF"
    },
    "10725": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "10726": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "10727": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "10729": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "DUP1",
      "path": "8"
    },
    "10730": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "10731": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "10732": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "10734": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "REVERT",
      "path": "8"
    },
    "10735": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10736": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "POP",
      "path": "8"
    },
    "10737": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "POP",
      "path": "8"
    },
    "10738": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "POP",
      "path": "8"
    },
    "10739": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "POP",
      "path": "8"
    },
    "10740": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "10742": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "10743": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "10744": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "10746": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "NOT",
      "path": "8"
    },
    "10747": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "10749": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "DUP3",
      "path": "8"
    },
    "10750": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "ADD",
      "path": "8"
    },
    "10751": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "AND",
      "path": "8"
    },
    "10752": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "DUP3",
      "path": "8"
    },
    "10753": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "ADD",
      "path": "8"
    },
    "10754": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "DUP1",
      "path": "8"
    },
    "10755": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "10757": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "10758": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "POP",
      "path": "8"
    },
    "10759": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10760": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "ADD",
      "path": "8"
    },
    "10761": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10762": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A13"
    },
    "10765": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "10766": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10767": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30F8"
    },
    "10770": {
      "fn": "StakeFountain.tokenToBnbInput",
      "jump": "i",
      "offset": [
        12148,
        12178
      ],
      "op": "JUMP",
      "path": "8"
    },
    "10771": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12148,
        12178
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10772": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12124,
        12178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10773": {
      "op": "POP"
    },
    "10774": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12210,
        12231
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "10775": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12188,
        12207
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "10777": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12188,
        12207
      ],
      "op": "DUP1",
      "path": "8"
    },
    "10778": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12296,
        12396
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A24"
    },
    "10781": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12323,
        12334
      ],
      "op": "DUP10",
      "path": "8"
    },
    "10782": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12124,
        12178
      ],
      "op": "DUP6",
      "path": "8"
    },
    "10783": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12210,
        12231
      ],
      "op": "DUP6",
      "path": "8"
    },
    "10784": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12296,
        12309
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15B9"
    },
    "10787": {
      "fn": "StakeFountain.tokenToBnbInput",
      "jump": "i",
      "offset": [
        12296,
        12396
      ],
      "op": "JUMP",
      "path": "8"
    },
    "10788": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12296,
        12396
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10789": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12275,
        12396
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10790": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12275,
        12396
      ],
      "op": "POP",
      "path": "8"
    },
    "10791": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12428,
        12435
      ],
      "op": "DUP8",
      "path": "8",
      "statement": 149
    },
    "10792": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12414,
        12424
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10793": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12414,
        12435
      ],
      "op": "LT",
      "path": "8"
    },
    "10794": {
      "branch": 223,
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12414,
        12435
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "10795": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12406,
        12436
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A33"
    },
    "10798": {
      "branch": 223,
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12406,
        12436
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "10799": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12406,
        12436
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "10801": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12406,
        12436
      ],
      "op": "DUP1",
      "path": "8"
    },
    "10802": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12406,
        12436
      ],
      "op": "REVERT",
      "path": "8"
    },
    "10803": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12406,
        12436
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10810": {
      "op": "SHL"
    },
    "10811": {
      "op": "SUB"
    },
    "10812": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12466
      ],
      "op": "DUP8",
      "path": "8"
    },
    "10813": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12466
      ],
      "op": "AND",
      "path": "8"
    },
    "10814": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12466
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "10816": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12466
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10817": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12466
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10818": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12466
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "10819": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12459
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "10821": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12466
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "10823": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12466
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "10824": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12466
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "10826": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12466
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10827": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12466
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "10828": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12466
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "10829": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12466
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "10831": {
      "branch": 224,
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12466
      ],
      "op": "AND",
      "path": "8"
    },
    "10832": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12490
      ],
      "op": "DUP1",
      "path": "8"
    },
    "10833": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12490
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "10834": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12490
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A73"
    },
    "10837": {
      "branch": 224,
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12490
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "10838": {
      "op": "POP"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10845": {
      "op": "SHL"
    },
    "10846": {
      "op": "SUB"
    },
    "10847": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12490
      ],
      "op": "DUP7",
      "path": "8"
    },
    "10848": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12490
      ],
      "op": "AND",
      "path": "8"
    },
    "10849": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12490
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "10851": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12490
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10852": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12490
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10853": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12490
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "10854": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12479
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "10856": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12490
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "10858": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12490
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "10859": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12490
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "10861": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12490
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10862": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12490
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "10863": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12490
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "10864": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12490
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "10866": {
      "branch": 225,
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12470,
        12490
      ],
      "op": "AND",
      "path": "8"
    },
    "10867": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12450,
        12490
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10868": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12446,
        12685
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "10869": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12446,
        12685
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A80"
    },
    "10872": {
      "branch": 225,
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12446,
        12685
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "10873": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12525,
        12535
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 150
    },
    "10874": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12506,
        12535
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "10875": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12506,
        12535
      ],
      "op": "POP",
      "path": "8"
    },
    "10876": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12446,
        12685
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2AA4"
    },
    "10879": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12446,
        12685
      ],
      "op": "JUMP",
      "path": "8"
    },
    "10880": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12446,
        12685
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10881": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12605,
        12608
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 151,
      "value": "0x64"
    },
    "10883": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12586,
        12601
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A8D"
    },
    "10886": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12591,
        12601
      ],
      "op": "DUP3",
      "path": "8"
    },
    "10887": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12586,
        12588
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x52"
    },
    "10889": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12586,
        12601
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "10892": {
      "fn": "StakeFountain.tokenToBnbInput",
      "jump": "i",
      "offset": [
        12586,
        12601
      ],
      "op": "JUMP",
      "path": "8"
    },
    "10893": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12586,
        12601
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10894": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12585,
        12608
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A97"
    },
    "10897": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12585,
        12608
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "10898": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12585,
        12608
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10899": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12585,
        12608
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "10902": {
      "fn": "StakeFountain.tokenToBnbInput",
      "jump": "i",
      "offset": [
        12585,
        12608
      ],
      "op": "JUMP",
      "path": "8"
    },
    "10903": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12585,
        12608
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10904": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12566,
        12608
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "10905": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12566,
        12608
      ],
      "op": "POP",
      "path": "8"
    },
    "10906": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12622,
        12674
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 152,
      "value": "0x2AA4"
    },
    "10909": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12637,
        12647
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10910": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12649,
        12660
      ],
      "op": "DUP11",
      "path": "8"
    },
    "10911": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12662,
        12673
      ],
      "op": "DUP6",
      "path": "8"
    },
    "10912": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12622,
        12636
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2BA7"
    },
    "10915": {
      "fn": "StakeFountain.tokenToBnbInput",
      "jump": "i",
      "offset": [
        12622,
        12674
      ],
      "op": "JUMP",
      "path": "8"
    },
    "10916": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12622,
        12674
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10917": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 153,
      "value": "0x40"
    },
    "10919": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "10920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10926": {
      "op": "SHL"
    },
    "10927": {
      "op": "SUB"
    },
    "10928": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12721
      ],
      "op": "DUP8",
      "path": "8"
    },
    "10929": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12721
      ],
      "op": "AND",
      "path": "8"
    },
    "10930": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12721
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10931": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "DUP4",
      "path": "8"
    },
    "10932": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "10933": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8FC"
    },
    "10936": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "MUL",
      "path": "8"
    },
    "10937": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10938": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12722,
        12738
      ],
      "op": "DUP5",
      "path": "8"
    },
    "10939": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12722,
        12738
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10940": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "10942": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10943": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10944": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10945": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12722,
        12738
      ],
      "op": "DUP6",
      "path": "8"
    },
    "10946": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12721
      ],
      "op": "DUP9",
      "path": "8"
    },
    "10947": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "DUP9",
      "path": "8"
    },
    "10948": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "CALL",
      "path": "8"
    },
    "10949": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "10950": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "POP",
      "path": "8"
    },
    "10951": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "POP",
      "path": "8"
    },
    "10952": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "POP",
      "path": "8"
    },
    "10953": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "POP",
      "path": "8"
    },
    "10954": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "10955": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "DUP1",
      "path": "8"
    },
    "10956": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "10957": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2ADA"
    },
    "10960": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "10961": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "10962": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "10964": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "DUP1",
      "path": "8"
    },
    "10965": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "10966": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "10967": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "10969": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "REVERT",
      "path": "8"
    },
    "10970": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12694,
        12739
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "10971": {
      "op": "POP"
    },
    "10972": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12762
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 154,
      "value": "0x6"
    },
    "10974": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12762
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "10975": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "10977": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "10978": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "10983": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10985": {
      "op": "SHL"
    },
    "10986": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "DUP2",
      "path": "8"
    },
    "10987": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "10988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10994": {
      "op": "SHL"
    },
    "10995": {
      "op": "SUB"
    },
    "10996": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12762
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "10997": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12762
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "10998": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12762
      ],
      "op": "AND",
      "path": "8"
    },
    "10999": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12762
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11000": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12775
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "11005": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12775
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11006": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B0F"
    },
    "11009": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11010": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12776,
        12781
      ],
      "op": "DUP11",
      "path": "8"
    },
    "11011": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12776,
        12781
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11012": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12791,
        12795
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "11013": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12791,
        12795
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11014": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12798,
        12809
      ],
      "op": "DUP15",
      "path": "8"
    },
    "11015": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12798,
        12809
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11016": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "11018": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "ADD",
      "path": "8"
    },
    "11019": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3254"
    },
    "11022": {
      "fn": "StakeFountain.tokenToBnbInput",
      "jump": "i",
      "offset": [
        12757,
        12810
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11023": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11024": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "11026": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11028": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11029": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11030": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "DUP4",
      "path": "8"
    },
    "11031": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "SUB",
      "path": "8"
    },
    "11032": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "DUP2",
      "path": "8"
    },
    "11033": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11035": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "DUP8",
      "path": "8"
    },
    "11036": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "GAS",
      "path": "8"
    },
    "11037": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "CALL",
      "path": "8"
    },
    "11038": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "11039": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11040": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "11041": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B2E"
    },
    "11044": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "11045": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "11046": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11048": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11049": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "11050": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "11051": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11053": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "REVERT",
      "path": "8"
    },
    "11054": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11055": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "POP",
      "path": "8"
    },
    "11056": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "POP",
      "path": "8"
    },
    "11057": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "POP",
      "path": "8"
    },
    "11058": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "POP",
      "path": "8"
    },
    "11059": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11061": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11062": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "11063": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "11065": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "NOT",
      "path": "8"
    },
    "11066": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "11068": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "DUP3",
      "path": "8"
    },
    "11069": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "ADD",
      "path": "8"
    },
    "11070": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "AND",
      "path": "8"
    },
    "11071": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "DUP3",
      "path": "8"
    },
    "11072": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "ADD",
      "path": "8"
    },
    "11073": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11074": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11076": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "11077": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "POP",
      "path": "8"
    },
    "11078": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "DUP2",
      "path": "8"
    },
    "11079": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "ADD",
      "path": "8"
    },
    "11080": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11081": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B52"
    },
    "11084": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11085": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11086": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x317F"
    },
    "11089": {
      "fn": "StakeFountain.tokenToBnbInput",
      "jump": "i",
      "offset": [
        12757,
        12810
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11090": {
      "branch": 226,
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12757,
        12810
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11091": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12749,
        12811
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B5B"
    },
    "11094": {
      "branch": 226,
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12749,
        12811
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "11095": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12749,
        12811
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11097": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12749,
        12811
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11098": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12749,
        12811
      ],
      "op": "REVERT",
      "path": "8"
    },
    "11099": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12749,
        12811
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11100": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12860,
        12876
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 155
    },
    "11101": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12847,
        12858
      ],
      "op": "DUP10",
      "path": "8"
    },
    "11102": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12840,
        12845
      ],
      "op": "DUP9",
      "path": "8"
    },
    "11103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11109": {
      "op": "SHL"
    },
    "11110": {
      "op": "SUB"
    },
    "11111": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12826,
        12877
      ],
      "op": "AND",
      "path": "8"
    },
    "11112": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12826,
        12877
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x3CC32B807E0E6ADE29DEFE751A1339A43C1E45D7D18ECA93A916CA060EBE89EA"
    },
    "11145": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12826,
        12877
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11147": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12826,
        12877
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11148": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12826,
        12877
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11150": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12826,
        12877
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11151": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12826,
        12877
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11152": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12826,
        12877
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11153": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12826,
        12877
      ],
      "op": "SUB",
      "path": "8"
    },
    "11154": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12826,
        12877
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11155": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12826,
        12877
      ],
      "op": "LOG4",
      "path": "8"
    },
    "11156": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12887,
        12905
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 156,
      "value": "0x2B9B"
    },
    "11159": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12887,
        12903
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DDD"
    },
    "11162": {
      "fn": "StakeFountain.tokenToBnbInput",
      "jump": "i",
      "offset": [
        12887,
        12905
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11163": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12887,
        12905
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11164": {
      "op": "POP"
    },
    "11165": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        12922,
        12938
      ],
      "op": "SWAP8",
      "path": "8",
      "statement": 157
    },
    "11166": {
      "fn": "StakeFountain.tokenToBnbInput",
      "offset": [
        11904,
        12945
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "11167": {
      "op": "POP"
    },
    "11168": {
      "op": "POP"
    },
    "11169": {
      "op": "POP"
    },
    "11170": {
      "op": "POP"
    },
    "11171": {
      "op": "POP"
    },
    "11172": {
      "op": "POP"
    },
    "11173": {
      "op": "POP"
    },
    "11174": {
      "fn": "StakeFountain.tokenToBnbInput",
      "jump": "o",
      "offset": [
        11904,
        12945
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11175": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16163,
        17810
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11176": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16384,
        16404
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11178": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16427,
        16430
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "11180": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16408,
        16423
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2BB6"
    },
    "11183": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16412,
        16423
      ],
      "op": "DUP6",
      "path": "8"
    },
    "11184": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16408,
        16409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "11186": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16408,
        16423
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "11189": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        16408,
        16423
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11190": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16408,
        16423
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11191": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16407,
        16430
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2BC0"
    },
    "11194": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16407,
        16430
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11195": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16407,
        16430
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11196": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16407,
        16430
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "11199": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        16407,
        16430
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11200": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16407,
        16430
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11201": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16384,
        16430
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11202": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16384,
        16430
      ],
      "op": "POP",
      "path": "8"
    },
    "11203": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16440,
        16473
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 158,
      "value": "0x2BCB"
    },
    "11206": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16460,
        16472
      ],
      "op": "DUP2",
      "path": "8"
    },
    "11207": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16440,
        16459
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D39"
    },
    "11210": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        16440,
        16473
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11211": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16440,
        16473
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11212": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16546,
        16563
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11214": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16587,
        16590
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "11216": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16567,
        16583
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2BDA"
    },
    "11219": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16571,
        16583
      ],
      "op": "DUP6",
      "path": "8"
    },
    "11220": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16567,
        16568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "11222": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16567,
        16583
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "11225": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        16567,
        16583
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11226": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16567,
        16583
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11227": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16566,
        16590
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2BE4"
    },
    "11230": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16566,
        16590
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11231": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16566,
        16590
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11232": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16566,
        16590
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "11235": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        16566,
        16590
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11236": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16566,
        16590
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11237": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16605
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 159,
      "value": "0x6"
    },
    "11239": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16605
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "11240": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16615,
        16620
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "11242": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16615,
        16620
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "11243": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11245": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11246": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "11251": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11253": {
      "op": "SHL"
    },
    "11254": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "DUP2",
      "path": "8"
    },
    "11255": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "11256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11262": {
      "op": "SHL"
    },
    "11263": {
      "op": "SUB"
    },
    "11264": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16615,
        16620
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11265": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16615,
        16620
      ],
      "op": "DUP3",
      "path": "8"
    },
    "11266": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16615,
        16620
      ],
      "op": "AND",
      "path": "8"
    },
    "11267": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "11269": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "DUP3",
      "path": "8"
    },
    "11270": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "ADD",
      "path": "8"
    },
    "11271": {
      "op": "MSTORE"
    },
    "11272": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11274": {
      "op": "DUP2"
    },
    "11275": {
      "op": "ADD"
    },
    "11276": {
      "op": "DUP5"
    },
    "11277": {
      "op": "SWAP1"
    },
    "11278": {
      "op": "MSTORE"
    },
    "11279": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16546,
        16590
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "11280": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16546,
        16590
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "11281": {
      "op": "POP"
    },
    "11282": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16605
      ],
      "op": "AND",
      "path": "8"
    },
    "11283": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16605
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11284": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16614
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "11289": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16614
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11290": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11292": {
      "op": "ADD"
    },
    "11293": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "11295": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11297": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11298": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11299": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "DUP4",
      "path": "8"
    },
    "11300": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "SUB",
      "path": "8"
    },
    "11301": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "DUP2",
      "path": "8"
    },
    "11302": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11304": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "DUP8",
      "path": "8"
    },
    "11305": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "GAS",
      "path": "8"
    },
    "11306": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "CALL",
      "path": "8"
    },
    "11307": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "11308": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11309": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "11310": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C3B"
    },
    "11313": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "11314": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "11315": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11317": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11318": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "11319": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "11320": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11322": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "REVERT",
      "path": "8"
    },
    "11323": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11324": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "POP",
      "path": "8"
    },
    "11325": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "POP",
      "path": "8"
    },
    "11326": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "POP",
      "path": "8"
    },
    "11327": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "POP",
      "path": "8"
    },
    "11328": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11330": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11331": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "11332": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "11334": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "NOT",
      "path": "8"
    },
    "11335": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "11337": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "DUP3",
      "path": "8"
    },
    "11338": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "ADD",
      "path": "8"
    },
    "11339": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "AND",
      "path": "8"
    },
    "11340": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "DUP3",
      "path": "8"
    },
    "11341": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "ADD",
      "path": "8"
    },
    "11342": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11343": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11345": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "11346": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "POP",
      "path": "8"
    },
    "11347": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "DUP2",
      "path": "8"
    },
    "11348": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "ADD",
      "path": "8"
    },
    "11349": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11350": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C5F"
    },
    "11353": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11354": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11355": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x317F"
    },
    "11358": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        16600,
        16632
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11359": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16600,
        16632
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11360": {
      "op": "POP"
    },
    "11361": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16796,
        16831
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11363": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16855,
        16859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3E8"
    },
    "11366": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16835,
        16851
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C70"
    },
    "11369": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16840,
        16851
      ],
      "op": "DUP8",
      "path": "8"
    },
    "11370": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16835,
        16837
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x19"
    },
    "11372": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16835,
        16851
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "11375": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        16835,
        16851
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11376": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16835,
        16851
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11377": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16834,
        16859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C7A"
    },
    "11380": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16834,
        16859
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11381": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16834,
        16859
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11382": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16834,
        16859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "11385": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        16834,
        16859
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11386": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16834,
        16859
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11387": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16796,
        16859
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11388": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16796,
        16859
      ],
      "op": "POP",
      "path": "8"
    },
    "11389": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16869,
        16892
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11391": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16895,
        16908
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C87"
    },
    "11394": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "11396": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11397": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11398": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11399": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16895,
        16908
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11400": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16869,
        16908
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11401": {
      "op": "POP"
    },
    "11402": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16918,
        16942
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11404": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17007,
        17019
      ],
      "op": "DUP6",
      "path": "8"
    },
    "11405": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16946,
        17003
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C96"
    },
    "11408": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16869,
        16908
      ],
      "op": "DUP4",
      "path": "8"
    },
    "11409": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16946,
        16973
      ],
      "op": "DUP6",
      "path": "8"
    },
    "11410": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16946,
        17003
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "11413": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        16946,
        17003
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11414": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16946,
        17003
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11415": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16945,
        17019
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2CA0"
    },
    "11418": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16945,
        17019
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11419": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16945,
        17019
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11420": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16945,
        17019
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "11423": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        16945,
        17019
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11424": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16945,
        17019
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11425": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16918,
        17019
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11426": {
      "op": "POP"
    },
    "11427": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17030,
        17065
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11429": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17094,
        17097
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "11431": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17069,
        17090
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2CB1"
    },
    "11434": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16918,
        17019
      ],
      "op": "DUP4",
      "path": "8"
    },
    "11435": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17069,
        17071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "11437": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17069,
        17090
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3127"
    },
    "11440": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        17069,
        17090
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11441": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17069,
        17090
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11442": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17068,
        17097
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2CBB"
    },
    "11445": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17068,
        17097
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11446": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17068,
        17097
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11447": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17068,
        17097
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3146"
    },
    "11450": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        17068,
        17097
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11451": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17068,
        17097
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11452": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17030,
        17097
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11453": {
      "op": "POP"
    },
    "11454": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17107,
        17142
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11456": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17145,
        17203
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2CC9"
    },
    "11459": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17030,
        17097
      ],
      "op": "DUP3",
      "path": "8"
    },
    "11460": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17145,
        17161
      ],
      "op": "DUP5",
      "path": "8"
    },
    "11461": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17145,
        17203
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3168"
    },
    "11464": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        17145,
        17203
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11465": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17145,
        17203
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11466": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17219,
        17229
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 160,
      "value": "0xA"
    },
    "11468": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17219,
        17229
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "11469": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17107,
        17203
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11470": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17107,
        17203
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11471": {
      "op": "POP"
    },
    "11472": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17213,
        17259
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2CE2"
    },
    "11475": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17213,
        17259
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11482": {
      "op": "SHL"
    },
    "11483": {
      "op": "SUB"
    },
    "11484": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17219,
        17229
      ],
      "op": "AND",
      "path": "8"
    },
    "11485": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17231,
        17258
      ],
      "op": "DUP4",
      "path": "8"
    },
    "11486": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17213,
        17218
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x28BF"
    },
    "11489": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        17213,
        17259
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11490": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17213,
        17259
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11491": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17283,
        17293
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 161,
      "value": "0x7"
    },
    "11493": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17283,
        17293
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "11494": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17269,
        17324
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2CF8"
    },
    "11497": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17269,
        17324
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11504": {
      "op": "SHL"
    },
    "11505": {
      "op": "SUB"
    },
    "11506": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17283,
        17293
      ],
      "op": "AND",
      "path": "8"
    },
    "11507": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17296,
        17323
      ],
      "op": "DUP3",
      "path": "8"
    },
    "11508": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17269,
        17274
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x28BF"
    },
    "11511": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "i",
      "offset": [
        17269,
        17324
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11512": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17269,
        17324
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11513": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17344
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 162,
      "value": "0x7"
    },
    "11515": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17344
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11517": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17344
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11518": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17344
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "11519": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17344
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11520": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17344
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "11523": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17344
      ],
      "op": "EXP",
      "path": "8"
    },
    "11524": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17344
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11525": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17344
      ],
      "op": "DIV",
      "path": "8"
    },
    "11526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11532": {
      "op": "SHL"
    },
    "11533": {
      "op": "SUB"
    },
    "11534": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17344
      ],
      "op": "AND",
      "path": "8"
    },
    "11535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11541": {
      "op": "SHL"
    },
    "11542": {
      "op": "SUB"
    },
    "11543": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17355
      ],
      "op": "AND",
      "path": "8"
    },
    "11544": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17355
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x677A7872"
    },
    "11549": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11551": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11552": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "DUP2",
      "path": "8"
    },
    "11553": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "11558": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "AND",
      "path": "8"
    },
    "11559": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "11561": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "SHL",
      "path": "8"
    },
    "11562": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "DUP2",
      "path": "8"
    },
    "11563": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "11564": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "11566": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "ADD",
      "path": "8"
    },
    "11567": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11569": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11571": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11572": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11573": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "DUP4",
      "path": "8"
    },
    "11574": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "SUB",
      "path": "8"
    },
    "11575": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "DUP2",
      "path": "8"
    },
    "11576": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11578": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "DUP8",
      "path": "8"
    },
    "11579": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11580": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "11581": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "11582": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11583": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "11584": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2D48"
    },
    "11587": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "11588": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11590": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11591": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "REVERT",
      "path": "8"
    },
    "11592": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11593": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "POP",
      "path": "8"
    },
    "11594": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "GAS",
      "path": "8"
    },
    "11595": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "CALL",
      "path": "8"
    },
    "11596": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "11597": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11598": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "11599": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2D5C"
    },
    "11602": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "11603": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "11604": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11606": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11607": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "11608": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "11609": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11611": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "REVERT",
      "path": "8"
    },
    "11612": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11613": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "POP",
      "path": "8"
    },
    "11614": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "POP",
      "path": "8"
    },
    "11615": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "POP",
      "path": "8"
    },
    "11616": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17334,
        17357
      ],
      "op": "POP",
      "path": "8"
    },
    "11617": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17395,
        17420
      ],
      "op": "PUSH32",
      "path": "8",
      "statement": 163,
      "value": "0xC328594CAB3A117E8DDF861647E12C326EB6FA98AB8F707982AD7A13E8264C7C"
    },
    "11650": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17407,
        17419
      ],
      "op": "DUP8",
      "path": "8"
    },
    "11651": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17395,
        17420
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11653": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17395,
        17420
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11654": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17395,
        17420
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2D91"
    },
    "11657": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17395,
        17420
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11658": {
      "op": "DUP2"
    },
    "11659": {
      "op": "MSTORE"
    },
    "11660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11662": {
      "op": "ADD"
    },
    "11663": {
      "op": "SWAP1"
    },
    "11664": {
      "op": "JUMP"
    },
    "11665": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17395,
        17420
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "11666": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17395,
        17420
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11668": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17395,
        17420
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11669": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17395,
        17420
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11670": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17395,
        17420
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11671": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17395,
        17420
      ],
      "op": "SUB",
      "path": "8"
    },
    "11672": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17395,
        17420
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11673": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17395,
        17420
      ],
      "op": "LOG1",
      "path": "8"
    },
    "11674": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17435,
        17454
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 164,
      "value": "0x40"
    },
    "11676": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17435,
        17454
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11677": {
      "op": "DUP7"
    },
    "11678": {
      "op": "DUP2"
    },
    "11679": {
      "op": "MSTORE"
    },
    "11680": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17435,
        17454
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x44B0FC80E673B7CE4245D6302C96DC22199A569A1B815FE4295E3B6EA54F95B"
    },
    "11713": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17435,
        17454
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11716": {
      "op": "ADD"
    },
    "11717": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17435,
        17454
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11719": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17435,
        17454
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11720": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17435,
        17454
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11721": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17435,
        17454
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11722": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17435,
        17454
      ],
      "op": "SUB",
      "path": "8"
    },
    "11723": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17435,
        17454
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11724": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17435,
        17454
      ],
      "op": "LOG1",
      "path": "8"
    },
    "11725": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17504,
        17514
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 165,
      "value": "0xA"
    },
    "11727": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17504,
        17514
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "11728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11734": {
      "op": "SHL"
    },
    "11735": {
      "op": "SUB"
    },
    "11736": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17504,
        17514
      ],
      "op": "AND",
      "path": "8"
    },
    "11737": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11739": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11740": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11741": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11742": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11744": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11745": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11746": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11747": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11749": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11750": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11751": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "11752": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11753": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17470,
        17516
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11754": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17470,
        17516
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11755": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11756": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11757": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17504,
        17514
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11760": {
      "op": "DUP1"
    },
    "11761": {
      "op": "MLOAD"
    },
    "11762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11764": {
      "op": "PUSH2",
      "value": "0x3279"
    },
    "11767": {
      "op": "DUP4"
    },
    "11768": {
      "op": "CODECOPY"
    },
    "11769": {
      "op": "DUP2"
    },
    "11770": {
      "op": "MLOAD"
    },
    "11771": {
      "op": "SWAP2"
    },
    "11772": {
      "op": "MSTORE"
    },
    "11773": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17470,
        17516
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11774": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17470,
        17516
      ],
      "op": "LOG3",
      "path": "8"
    },
    "11775": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17552,
        17562
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 166,
      "value": "0xA"
    },
    "11777": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17552,
        17562
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "11778": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17531,
        17592
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11780": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17531,
        17592
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11781": {
      "op": "DUP4"
    },
    "11782": {
      "op": "DUP2"
    },
    "11783": {
      "op": "MSTORE"
    },
    "11784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11790": {
      "op": "SHL"
    },
    "11791": {
      "op": "SUB"
    },
    "11792": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17552,
        17562
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11793": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17552,
        17562
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11794": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17552,
        17562
      ],
      "op": "AND",
      "path": "8"
    },
    "11795": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17552,
        17562
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11796": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17552,
        17562
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11798": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17552,
        17562
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11801": {
      "op": "DUP1"
    },
    "11802": {
      "op": "MLOAD"
    },
    "11803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11805": {
      "op": "PUSH2",
      "value": "0x3299"
    },
    "11808": {
      "op": "DUP4"
    },
    "11809": {
      "op": "CODECOPY"
    },
    "11810": {
      "op": "DUP2"
    },
    "11811": {
      "op": "MLOAD"
    },
    "11812": {
      "op": "SWAP2"
    },
    "11813": {
      "op": "MSTORE"
    },
    "11814": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17531,
        17592
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11817": {
      "op": "ADD"
    },
    "11818": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17531,
        17592
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11820": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17531,
        17592
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11821": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17531,
        17592
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11822": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17531,
        17592
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11823": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17531,
        17592
      ],
      "op": "SUB",
      "path": "8"
    },
    "11824": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17531,
        17592
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11825": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17531,
        17592
      ],
      "op": "LOG3",
      "path": "8"
    },
    "11826": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17659,
        17669
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 167,
      "value": "0x7"
    },
    "11828": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17659,
        17669
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "11829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11835": {
      "op": "SHL"
    },
    "11836": {
      "op": "SUB"
    },
    "11837": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17659,
        17669
      ],
      "op": "AND",
      "path": "8"
    },
    "11838": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11840": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11841": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11842": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11843": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11845": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11846": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11847": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11848": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11850": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11851": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11852": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "11853": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11854": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17608,
        17672
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11855": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17608,
        17672
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11856": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11857": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11858": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17659,
        17669
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11861": {
      "op": "DUP1"
    },
    "11862": {
      "op": "MLOAD"
    },
    "11863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11865": {
      "op": "PUSH2",
      "value": "0x3279"
    },
    "11868": {
      "op": "DUP4"
    },
    "11869": {
      "op": "CODECOPY"
    },
    "11870": {
      "op": "DUP2"
    },
    "11871": {
      "op": "MLOAD"
    },
    "11872": {
      "op": "SWAP2"
    },
    "11873": {
      "op": "MSTORE"
    },
    "11874": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17608,
        17672
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11875": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17608,
        17672
      ],
      "op": "LOG3",
      "path": "8"
    },
    "11876": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17741,
        17751
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 168,
      "value": "0x7"
    },
    "11878": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17741,
        17751
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "11879": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17687,
        17803
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11881": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17687,
        17803
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11882": {
      "op": "DUP3"
    },
    "11883": {
      "op": "DUP2"
    },
    "11884": {
      "op": "MSTORE"
    },
    "11885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11891": {
      "op": "SHL"
    },
    "11892": {
      "op": "SUB"
    },
    "11893": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17741,
        17751
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11894": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17741,
        17751
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11895": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17741,
        17751
      ],
      "op": "AND",
      "path": "8"
    },
    "11896": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17741,
        17751
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11897": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17741,
        17751
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "11899": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17741,
        17751
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11902": {
      "op": "DUP1"
    },
    "11903": {
      "op": "MLOAD"
    },
    "11904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11906": {
      "op": "PUSH2",
      "value": "0x3299"
    },
    "11909": {
      "op": "DUP4"
    },
    "11910": {
      "op": "CODECOPY"
    },
    "11911": {
      "op": "DUP2"
    },
    "11912": {
      "op": "MLOAD"
    },
    "11913": {
      "op": "SWAP2"
    },
    "11914": {
      "op": "MSTORE"
    },
    "11915": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17687,
        17803
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11918": {
      "op": "ADD"
    },
    "11919": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17687,
        17803
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "11921": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17687,
        17803
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "11922": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17687,
        17803
      ],
      "op": "DUP1",
      "path": "8"
    },
    "11923": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17687,
        17803
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "11924": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17687,
        17803
      ],
      "op": "SUB",
      "path": "8"
    },
    "11925": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17687,
        17803
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "11926": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        17687,
        17803
      ],
      "op": "LOG3",
      "path": "8"
    },
    "11927": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16291,
        17810
      ],
      "op": "POP",
      "path": "8"
    },
    "11928": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16291,
        17810
      ],
      "op": "POP",
      "path": "8"
    },
    "11929": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16291,
        17810
      ],
      "op": "POP",
      "path": "8"
    },
    "11930": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16291,
        17810
      ],
      "op": "POP",
      "path": "8"
    },
    "11931": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16291,
        17810
      ],
      "op": "POP",
      "path": "8"
    },
    "11932": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16291,
        17810
      ],
      "op": "POP",
      "path": "8"
    },
    "11933": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16291,
        17810
      ],
      "op": "POP",
      "path": "8"
    },
    "11934": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16163,
        17810
      ],
      "op": "POP",
      "path": "8"
    },
    "11935": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16163,
        17810
      ],
      "op": "POP",
      "path": "8"
    },
    "11936": {
      "fn": "StakeFountain.tokenToBnbFees",
      "offset": [
        16163,
        17810
      ],
      "op": "POP",
      "path": "8"
    },
    "11937": {
      "fn": "StakeFountain.tokenToBnbFees",
      "jump": "o",
      "offset": [
        16163,
        17810
      ],
      "op": "JUMP",
      "path": "8"
    },
    "11938": {
      "op": "JUMPDEST"
    },
    "11939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11943": {
      "op": "DUP1"
    },
    "11944": {
      "op": "DUP4"
    },
    "11945": {
      "op": "MSTORE"
    },
    "11946": {
      "op": "DUP4"
    },
    "11947": {
      "op": "MLOAD"
    },
    "11948": {
      "op": "DUP1"
    },
    "11949": {
      "op": "DUP3"
    },
    "11950": {
      "op": "DUP6"
    },
    "11951": {
      "op": "ADD"
    },
    "11952": {
      "op": "MSTORE"
    },
    "11953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11955": {
      "op": "JUMPDEST"
    },
    "11956": {
      "op": "DUP2"
    },
    "11957": {
      "op": "DUP2"
    },
    "11958": {
      "op": "LT"
    },
    "11959": {
      "op": "ISZERO"
    },
    "11960": {
      "op": "PUSH2",
      "value": "0x2ECF"
    },
    "11963": {
      "op": "JUMPI"
    },
    "11964": {
      "op": "DUP6"
    },
    "11965": {
      "op": "DUP2"
    },
    "11966": {
      "op": "ADD"
    },
    "11967": {
      "op": "DUP4"
    },
    "11968": {
      "op": "ADD"
    },
    "11969": {
      "op": "MLOAD"
    },
    "11970": {
      "op": "DUP6"
    },
    "11971": {
      "op": "DUP3"
    },
    "11972": {
      "op": "ADD"
    },
    "11973": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11975": {
      "op": "ADD"
    },
    "11976": {
      "op": "MSTORE"
    },
    "11977": {
      "op": "DUP3"
    },
    "11978": {
      "op": "ADD"
    },
    "11979": {
      "op": "PUSH2",
      "value": "0x2EB3"
    },
    "11982": {
      "op": "JUMP"
    },
    "11983": {
      "op": "JUMPDEST"
    },
    "11984": {
      "op": "DUP2"
    },
    "11985": {
      "op": "DUP2"
    },
    "11986": {
      "op": "GT"
    },
    "11987": {
      "op": "ISZERO"
    },
    "11988": {
      "op": "PUSH2",
      "value": "0x2EE1"
    },
    "11991": {
      "op": "JUMPI"
    },
    "11992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11994": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11996": {
      "op": "DUP4"
    },
    "11997": {
      "op": "DUP8"
    },
    "11998": {
      "op": "ADD"
    },
    "11999": {
      "op": "ADD"
    },
    "12000": {
      "op": "MSTORE"
    },
    "12001": {
      "op": "JUMPDEST"
    },
    "12002": {
      "op": "POP"
    },
    "12003": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12005": {
      "op": "ADD"
    },
    "12006": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12008": {
      "op": "NOT"
    },
    "12009": {
      "op": "AND"
    },
    "12010": {
      "op": "SWAP3"
    },
    "12011": {
      "op": "SWAP1"
    },
    "12012": {
      "op": "SWAP3"
    },
    "12013": {
      "op": "ADD"
    },
    "12014": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12016": {
      "op": "ADD"
    },
    "12017": {
      "op": "SWAP4"
    },
    "12018": {
      "op": "SWAP3"
    },
    "12019": {
      "op": "POP"
    },
    "12020": {
      "op": "POP"
    },
    "12021": {
      "op": "POP"
    },
    "12022": {
      "jump": "o",
      "op": "JUMP"
    },
    "12023": {
      "op": "JUMPDEST"
    },
    "12024": {
      "op": "DUP1"
    },
    "12025": {
      "op": "CALLDATALOAD"
    },
    "12026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12032": {
      "op": "SHL"
    },
    "12033": {
      "op": "SUB"
    },
    "12034": {
      "op": "DUP2"
    },
    "12035": {
      "op": "AND"
    },
    "12036": {
      "op": "DUP2"
    },
    "12037": {
      "op": "EQ"
    },
    "12038": {
      "op": "PUSH2",
      "value": "0xF13"
    },
    "12041": {
      "op": "JUMPI"
    },
    "12042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12044": {
      "op": "DUP1"
    },
    "12045": {
      "op": "REVERT"
    },
    "12046": {
      "op": "JUMPDEST"
    },
    "12047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12049": {
      "op": "DUP1"
    },
    "12050": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12052": {
      "op": "DUP4"
    },
    "12053": {
      "op": "DUP6"
    },
    "12054": {
      "op": "SUB"
    },
    "12055": {
      "op": "SLT"
    },
    "12056": {
      "op": "ISZERO"
    },
    "12057": {
      "op": "PUSH2",
      "value": "0x2F21"
    },
    "12060": {
      "op": "JUMPI"
    },
    "12061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12063": {
      "op": "DUP1"
    },
    "12064": {
      "op": "REVERT"
    },
    "12065": {
      "op": "JUMPDEST"
    },
    "12066": {
      "op": "PUSH2",
      "value": "0x2F2A"
    },
    "12069": {
      "op": "DUP4"
    },
    "12070": {
      "op": "PUSH2",
      "value": "0x2EF7"
    },
    "12073": {
      "jump": "i",
      "op": "JUMP"
    },
    "12074": {
      "op": "JUMPDEST"
    },
    "12075": {
      "op": "SWAP5"
    },
    "12076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12078": {
      "op": "SWAP4"
    },
    "12079": {
      "op": "SWAP1"
    },
    "12080": {
      "op": "SWAP4"
    },
    "12081": {
      "op": "ADD"
    },
    "12082": {
      "op": "CALLDATALOAD"
    },
    "12083": {
      "op": "SWAP4"
    },
    "12084": {
      "op": "POP"
    },
    "12085": {
      "op": "POP"
    },
    "12086": {
      "op": "POP"
    },
    "12087": {
      "jump": "o",
      "op": "JUMP"
    },
    "12088": {
      "op": "JUMPDEST"
    },
    "12089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12093": {
      "op": "DUP3"
    },
    "12094": {
      "op": "DUP5"
    },
    "12095": {
      "op": "SUB"
    },
    "12096": {
      "op": "SLT"
    },
    "12097": {
      "op": "ISZERO"
    },
    "12098": {
      "op": "PUSH2",
      "value": "0x2F4A"
    },
    "12101": {
      "op": "JUMPI"
    },
    "12102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12104": {
      "op": "DUP1"
    },
    "12105": {
      "op": "REVERT"
    },
    "12106": {
      "op": "JUMPDEST"
    },
    "12107": {
      "op": "POP"
    },
    "12108": {
      "op": "CALLDATALOAD"
    },
    "12109": {
      "op": "SWAP2"
    },
    "12110": {
      "op": "SWAP1"
    },
    "12111": {
      "op": "POP"
    },
    "12112": {
      "jump": "o",
      "op": "JUMP"
    },
    "12113": {
      "op": "JUMPDEST"
    },
    "12114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12116": {
      "op": "DUP1"
    },
    "12117": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12119": {
      "op": "DUP4"
    },
    "12120": {
      "op": "DUP6"
    },
    "12121": {
      "op": "SUB"
    },
    "12122": {
      "op": "SLT"
    },
    "12123": {
      "op": "ISZERO"
    },
    "12124": {
      "op": "PUSH2",
      "value": "0x2F64"
    },
    "12127": {
      "op": "JUMPI"
    },
    "12128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12130": {
      "op": "DUP1"
    },
    "12131": {
      "op": "REVERT"
    },
    "12132": {
      "op": "JUMPDEST"
    },
    "12133": {
      "op": "POP"
    },
    "12134": {
      "op": "POP"
    },
    "12135": {
      "op": "DUP1"
    },
    "12136": {
      "op": "CALLDATALOAD"
    },
    "12137": {
      "op": "SWAP3"
    },
    "12138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12140": {
      "op": "SWAP1"
    },
    "12141": {
      "op": "SWAP2"
    },
    "12142": {
      "op": "ADD"
    },
    "12143": {
      "op": "CALLDATALOAD"
    },
    "12144": {
      "op": "SWAP2"
    },
    "12145": {
      "op": "POP"
    },
    "12146": {
      "jump": "o",
      "op": "JUMP"
    },
    "12147": {
      "op": "JUMPDEST"
    },
    "12148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12150": {
      "op": "DUP1"
    },
    "12151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12153": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12155": {
      "op": "DUP5"
    },
    "12156": {
      "op": "DUP7"
    },
    "12157": {
      "op": "SUB"
    },
    "12158": {
      "op": "SLT"
    },
    "12159": {
      "op": "ISZERO"
    },
    "12160": {
      "op": "PUSH2",
      "value": "0x2F88"
    },
    "12163": {
      "op": "JUMPI"
    },
    "12164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12166": {
      "op": "DUP1"
    },
    "12167": {
      "op": "REVERT"
    },
    "12168": {
      "op": "JUMPDEST"
    },
    "12169": {
      "op": "PUSH2",
      "value": "0x2F91"
    },
    "12172": {
      "op": "DUP5"
    },
    "12173": {
      "op": "PUSH2",
      "value": "0x2EF7"
    },
    "12176": {
      "jump": "i",
      "op": "JUMP"
    },
    "12177": {
      "op": "JUMPDEST"
    },
    "12178": {
      "op": "SWAP3"
    },
    "12179": {
      "op": "POP"
    },
    "12180": {
      "op": "PUSH2",
      "value": "0x2F9F"
    },
    "12183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12185": {
      "op": "DUP6"
    },
    "12186": {
      "op": "ADD"
    },
    "12187": {
      "op": "PUSH2",
      "value": "0x2EF7"
    },
    "12190": {
      "jump": "i",
      "op": "JUMP"
    },
    "12191": {
      "op": "JUMPDEST"
    },
    "12192": {
      "op": "SWAP2"
    },
    "12193": {
      "op": "POP"
    },
    "12194": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12196": {
      "op": "DUP5"
    },
    "12197": {
      "op": "ADD"
    },
    "12198": {
      "op": "CALLDATALOAD"
    },
    "12199": {
      "op": "SWAP1"
    },
    "12200": {
      "op": "POP"
    },
    "12201": {
      "op": "SWAP3"
    },
    "12202": {
      "op": "POP"
    },
    "12203": {
      "op": "SWAP3"
    },
    "12204": {
      "op": "POP"
    },
    "12205": {
      "op": "SWAP3"
    },
    "12206": {
      "jump": "o",
      "op": "JUMP"
    },
    "12207": {
      "op": "JUMPDEST"
    },
    "12208": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12213": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12215": {
      "op": "SHL"
    },
    "12216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12218": {
      "op": "MSTORE"
    },
    "12219": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12221": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12223": {
      "op": "MSTORE"
    },
    "12224": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12228": {
      "op": "REVERT"
    },
    "12229": {
      "op": "JUMPDEST"
    },
    "12230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12234": {
      "op": "DUP1"
    },
    "12235": {
      "op": "DUP4"
    },
    "12236": {
      "op": "DUP6"
    },
    "12237": {
      "op": "SUB"
    },
    "12238": {
      "op": "SLT"
    },
    "12239": {
      "op": "ISZERO"
    },
    "12240": {
      "op": "PUSH2",
      "value": "0x2FD8"
    },
    "12243": {
      "op": "JUMPI"
    },
    "12244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12246": {
      "op": "DUP1"
    },
    "12247": {
      "op": "REVERT"
    },
    "12248": {
      "op": "JUMPDEST"
    },
    "12249": {
      "op": "DUP3"
    },
    "12250": {
      "op": "CALLDATALOAD"
    },
    "12251": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12260": {
      "op": "DUP1"
    },
    "12261": {
      "op": "DUP3"
    },
    "12262": {
      "op": "GT"
    },
    "12263": {
      "op": "ISZERO"
    },
    "12264": {
      "op": "PUSH2",
      "value": "0x2FF0"
    },
    "12267": {
      "op": "JUMPI"
    },
    "12268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12270": {
      "op": "DUP1"
    },
    "12271": {
      "op": "REVERT"
    },
    "12272": {
      "op": "JUMPDEST"
    },
    "12273": {
      "op": "DUP2"
    },
    "12274": {
      "op": "DUP6"
    },
    "12275": {
      "op": "ADD"
    },
    "12276": {
      "op": "SWAP2"
    },
    "12277": {
      "op": "POP"
    },
    "12278": {
      "op": "DUP6"
    },
    "12279": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12281": {
      "op": "DUP4"
    },
    "12282": {
      "op": "ADD"
    },
    "12283": {
      "op": "SLT"
    },
    "12284": {
      "op": "PUSH2",
      "value": "0x3004"
    },
    "12287": {
      "op": "JUMPI"
    },
    "12288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12290": {
      "op": "DUP1"
    },
    "12291": {
      "op": "REVERT"
    },
    "12292": {
      "op": "JUMPDEST"
    },
    "12293": {
      "op": "DUP2"
    },
    "12294": {
      "op": "CALLDATALOAD"
    },
    "12295": {
      "op": "DUP2"
    },
    "12296": {
      "op": "DUP2"
    },
    "12297": {
      "op": "GT"
    },
    "12298": {
      "op": "ISZERO"
    },
    "12299": {
      "op": "PUSH2",
      "value": "0x3016"
    },
    "12302": {
      "op": "JUMPI"
    },
    "12303": {
      "op": "PUSH2",
      "value": "0x3016"
    },
    "12306": {
      "op": "PUSH2",
      "value": "0x2FAF"
    },
    "12309": {
      "jump": "i",
      "op": "JUMP"
    },
    "12310": {
      "op": "JUMPDEST"
    },
    "12311": {
      "op": "DUP1"
    },
    "12312": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12314": {
      "op": "SHL"
    },
    "12315": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12317": {
      "op": "MLOAD"
    },
    "12318": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12320": {
      "op": "NOT"
    },
    "12321": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "12323": {
      "op": "DUP4"
    },
    "12324": {
      "op": "ADD"
    },
    "12325": {
      "op": "AND"
    },
    "12326": {
      "op": "DUP2"
    },
    "12327": {
      "op": "ADD"
    },
    "12328": {
      "op": "DUP2"
    },
    "12329": {
      "op": "DUP2"
    },
    "12330": {
      "op": "LT"
    },
    "12331": {
      "op": "DUP6"
    },
    "12332": {
      "op": "DUP3"
    },
    "12333": {
      "op": "GT"
    },
    "12334": {
      "op": "OR"
    },
    "12335": {
      "op": "ISZERO"
    },
    "12336": {
      "op": "PUSH2",
      "value": "0x303B"
    },
    "12339": {
      "op": "JUMPI"
    },
    "12340": {
      "op": "PUSH2",
      "value": "0x303B"
    },
    "12343": {
      "op": "PUSH2",
      "value": "0x2FAF"
    },
    "12346": {
      "jump": "i",
      "op": "JUMP"
    },
    "12347": {
      "op": "JUMPDEST"
    },
    "12348": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12350": {
      "op": "MSTORE"
    },
    "12351": {
      "op": "SWAP2"
    },
    "12352": {
      "op": "DUP3"
    },
    "12353": {
      "op": "MSTORE"
    },
    "12354": {
      "op": "DUP5"
    },
    "12355": {
      "op": "DUP3"
    },
    "12356": {
      "op": "ADD"
    },
    "12357": {
      "op": "SWAP3"
    },
    "12358": {
      "op": "POP"
    },
    "12359": {
      "op": "DUP4"
    },
    "12360": {
      "op": "DUP2"
    },
    "12361": {
      "op": "ADD"
    },
    "12362": {
      "op": "DUP6"
    },
    "12363": {
      "op": "ADD"
    },
    "12364": {
      "op": "SWAP2"
    },
    "12365": {
      "op": "DUP9"
    },
    "12366": {
      "op": "DUP4"
    },
    "12367": {
      "op": "GT"
    },
    "12368": {
      "op": "ISZERO"
    },
    "12369": {
      "op": "PUSH2",
      "value": "0x3059"
    },
    "12372": {
      "op": "JUMPI"
    },
    "12373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12375": {
      "op": "DUP1"
    },
    "12376": {
      "op": "REVERT"
    },
    "12377": {
      "op": "JUMPDEST"
    },
    "12378": {
      "op": "SWAP4"
    },
    "12379": {
      "op": "DUP6"
    },
    "12380": {
      "op": "ADD"
    },
    "12381": {
      "op": "SWAP4"
    },
    "12382": {
      "op": "JUMPDEST"
    },
    "12383": {
      "op": "DUP3"
    },
    "12384": {
      "op": "DUP6"
    },
    "12385": {
      "op": "LT"
    },
    "12386": {
      "op": "ISZERO"
    },
    "12387": {
      "op": "PUSH2",
      "value": "0x225B"
    },
    "12390": {
      "op": "JUMPI"
    },
    "12391": {
      "op": "PUSH2",
      "value": "0x306F"
    },
    "12394": {
      "op": "DUP6"
    },
    "12395": {
      "op": "PUSH2",
      "value": "0x2EF7"
    },
    "12398": {
      "jump": "i",
      "op": "JUMP"
    },
    "12399": {
      "op": "JUMPDEST"
    },
    "12400": {
      "op": "DUP5"
    },
    "12401": {
      "op": "MSTORE"
    },
    "12402": {
      "op": "SWAP4"
    },
    "12403": {
      "op": "DUP6"
    },
    "12404": {
      "op": "ADD"
    },
    "12405": {
      "op": "SWAP4"
    },
    "12406": {
      "op": "SWAP3"
    },
    "12407": {
      "op": "DUP6"
    },
    "12408": {
      "op": "ADD"
    },
    "12409": {
      "op": "SWAP3"
    },
    "12410": {
      "op": "PUSH2",
      "value": "0x305E"
    },
    "12413": {
      "op": "JUMP"
    },
    "12414": {
      "op": "JUMPDEST"
    },
    "12415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12419": {
      "op": "DUP3"
    },
    "12420": {
      "op": "DUP5"
    },
    "12421": {
      "op": "SUB"
    },
    "12422": {
      "op": "SLT"
    },
    "12423": {
      "op": "ISZERO"
    },
    "12424": {
      "op": "PUSH2",
      "value": "0x3090"
    },
    "12427": {
      "op": "JUMPI"
    },
    "12428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12430": {
      "op": "DUP1"
    },
    "12431": {
      "op": "REVERT"
    },
    "12432": {
      "op": "JUMPDEST"
    },
    "12433": {
      "op": "PUSH2",
      "value": "0xD81"
    },
    "12436": {
      "op": "DUP3"
    },
    "12437": {
      "op": "PUSH2",
      "value": "0x2EF7"
    },
    "12440": {
      "jump": "i",
      "op": "JUMP"
    },
    "12441": {
      "op": "JUMPDEST"
    },
    "12442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12444": {
      "op": "DUP1"
    },
    "12445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12447": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12449": {
      "op": "DUP5"
    },
    "12450": {
      "op": "DUP7"
    },
    "12451": {
      "op": "SUB"
    },
    "12452": {
      "op": "SLT"
    },
    "12453": {
      "op": "ISZERO"
    },
    "12454": {
      "op": "PUSH2",
      "value": "0x30AE"
    },
    "12457": {
      "op": "JUMPI"
    },
    "12458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12460": {
      "op": "DUP1"
    },
    "12461": {
      "op": "REVERT"
    },
    "12462": {
      "op": "JUMPDEST"
    },
    "12463": {
      "op": "POP"
    },
    "12464": {
      "op": "POP"
    },
    "12465": {
      "op": "DUP2"
    },
    "12466": {
      "op": "CALLDATALOAD"
    },
    "12467": {
      "op": "SWAP4"
    },
    "12468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12470": {
      "op": "DUP4"
    },
    "12471": {
      "op": "ADD"
    },
    "12472": {
      "op": "CALLDATALOAD"
    },
    "12473": {
      "op": "SWAP4"
    },
    "12474": {
      "op": "POP"
    },
    "12475": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12477": {
      "op": "SWAP1"
    },
    "12478": {
      "op": "SWAP3"
    },
    "12479": {
      "op": "ADD"
    },
    "12480": {
      "op": "CALLDATALOAD"
    },
    "12481": {
      "op": "SWAP2"
    },
    "12482": {
      "op": "SWAP1"
    },
    "12483": {
      "op": "POP"
    },
    "12484": {
      "jump": "o",
      "op": "JUMP"
    },
    "12485": {
      "op": "JUMPDEST"
    },
    "12486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12488": {
      "op": "DUP1"
    },
    "12489": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12491": {
      "op": "DUP4"
    },
    "12492": {
      "op": "DUP6"
    },
    "12493": {
      "op": "SUB"
    },
    "12494": {
      "op": "SLT"
    },
    "12495": {
      "op": "ISZERO"
    },
    "12496": {
      "op": "PUSH2",
      "value": "0x30D8"
    },
    "12499": {
      "op": "JUMPI"
    },
    "12500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12502": {
      "op": "DUP1"
    },
    "12503": {
      "op": "REVERT"
    },
    "12504": {
      "op": "JUMPDEST"
    },
    "12505": {
      "op": "PUSH2",
      "value": "0x30E1"
    },
    "12508": {
      "op": "DUP4"
    },
    "12509": {
      "op": "PUSH2",
      "value": "0x2EF7"
    },
    "12512": {
      "jump": "i",
      "op": "JUMP"
    },
    "12513": {
      "op": "JUMPDEST"
    },
    "12514": {
      "op": "SWAP2"
    },
    "12515": {
      "op": "POP"
    },
    "12516": {
      "op": "PUSH2",
      "value": "0x30EF"
    },
    "12519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12521": {
      "op": "DUP5"
    },
    "12522": {
      "op": "ADD"
    },
    "12523": {
      "op": "PUSH2",
      "value": "0x2EF7"
    },
    "12526": {
      "jump": "i",
      "op": "JUMP"
    },
    "12527": {
      "op": "JUMPDEST"
    },
    "12528": {
      "op": "SWAP1"
    },
    "12529": {
      "op": "POP"
    },
    "12530": {
      "op": "SWAP3"
    },
    "12531": {
      "op": "POP"
    },
    "12532": {
      "op": "SWAP3"
    },
    "12533": {
      "op": "SWAP1"
    },
    "12534": {
      "op": "POP"
    },
    "12535": {
      "jump": "o",
      "op": "JUMP"
    },
    "12536": {
      "op": "JUMPDEST"
    },
    "12537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12541": {
      "op": "DUP3"
    },
    "12542": {
      "op": "DUP5"
    },
    "12543": {
      "op": "SUB"
    },
    "12544": {
      "op": "SLT"
    },
    "12545": {
      "op": "ISZERO"
    },
    "12546": {
      "op": "PUSH2",
      "value": "0x310A"
    },
    "12549": {
      "op": "JUMPI"
    },
    "12550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12552": {
      "op": "DUP1"
    },
    "12553": {
      "op": "REVERT"
    },
    "12554": {
      "op": "JUMPDEST"
    },
    "12555": {
      "op": "POP"
    },
    "12556": {
      "op": "MLOAD"
    },
    "12557": {
      "op": "SWAP2"
    },
    "12558": {
      "op": "SWAP1"
    },
    "12559": {
      "op": "POP"
    },
    "12560": {
      "jump": "o",
      "op": "JUMP"
    },
    "12561": {
      "op": "JUMPDEST"
    },
    "12562": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12567": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12569": {
      "op": "SHL"
    },
    "12570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12572": {
      "op": "MSTORE"
    },
    "12573": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "12575": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12577": {
      "op": "MSTORE"
    },
    "12578": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12582": {
      "op": "REVERT"
    },
    "12583": {
      "op": "JUMPDEST"
    },
    "12584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12586": {
      "op": "DUP2"
    },
    "12587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12589": {
      "op": "NOT"
    },
    "12590": {
      "op": "DIV"
    },
    "12591": {
      "op": "DUP4"
    },
    "12592": {
      "op": "GT"
    },
    "12593": {
      "op": "DUP3"
    },
    "12594": {
      "op": "ISZERO"
    },
    "12595": {
      "op": "ISZERO"
    },
    "12596": {
      "op": "AND"
    },
    "12597": {
      "op": "ISZERO"
    },
    "12598": {
      "op": "PUSH2",
      "value": "0x3141"
    },
    "12601": {
      "op": "JUMPI"
    },
    "12602": {
      "op": "PUSH2",
      "value": "0x3141"
    },
    "12605": {
      "op": "PUSH2",
      "value": "0x3111"
    },
    "12608": {
      "jump": "i",
      "op": "JUMP"
    },
    "12609": {
      "op": "JUMPDEST"
    },
    "12610": {
      "op": "POP"
    },
    "12611": {
      "op": "MUL"
    },
    "12612": {
      "op": "SWAP1"
    },
    "12613": {
      "jump": "o",
      "op": "JUMP"
    },
    "12614": {
      "op": "JUMPDEST"
    },
    "12615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12617": {
      "op": "DUP3"
    },
    "12618": {
      "op": "PUSH2",
      "value": "0x3163"
    },
    "12621": {
      "op": "JUMPI"
    },
    "12622": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12627": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12629": {
      "op": "SHL"
    },
    "12630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12632": {
      "op": "MSTORE"
    },
    "12633": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "12635": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12637": {
      "op": "MSTORE"
    },
    "12638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12642": {
      "op": "REVERT"
    },
    "12643": {
      "op": "JUMPDEST"
    },
    "12644": {
      "op": "POP"
    },
    "12645": {
      "op": "DIV"
    },
    "12646": {
      "op": "SWAP1"
    },
    "12647": {
      "jump": "o",
      "op": "JUMP"
    },
    "12648": {
      "op": "JUMPDEST"
    },
    "12649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12651": {
      "op": "DUP3"
    },
    "12652": {
      "op": "DUP3"
    },
    "12653": {
      "op": "LT"
    },
    "12654": {
      "op": "ISZERO"
    },
    "12655": {
      "op": "PUSH2",
      "value": "0x317A"
    },
    "12658": {
      "op": "JUMPI"
    },
    "12659": {
      "op": "PUSH2",
      "value": "0x317A"
    },
    "12662": {
      "op": "PUSH2",
      "value": "0x3111"
    },
    "12665": {
      "jump": "i",
      "op": "JUMP"
    },
    "12666": {
      "op": "JUMPDEST"
    },
    "12667": {
      "op": "POP"
    },
    "12668": {
      "op": "SUB"
    },
    "12669": {
      "op": "SWAP1"
    },
    "12670": {
      "jump": "o",
      "op": "JUMP"
    },
    "12671": {
      "op": "JUMPDEST"
    },
    "12672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12674": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12676": {
      "op": "DUP3"
    },
    "12677": {
      "op": "DUP5"
    },
    "12678": {
      "op": "SUB"
    },
    "12679": {
      "op": "SLT"
    },
    "12680": {
      "op": "ISZERO"
    },
    "12681": {
      "op": "PUSH2",
      "value": "0x3191"
    },
    "12684": {
      "op": "JUMPI"
    },
    "12685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12687": {
      "op": "DUP1"
    },
    "12688": {
      "op": "REVERT"
    },
    "12689": {
      "op": "JUMPDEST"
    },
    "12690": {
      "op": "DUP2"
    },
    "12691": {
      "op": "MLOAD"
    },
    "12692": {
      "op": "DUP1"
    },
    "12693": {
      "op": "ISZERO"
    },
    "12694": {
      "op": "ISZERO"
    },
    "12695": {
      "op": "DUP2"
    },
    "12696": {
      "op": "EQ"
    },
    "12697": {
      "op": "PUSH2",
      "value": "0xD81"
    },
    "12700": {
      "op": "JUMPI"
    },
    "12701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12703": {
      "op": "DUP1"
    },
    "12704": {
      "op": "REVERT"
    },
    "12705": {
      "op": "JUMPDEST"
    },
    "12706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12708": {
      "op": "DUP2"
    },
    "12709": {
      "op": "DUP2"
    },
    "12710": {
      "op": "SHR"
    },
    "12711": {
      "op": "SWAP1"
    },
    "12712": {
      "op": "DUP3"
    },
    "12713": {
      "op": "AND"
    },
    "12714": {
      "op": "DUP1"
    },
    "12715": {
      "op": "PUSH2",
      "value": "0x31B5"
    },
    "12718": {
      "op": "JUMPI"
    },
    "12719": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "12721": {
      "op": "DUP3"
    },
    "12722": {
      "op": "AND"
    },
    "12723": {
      "op": "SWAP2"
    },
    "12724": {
      "op": "POP"
    },
    "12725": {
      "op": "JUMPDEST"
    },
    "12726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12728": {
      "op": "DUP3"
    },
    "12729": {
      "op": "LT"
    },
    "12730": {
      "op": "DUP2"
    },
    "12731": {
      "op": "EQ"
    },
    "12732": {
      "op": "ISZERO"
    },
    "12733": {
      "op": "PUSH2",
      "value": "0xF11"
    },
    "12736": {
      "op": "JUMPI"
    },
    "12737": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12742": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12744": {
      "op": "SHL"
    },
    "12745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12747": {
      "op": "MSTORE"
    },
    "12748": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12750": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12752": {
      "op": "MSTORE"
    },
    "12753": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12757": {
      "op": "REVERT"
    },
    "12758": {
      "op": "JUMPDEST"
    },
    "12759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12761": {
      "op": "DUP3"
    },
    "12762": {
      "op": "NOT"
    },
    "12763": {
      "op": "DUP3"
    },
    "12764": {
      "op": "GT"
    },
    "12765": {
      "op": "ISZERO"
    },
    "12766": {
      "op": "PUSH2",
      "value": "0x31E9"
    },
    "12769": {
      "op": "JUMPI"
    },
    "12770": {
      "op": "PUSH2",
      "value": "0x31E9"
    },
    "12773": {
      "op": "PUSH2",
      "value": "0x3111"
    },
    "12776": {
      "jump": "i",
      "op": "JUMP"
    },
    "12777": {
      "op": "JUMPDEST"
    },
    "12778": {
      "op": "POP"
    },
    "12779": {
      "op": "ADD"
    },
    "12780": {
      "op": "SWAP1"
    },
    "12781": {
      "jump": "o",
      "op": "JUMP"
    },
    "12782": {
      "op": "JUMPDEST"
    },
    "12783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12785": {
      "op": "DUP1"
    },
    "12786": {
      "op": "DUP3"
    },
    "12787": {
      "op": "MSTORE"
    },
    "12788": {
      "op": "DUP2"
    },
    "12789": {
      "op": "DUP2"
    },
    "12790": {
      "op": "ADD"
    },
    "12791": {
      "op": "MSTORE"
    },
    "12792": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "12825": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12827": {
      "op": "DUP3"
    },
    "12828": {
      "op": "ADD"
    },
    "12829": {
      "op": "MSTORE"
    },
    "12830": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12832": {
      "op": "ADD"
    },
    "12833": {
      "op": "SWAP1"
    },
    "12834": {
      "jump": "o",
      "op": "JUMP"
    },
    "12835": {
      "op": "JUMPDEST"
    },
    "12836": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12841": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12843": {
      "op": "SHL"
    },
    "12844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12846": {
      "op": "MSTORE"
    },
    "12847": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "12849": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12851": {
      "op": "MSTORE"
    },
    "12852": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12856": {
      "op": "REVERT"
    },
    "12857": {
      "op": "JUMPDEST"
    },
    "12858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12862": {
      "op": "NOT"
    },
    "12863": {
      "op": "DUP3"
    },
    "12864": {
      "op": "EQ"
    },
    "12865": {
      "op": "ISZERO"
    },
    "12866": {
      "op": "PUSH2",
      "value": "0x324D"
    },
    "12869": {
      "op": "JUMPI"
    },
    "12870": {
      "op": "PUSH2",
      "value": "0x324D"
    },
    "12873": {
      "op": "PUSH2",
      "value": "0x3111"
    },
    "12876": {
      "jump": "i",
      "op": "JUMP"
    },
    "12877": {
      "op": "JUMPDEST"
    },
    "12878": {
      "op": "POP"
    },
    "12879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12881": {
      "op": "ADD"
    },
    "12882": {
      "op": "SWAP1"
    },
    "12883": {
      "jump": "o",
      "op": "JUMP"
    },
    "12884": {
      "op": "JUMPDEST"
    },
    "12885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12891": {
      "op": "SHL"
    },
    "12892": {
      "op": "SUB"
    },
    "12893": {
      "op": "SWAP4"
    },
    "12894": {
      "op": "DUP5"
    },
    "12895": {
      "op": "AND"
    },
    "12896": {
      "op": "DUP2"
    },
    "12897": {
      "op": "MSTORE"
    },
    "12898": {
      "op": "SWAP2"
    },
    "12899": {
      "op": "SWAP1"
    },
    "12900": {
      "op": "SWAP3"
    },
    "12901": {
      "op": "AND"
    },
    "12902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12904": {
      "op": "DUP3"
    },
    "12905": {
      "op": "ADD"
    },
    "12906": {
      "op": "MSTORE"
    },
    "12907": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12909": {
      "op": "DUP2"
    },
    "12910": {
      "op": "ADD"
    },
    "12911": {
      "op": "SWAP2"
    },
    "12912": {
      "op": "SWAP1"
    },
    "12913": {
      "op": "SWAP2"
    },
    "12914": {
      "op": "MSTORE"
    },
    "12915": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12917": {
      "op": "ADD"
    },
    "12918": {
      "op": "SWAP1"
    },
    "12919": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "316efe51144a85cb3799588cbf897bcbb15c5376",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\n// Openzeppelin\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n// Stake Protocol\nimport \"./StakeToken.sol\";\nimport \"./TokenLock.sol\";\n\n/// This contract will be in charge of swapping BNB for $STAKE, adding Liquidity as $STAKE/BNB and minting LP token to user for the given amount\n\n/// When the user swaps from BNB to STAKE, 3% of it is sent to treasury as BNB.\n/// Operators should not be taxed\n\n/// When user swaps from STAKE to BNB, 18% of the STAKE is taxed.\n/// 8% of the total value to swap is converted to BNB and sent to treasury.\n/// 5% of the STAKE to swap is sent to vault in STAKE.\n/// 5% of the STAKE to swap is converted to LP token by converting half of it to BNB and then sent to foundation.\n\ncontract StakeFountain is ERC20, Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for ERC20;\n\n    // Vars\n    StakeToken public token; // ERC20 token traded on this contract\n    TokenLocker public token_lock;\n    address public treasury;\n    address public vault;\n    address public foundation;\n\n    uint256 public totalTxs;\n    uint256 public lastBalance_;\n    uint256 public trackingInterval_ = 1 minutes;\n    uint256 public providers;\n\n    mapping(address => bool) public whitelist;\n    mapping(address => bool) public _providers;\n    mapping(address => uint256) public _txs;\n\n    bool public isPaused = true;\n\n    // Events\n    event onTokenPurchase(\n        address indexed buyer,\n        uint256 indexed bnb_amount,\n        uint256 indexed token_amount\n    );\n    event onBnbPurchase(\n        address indexed buyer,\n        uint256 indexed token_amount,\n        uint256 indexed bnb_amount\n    );\n    event onAddLiquidity(\n        address indexed provider,\n        uint256 indexed bnb_amount,\n        uint256 indexed token_amount\n    );\n    event onRemoveLiquidity(\n        address indexed provider,\n        uint256 indexed bnb_amount,\n        uint256 indexed token_amount\n    );\n    event onLiquidity(address indexed provider, uint256 indexed amount);\n    event onContractBalance(uint256 balance);\n    event onPrice(uint256 price);\n    event onSummary(uint256 liquidity, uint256 price);\n    event OperatorAddressAdded(address operator);\n    event OperatorAddressRemoved(address operator);\n    event TreasuryFee(uint256 amount);\n    event VaultFee(uint256 amount);\n    event FoundationFee(\n        uint256 bnb_amount,\n        uint256 stake_amount,\n        uint256 liquidity_minted\n    );\n    event WhitelistedAddressAdded(address addr);\n    event WhitelistedAddressRemoved(address addr);\n\n    // _token0 is the $STAKE address and _token1 is the BNB address\n    constructor(\n        address _token,\n        address _treasury,\n        address _vault,\n        address _foundation\n    ) ERC20(\"Stake LP token\", \"STOKE\") {\n        token = StakeToken(_token);\n        lastBalance_ = block.timestamp;\n        treasury = _treasury;\n        vault = _vault;\n        foundation = _foundation;\n    }\n\n    // Lock functions\n\n    /// @dev Sets lock address. Make sure to set a lock address after deploying.\n    /// @param _lock token lock address\n    function setLock(address _lock) public onlyOwner {\n        token_lock = TokenLocker(_lock);\n    }\n\n    /***********************************|\n    |        WHITELIST FUNCTIONS        |\n    |__________________________________*/\n    // Whitelisted addresses pay no tax when swapping\n\n    /**\n     * @dev add an address to the whitelist\n     * @param addr address\n     */\n    function addAddressToWhitelist(address addr)\n        public\n        onlyOwner\n        returns (bool success)\n    {\n        if (!whitelist[addr]) {\n            whitelist[addr] = true;\n            emit WhitelistedAddressAdded(addr);\n            success = true;\n        }\n    }\n\n    /**\n     * @dev add addresses to the whitelist\n     * @param addrs addresses\n     */\n    function addAddressesToWhitelist(address[] memory addrs)\n        public\n        onlyOwner\n        returns (bool success)\n    {\n        for (uint256 i = 0; i < addrs.length; i++) {\n            if (addAddressToWhitelist(addrs[i])) {\n                success = true;\n            }\n        }\n        return success;\n    }\n\n    /**\n     * @dev remove an address from the whitelist\n     * @param addr address\n     */\n    function removeAddressFromWhitelist(address addr)\n        public\n        onlyOwner\n        returns (bool success)\n    {\n        if (whitelist[addr]) {\n            whitelist[addr] = false;\n            emit WhitelistedAddressRemoved(addr);\n            success = true;\n        }\n        return success;\n    }\n\n    /**\n     * @dev remove addresses from the whitelist\n     * @param addrs addresses\n     */\n    function removeAddressesFromWhitelist(address[] memory addrs)\n        public\n        onlyOwner\n        returns (bool success)\n    {\n        for (uint256 i = 0; i < addrs.length; i++) {\n            if (removeAddressFromWhitelist(addrs[i])) {\n                success = true;\n            }\n        }\n        return success;\n    }\n\n    /***********************************|\n    |    $STAKE  EXCHANGE FUNCTIONS     |\n    |__________________________________*/\n\n    /**\n     * @notice Convert BNB to Tokens.\n     * @dev User specifies exact input (msg.value).\n     */\n    receive() external payable {\n        bnbToTokenInput(msg.value, 1, msg.sender, msg.sender);\n    }\n\n    /**\n     * @dev Pricing function for converting between BNB && Tokens without fee.\n     * @param input_amount Amount of BNB or Tokens being sold.\n     * @param input_reserve Amount of BNB or Tokens (input type) in exchange reserves.\n     * @param output_reserve Amount of BNB or Tokens (output type) in exchange reserves.\n     * @return Amount of BNB or Tokens bought.\n     */\n    function getInputPrice(\n        uint256 input_amount,\n        uint256 input_reserve,\n        uint256 output_reserve\n    ) public view returns (uint256) {\n        require(input_reserve > 0 && output_reserve > 0, \"INVALID_VALUE\");\n        uint256 numerator = input_amount * output_reserve;\n        uint256 denominator = input_reserve + input_amount;\n        return numerator / denominator;\n    }\n\n    /**\n     * @dev Pricing function for converting between BNB && Tokens without fee.\n     * @param output_amount Amount of BNB or Tokens being bought.\n     * @param input_reserve Amount of BNB or Tokens (input type) in exchange reserves.\n     * @param output_reserve Amount of BNB or Tokens (output type) in exchange reserves.\n     * @return Amount of BNB or Tokens sold.\n     */\n    function getOutputPrice(\n        uint256 output_amount,\n        uint256 input_reserve,\n        uint256 output_reserve\n    ) public view returns (uint256) {\n        require(input_reserve > 0 && output_reserve > 0);\n        uint256 numerator = input_reserve * output_amount;\n        uint256 denominator = (output_reserve - output_amount);\n        return (numerator / denominator) + 1;\n    }\n\n    /**\n     * @dev Function to convert BNB into STAKE. Set an amount of BNB to obtain an amount of tokens. Fees included.\n     * @param _bnb_sold Amount of BNB that user has paid to buy tokens.\n     * @param _min_tokens Amount of minimum tokens after slippage.\n     * @param _buyer address that paid for the tokens.\n     * @param _recipient address that will receive the tokens.\n     */\n    function bnbToTokenInput(\n        uint256 _bnb_sold,\n        uint256 _min_tokens,\n        address _buyer,\n        address _recipient\n    ) private returns (uint256) {\n        require(_bnb_sold > 0 && _min_tokens > 0, \"sold and min 0\");\n        uint256 bnb_sold;\n        uint256 treasury_fee;\n        uint256 token_reserve = token.balanceOf(address(this));\n        uint256 bnb_reserve = address(this).balance;\n\n        if (whitelist[_buyer] && whitelist[_recipient]) {\n            bnb_sold = _bnb_sold;\n        } else {\n            treasury_fee = (3 * bnb_sold) / 100;\n            bnb_sold = _bnb_sold - treasury_fee;\n        }\n        uint256 tokens_bought = getInputPrice(\n            bnb_sold,\n            bnb_reserve - bnb_sold,\n            token_reserve\n        );\n\n        require(tokens_bought >= _min_tokens, \"tokens_bought >= min_tokens\");\n        // Transferring tokens to msg.sender and transferring fee\n        require(token.transfer(_recipient, tokens_bought), \"transfer err\");\n        if (treasury_fee > 0) transferTreasuryFee(treasury_fee);\n\n        emit onTokenPurchase(_buyer, _bnb_sold, tokens_bought);\n        emit onContractBalance(bnbBalance());\n\n        trackGlobalStats();\n\n        return tokens_bought;\n    }\n\n    /**\n     * @notice Convert BNB to Tokens.\n     * @dev User specifies exact input (msg.value) && minimum output.\n     * @param min_tokens Minimum Tokens bought. Considers slippage.\n     * @return Amount of Tokens bought.\n     */\n    function bnbToTokenSwapInput(uint256 min_tokens)\n        public\n        payable\n        returns (uint256)\n    {\n        return bnbToTokenInput(msg.value, min_tokens, msg.sender, msg.sender);\n    }\n\n    /**\n     * @dev Function to convert BNB into STAKE. Set an amount of STAKE get it at a price in BNB .\n     * @param tokens_bought Set amount of tokens\n     * @param max_bnb Maximum amount of BNB that can be charged for the set amount of stake.\n     * @param buyer address that paid for the tokens.\n     * @param recipient address that will receive the tokens.\n     */\n    function bnbToTokenOutput(\n        uint256 tokens_bought,\n        uint256 max_bnb,\n        address buyer,\n        address recipient\n    ) private returns (uint256) {\n        require(tokens_bought > 0 && max_bnb > 0);\n        uint256 total_bnb_sold;\n        uint256 treasury_fee;\n        uint256 token_reserve = token.balanceOf(address(this));\n        uint256 bnb_reserve = address(this).balance;\n        uint256 bnb_sold = getOutputPrice(\n            tokens_bought,\n            bnb_reserve - max_bnb,\n            token_reserve\n        );\n        if (whitelist[buyer] && whitelist[recipient]) {\n            total_bnb_sold = bnb_sold;\n        } else {\n            total_bnb_sold = (100 * bnb_sold) / 97;\n            treasury_fee = (3 * total_bnb_sold) / 100;\n        }\n\n        // Throws if total_bnb_sold > max_bnb\n        uint256 bnb_refund = max_bnb - total_bnb_sold;\n        if (bnb_refund > 0) {\n            payable(buyer).transfer(bnb_refund);\n        }\n        require(token.transfer(recipient, tokens_bought));\n        if (treasury_fee > 0) transferTreasuryFee(treasury_fee);\n        emit onTokenPurchase(buyer, total_bnb_sold, tokens_bought);\n        emit TreasuryFee(treasury_fee);\n        trackGlobalStats();\n        return total_bnb_sold;\n    }\n\n    /**\n     * @notice Convert BNB to Tokens.\n     * @dev User specifies maximum input (msg.value) && exact output.\n     * @param tokens_bought Amount of tokens bought.\n     * @return Amount of BNB sold.\n     */\n    function bnbToTokenSwapOutput(uint256 tokens_bought)\n        public\n        payable\n        returns (uint256)\n    {\n        return\n            bnbToTokenOutput(tokens_bought, msg.value, msg.sender, msg.sender);\n    }\n\n    /**\n     * @dev Function to convert STAKE into BNB. Taxes before calculating and transferring the tokens.\n     *When user swaps from STAKE to BNB, 18% of the STAKE is taxed.\n     * 8% of the total value to swap is converted to BNB and sent to treasury.\n     * 5% of the STAKE to swap is sent to vault in STAKE.\n     * 5% of the STAKE to swap is converted to LP token by converting half of it to BNB and then sent to foundation.\n     * @param tokens_sold Amount of STAKE that user has paid to buy BNB.\n     * @param min_bnb Amount of minimum BNB after slippage.\n     * @param buyer address that transferred the tokens.\n     * @param recipient address that will receive the BNB.\n     */\n    function tokenToBnbInput(\n        uint256 tokens_sold,\n        uint256 min_bnb,\n        address buyer,\n        address recipient\n    ) private returns (uint256) {\n        require(tokens_sold > 0 && min_bnb > 0);\n        uint256 token_reserve = token.balanceOf(address(this));\n        uint256 bnb_reserve = address(this).balance;\n        uint256 total_bnb_bought;\n        uint256 bnb_bought = getInputPrice(\n            tokens_sold,\n            token_reserve,\n            bnb_reserve\n        );\n        require(bnb_bought >= min_bnb);\n        if (whitelist[buyer] && whitelist[recipient]) {\n            total_bnb_bought = bnb_bought;\n        } else {\n            total_bnb_bought = (82 * bnb_bought) / 100;\n            tokenToBnbFees(bnb_bought, tokens_sold, bnb_reserve);\n        }\n        payable(recipient).transfer(total_bnb_bought);\n        require(token.transferFrom(buyer, address(this), tokens_sold));\n        emit onBnbPurchase(buyer, tokens_sold, total_bnb_bought);\n        trackGlobalStats();\n        return total_bnb_bought;\n    }\n\n    /**\n     * @notice Convert Tokens to BNB.\n     * @dev User specifies exact input && minimum output.\n     * @param tokens_sold Amount of Tokens sold.\n     * @param min_bnb Minimum BNB purchased.\n     * @return Amount of BNB bought.\n     */\n    function tokenToBnbSwapInput(uint256 tokens_sold, uint256 min_bnb)\n        public\n        returns (uint256)\n    {\n        return tokenToBnbInput(tokens_sold, min_bnb, msg.sender, msg.sender);\n    }\n\n    function tokenToBnbOutput(\n        uint256 bnb_bought,\n        uint256 max_tokens,\n        address buyer,\n        address recipient\n    ) private returns (uint256) {\n        require(bnb_bought > 0);\n        uint256 token_reserve = token.balanceOf(address(this));\n        uint256 bnb_reserve = address(this).balance;\n        uint256 tokens_sold = getOutputPrice(\n            bnb_bought,\n            token_reserve,\n            bnb_reserve\n        );\n        uint256 total_tokens_sold;\n        //Added fees into price in tokens\n        require(max_tokens >= tokens_sold, \"max tokens exceeded\");\n        if (whitelist[buyer] && whitelist[recipient]) {\n            total_tokens_sold = tokens_sold;\n        } else {\n            total_tokens_sold = (100 * tokens_sold) / 82;\n            tokenToBnbFees(bnb_bought, total_tokens_sold, bnb_reserve);\n        }\n\n        // tokens sold is always > 0\n        payable(recipient).transfer(bnb_bought);\n        require(token.transferFrom(buyer, address(this), total_tokens_sold));\n        emit onBnbPurchase(buyer, total_tokens_sold, bnb_bought);\n        trackGlobalStats();\n\n        return total_tokens_sold;\n    }\n\n    /**\n     * @notice Convert Tokens to BNB.\n     * @dev User specifies maximum input && exact output.\n     * @param bnb_bought Amount of BNB purchased.\n     * @param max_tokens Maximum Tokens sold.\n     * @return Amount of Tokens sold.\n     */\n    function tokenToBnbSwapOutput(uint256 bnb_bought, uint256 max_tokens)\n        public\n        returns (uint256)\n    {\n        return tokenToBnbOutput(bnb_bought, max_tokens, msg.sender, msg.sender);\n    }\n\n    function trackGlobalStats() private {\n        uint256 price = getBnbToTokenOutputPrice(1e18);\n        uint256 balance = bnbBalance();\n\n        if (block.timestamp - lastBalance_ > trackingInterval_) {\n            emit onSummary(balance * 2, price);\n            lastBalance_ = block.timestamp;\n        }\n\n        emit onContractBalance(balance);\n        emit onPrice(price);\n\n        totalTxs += 1;\n        _txs[msg.sender] += 1;\n    }\n\n    // Fee functions\n\n    /// Function that charges the respective fee to treasury\n    /// @param _treasury_fee is the amount of BNB charged as fee\n    function transferTreasuryFee(uint256 _treasury_fee) internal {\n        // Calculating fee and BNB sold\n        require(_treasury_fee > 0);\n        (bool os, ) = payable(treasury).call{value: _treasury_fee}(\"\");\n        require(os);\n        emit TreasuryFee(_treasury_fee);\n    }\n\n    /// Function that calculates and transfers fees for treasury, vault, foundation and lock\n    /// @param _bnb_bought is the amount of BNB that user has bought\n    /// @param _tokens_sold is the amount of tokens user sells\n    /// @param _bnb_reserve is this contract's bnb balance\n    function tokenToBnbFees(\n        uint256 _bnb_bought,\n        uint256 _tokens_sold,\n        uint256 _bnb_reserve\n    ) internal {\n        // 8% of the total value to swap is converted to BNB and sent to treasury.\n        uint256 treasury_fee = (8 * _bnb_bought) / 100;\n        transferTreasuryFee(treasury_fee);\n\n        // 5% of the STAKE to swap is sent to vault in STAKE.\n        uint256 vault_fee = (5 * _tokens_sold) / 100;\n        token.transfer(vault, vault_fee);\n\n        // 5% of the STAKE to swap is converted to LP token by converting half of it to BNB. Then 90% of it is sent to token lock and 10% to foundation.\n        uint256 foundation_and_lock_fee_bnb = (25 * _bnb_bought) / 1000;\n        uint256 total_liquidity = totalSupply();\n        uint256 liquidity_minted = (foundation_and_lock_fee_bnb *\n            total_liquidity) / _bnb_reserve;\n\n        uint256 foundation_liquidity_minted = (10 * liquidity_minted) / 100;\n        uint256 token_lock_liquidity_minted = liquidity_minted -\n            foundation_liquidity_minted;\n        _mint(foundation, foundation_liquidity_minted);\n        _mint(address(token_lock), token_lock_liquidity_minted);\n        token_lock.updateLock();\n\n        // Fee events\n        emit TreasuryFee(treasury_fee);\n        emit VaultFee(vault_fee);\n\n        emit onLiquidity(foundation, balanceOf(foundation));\n        emit Transfer(address(0), foundation, foundation_liquidity_minted);\n\n        emit onLiquidity(address(token_lock), balanceOf(address(token_lock)));\n        emit Transfer(\n            address(0),\n            address(token_lock),\n            token_lock_liquidity_minted\n        );\n    }\n\n    /// Exchange Getter Functions\n\n    /**\n     * @notice Public price function for BNB to Token trades with an exact input.\n     * @param bnb_sold Amount of BNB sold.\n     * @return Amount of Tokens that can be bought with input BNB.\n     */\n    function getBnbToTokenInputPrice(uint256 bnb_sold)\n        public\n        view\n        returns (uint256)\n    {\n        require(bnb_sold > 0);\n        uint256 token_reserve = token.balanceOf(address(this));\n        return getInputPrice(bnb_sold, address(this).balance, token_reserve);\n    }\n\n    /**\n     * @notice Public price function for BNB to Token trades with an exact output.\n     * @param tokens_bought Amount of Tokens bought.\n     * @return Amount of BNB needed to buy output Tokens.\n     */\n    function getBnbToTokenOutputPrice(uint256 tokens_bought)\n        public\n        view\n        returns (uint256)\n    {\n        require(tokens_bought > 0);\n        uint256 token_reserve = token.balanceOf(address(this));\n        uint256 bnb_sold = getOutputPrice(\n            tokens_bought,\n            address(this).balance,\n            token_reserve\n        );\n        return bnb_sold;\n    }\n\n    /**\n     * @notice Public price function for Token to BNB trades with an exact input.\n     * @param tokens_sold Amount of Tokens sold.\n     * @return Amount of BNB that can be bought with input Tokens.\n     */\n    function getTokenToBnbInputPrice(uint256 tokens_sold)\n        public\n        view\n        returns (uint256)\n    {\n        require(tokens_sold > 0, \"token sold < 0\");\n        uint256 token_reserve = token.balanceOf(address(this));\n        uint256 bnb_bought = getInputPrice(\n            tokens_sold,\n            token_reserve,\n            address(this).balance\n        );\n        return bnb_bought;\n    }\n\n    /**\n     * @notice Public price function for Token to BNB trades with an exact output.\n     * @param bnb_bought Amount of output BNB.\n     * @return Amount of Tokens needed to buy output BNB.\n     */\n    function getTokenToBnbOutputPrice(uint256 bnb_bought)\n        public\n        view\n        returns (uint256)\n    {\n        require(bnb_bought > 0);\n        uint256 token_reserve = token.balanceOf(address(this));\n        return getOutputPrice(bnb_bought, token_reserve, address(this).balance);\n    }\n\n    /**\n     * @return Address of Token that is sold on this exchange.\n     */\n    function tokenAddress() public view returns (address) {\n        return address(token);\n    }\n\n    function bnbBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    function tokenBalance() public view returns (uint256) {\n        return token.balanceOf(address(this));\n    }\n\n    function getBnbToLiquidityInputPrice(uint256 bnb_sold)\n        public\n        view\n        returns (uint256)\n    {\n        require(bnb_sold > 0);\n        uint256 token_amount = 0;\n        uint256 total_liquidity = totalSupply();\n        uint256 bnb_reserve = address(this).balance;\n        uint256 token_reserve = token.balanceOf(address(this));\n        token_amount = ((bnb_sold * token_reserve) / bnb_reserve) + 1;\n        uint256 liquidity_minted = (bnb_sold * total_liquidity) / bnb_reserve;\n\n        return liquidity_minted;\n    }\n\n    function getLiquidityToReserveInputPrice(uint256 amount)\n        public\n        view\n        returns (uint256, uint256)\n    {\n        uint256 total_liquidity = totalSupply();\n        require(total_liquidity > 0);\n        uint256 token_reserve = token.balanceOf(address(this));\n        uint256 bnb_amount = (amount * address(this).balance) / total_liquidity;\n        uint256 token_amount = (amount * token_reserve) / total_liquidity;\n        return (bnb_amount, token_amount);\n    }\n\n    function txs(address owner) public view returns (uint256) {\n        return _txs[owner];\n    }\n\n    /// Exchange Liquidity Functions\n\n    /**\n     * @notice Deposit BNB && Tokens (STAKE) at current ratio to mint STOKE tokens.\n     * @dev min_liquidity does nothing when total SWAP supply is 0.\n     * @param min_liquidity Minimum number of STOKE sender will mint if total STAKE supply is greater than 0.\n     * @param max_tokens Maximum number of tokens deposited. Deposits max amount if total STOKE supply is 0.\n     * @return The amount of SWAP minted.\n     */\n    function addLiquidity(uint256 min_liquidity, uint256 max_tokens)\n        public\n        payable\n        returns (uint256)\n    {\n        require(\n            max_tokens > 0 && msg.value > 0,\n            \"Swap#addLiquidity: INVALID_ARGUMENT\"\n        );\n        uint256 total_liquidity = totalSupply();\n\n        uint256 token_amount = 0;\n\n        if (_providers[msg.sender] == false) {\n            _providers[msg.sender] = true;\n            providers += 1;\n        }\n\n        if (total_liquidity > 0) {\n            require(min_liquidity > 0);\n            uint256 bnb_reserve = address(this).balance - msg.value;\n            uint256 token_reserve = token.balanceOf(address(this));\n            token_amount = ((msg.value * token_reserve) / bnb_reserve) + 1;\n            uint256 liquidity_minted = (msg.value * total_liquidity) /\n                bnb_reserve;\n\n            require(\n                max_tokens >= token_amount && liquidity_minted >= min_liquidity\n            );\n            _mint(msg.sender, liquidity_minted);\n            require(\n                token.transferFrom(msg.sender, address(this), token_amount)\n            );\n\n            emit onAddLiquidity(msg.sender, msg.value, token_amount);\n            emit onLiquidity(msg.sender, balanceOf(msg.sender));\n            emit Transfer(address(0), msg.sender, liquidity_minted);\n            return liquidity_minted;\n        } else {\n            require(msg.value >= 1 ether, \"INVALID_VALUE\");\n            token_amount = max_tokens;\n            uint256 initial_liquidity = address(this).balance;\n            super._mint(msg.sender, initial_liquidity);\n            require(\n                token.transferFrom(msg.sender, address(this), token_amount)\n            );\n\n            emit onAddLiquidity(msg.sender, msg.value, token_amount);\n            emit onLiquidity(msg.sender, balanceOf(msg.sender));\n            emit Transfer(address(0), msg.sender, initial_liquidity);\n            return initial_liquidity;\n        }\n    }\n\n    /**\n     * @dev Burn SWAP tokens to withdraw BNB && Tokens at current ratio.\n     * @param amount Amount of SWAP burned.\n     * @param min_bnb Minimum BNB withdrawn.\n     * @param min_tokens Minimum Tokens withdrawn.\n     * @return The amount of BNB && Tokens withdrawn.\n     */\n    function removeLiquidity(\n        uint256 amount,\n        uint256 min_bnb,\n        uint256 min_tokens\n    ) public returns (uint256, uint256) {\n        require(amount > 0 && min_bnb > 0 && min_tokens > 0);\n        uint256 total_liquidity = totalSupply();\n        require(total_liquidity > 0);\n        uint256 token_reserve = token.balanceOf(address(this));\n        uint256 bnb_amount = (amount * address(this).balance) / total_liquidity;\n\n        uint256 token_amount = (amount * (token_reserve)) / total_liquidity;\n        require(bnb_amount >= min_bnb && token_amount >= min_tokens);\n        _burn(msg.sender, amount);\n        payable(msg.sender).transfer(bnb_amount);\n        require(token.transfer(msg.sender, token_amount));\n        emit onRemoveLiquidity(msg.sender, bnb_amount, token_amount);\n        emit onLiquidity(msg.sender, balanceOf(msg.sender));\n        emit Transfer(msg.sender, address(0), amount);\n        return (bnb_amount, token_amount);\n    }\n}\n",
  "sourceMap": "952:24359:8:-:0;;;1362:9;1327:44;;1549:27;;;-1:-1:-1;;1549:27:8;1572:4;1549:27;;;2831:326;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:1;;;;;;;;;;;-1:-1:-1;;;1978:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:1;;;;2044:13;;1978:113;;;2044:13;;:5;;:13;:::i;:::-;-1:-1:-1;2067:17:1;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;2996:5:8::1;:26:::0;;-1:-1:-1;;;;;2996:26:8;;::::1;-1:-1:-1::0;;;;;;2996:26:8;;::::1;;::::0;;;3047:15:::1;3032:12;:30:::0;3072:8:::1;:20:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;3102:5:::1;:14:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;3126:10:::1;:24:::0;;;;;::::1;::::0;::::1;;::::0;;952:24359;;640:96:6;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;952:24359:8:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;952:24359:8;;;-1:-1:-1;952:24359:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:16;93:13;;-1:-1:-1;;;;;135:31:16;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:464::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;527:59;;605:49;650:2;639:9;635:18;605:49;:::i;:::-;595:59;;196:464;;;;;;;:::o;665:380::-;744:1;740:12;;;;787;;;808:61;;862:4;854:6;850:17;840:27;;808:61;915:2;907:6;904:14;884:18;881:38;878:161;;;961:10;956:3;952:20;949:1;942:31;996:4;993:1;986:15;1024:4;1021:1;1014:15;878:161;;665:380;;;:::o;:::-;952:24359:8;;;;;;",
  "sourcePath": "contracts/StakeFountain.sol",
  "type": "contract"
}